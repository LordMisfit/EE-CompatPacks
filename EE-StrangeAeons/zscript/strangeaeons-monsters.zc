class RapidFireTrooper : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Rapid Assault Zombieman";
		Health 30;
		Radius 20;
		Height 56;
		Speed 10;
		PainChance 200;
		DamageFactor "Fire", 2.0;
		Painchance "Fire", 256;
		DamageFactor "Ice", 1.34;
		Painchance "Ice", 256;
		DamageFactor "CherryBomb", 1.5;
		Painchance "CherryBomb", 256;
		DamageFactor "Chop", 1.25;
		Painchance "Chop", 250;
		Painchance "Fist", 256; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 256; // Kick attacks have a +150% chance of stunning an enemy
		MONSTER;
		+FLOORCLIP;
		SeeSound "grunt/sight";
		AttackSound "grunt/attack";
		PainSound "grunt/pain";
		DeathSound "grunt/death";
		ActiveSound "grunt/active";
		Obituary "%o was cut down by a maniac with a machinegun.";
		Decal "BulletChip";
	}
	
	void A_Drop()
	{
		actor player = players[0].mo;
		int havecb = player.CountInv("CricketBat");
		int haveaj = player.CountInv("AppleJack");
		bool check1 = true;
		
		if (check1)
		{
			//Console.Printf("Check1");
			if (havecb <= 0) 
			{
				if (random(1,8) <= 1) A_DropItem("AppleJack",1,256);
												 else A_DropItem("CricketBat",1,256);
			}
			else
			if (haveaj <= 0) 
			{
				if (random(1,8) <= 1) A_DropItem("CricketBat",1,256);
												 else A_DropItem("AppleJack",1,256);
			}
			else
			{
				if (random(1,8) <= 1) 
				{
					if (random(1,2) <= 1) A_DropItem("AppleJack",1,256);
													 else A_DropItem("CricketBat",1,256);
				}
				else
				{
					if (random(1,2) <= 1) 
					{
						if (random(1,8) <= 1) A_DropItem("JackAmmoBig",1,256,ADI_FULLAMMO);
														 else A_DropItem("JackAmmo",1,256,ADI_FULLAMMO);
					}
					else
					{
						if (random(1,8) <= 1) A_DropItem("MalletAmmoBig",1,256,ADI_FULLAMMO);
														 else A_DropItem("MalletAmmo",1,256,ADI_FULLAMMO);
					}
				}
			}
		}
	}
	
	States 
	{ 
		Spawn: 
			RFTR A 0 NoDelay;
			RFTR AB 10 A_Look(); 
			loop;

		See: 
			RFTR A 0
			{
				user_shotsfired = 0;
			}
			RFTR AABBCCDD 3 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;

		Missile: 
			RFTR E 10
			{
				user_shotsfired = 0;
				A_FaceTarget();
				user_shotaccuracy = 22.5;
				user_shotzaccuracy = 0.0;
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); user_shotaccuracy = user_shotaccuracy * 6 / 9; user_shotzaccuracy = user_shotzaccuracy * 6 / 9; }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); user_shotaccuracy = user_shotaccuracy * 7 / 9; user_shotzaccuracy = user_shotzaccuracy * 7 / 9; }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); user_shotaccuracy = user_shotaccuracy * 8 / 9; user_shotzaccuracy = user_shotzaccuracy * 8 / 9; }
				user_shotaccuracy1 = user_shotaccuracy * -0.5;
				user_shotaccuracy2 = user_shotaccuracy * 0.5;
				user_shotzaccuracy1 = user_shotzaccuracy * -0.5;
				user_shotzaccuracy2 = user_shotzaccuracy * 0.5;
			}
			RFTR F 5 Bright
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_StartSound ("grunt/attack");

				if (exex_bulletstracers == 0)
				{
					A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(1,5) * 3, "BulletPuff", 0, CBAF_NORANDOM);
				}
				else
				{
					A_SpawnProjectile("ZombieBulletTracer", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
				}
			}
			RFTR E 5 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
			}
			TNT1 A 0 A_MonsterRefire(40,"See");
			Goto Missile+1;

		Pain: 
			RFTR G 3;
			RFTR G 3 A_EEPain();
			Goto See;

		Death:
			RFTR H 5;
			RFTR I 5 A_Scream();
			RFTR J 5
			{
				A_Fall();
				A_NoBlocking();
				A_Drop();
			}
			RFTR K 5;
			RFTR L -1;
			Stop;

		XDeath:
			RFTR M 5;
			RFTR N 5 A_XScream();
			RFTR N 5;
			RFTR P 5
			{
				A_Fall();
				A_NoBlocking();
				A_Drop();
			}
			RFTR QRS 5;
			RFTR T 5;
			RFTR U -1;
			Stop;

		Raise: 
			RFTR K 5;
			RFTR JIH 5;
			Goto See;

		Ice:
			RFTR G 5 A_GenericFreezeDeath();
			RFTR G 1 A_FreezeDeathChunks();
			wait;
	} 
}

class UndeadHunter : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Hunter of Leng";

		obituary "%o was killed and stuffed by the Men of Leng.";
		health 30;
		radius 22;
		height 56;
		mass 100;
		speed 10;
		painchance 70;
		DamageFactor "Fire", 2.0;
		Painchance "Fire", 140;
		DamageFactor "Ice", 1.34;
		Painchance "Ice", 94;
		DamageFactor "CherryBomb", 1.5;
		Painchance "CherryBomb", 105;
		DamageFactor "Chop", 1.25;
		Painchance "Chop", 88;
		DamageFactor "Lead", 2.5;
		Painchance "Lead", 175;
		Painchance "Fist", 105; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 175; // Kick attacks have a +150% chance of stunning an enemy
		activesound "shotguy/active";
		attacksound "shotguy/attack";
		painsound "undeadhunter/pain";
		deathsound "undeadhunter/death";
		seesound "undeadhunter/activate";
		Species "Leng People";
		MONSTER;
		+FLOORCLIP;
		+DONTHARMSPECIES;
		+DONTHARMCLASS;
	}
	
	void A_Drop()
	{
		actor player = players[0].mo;
		int havescr = player.CountInv("Scrambler");
		int havebla = player.CountInv("Blunderaxe");
		bool check1;
		if (player.CountInv("PlayingDoom1") > 0)
		{
			//Console.Printf("PD1");
			if (havescr <= 0) 
			{
				//Console.Printf("havescr0");
				if (random(1,32) <= 1) A_DropItem("Scrambler",1,256);
				else check1 = true;
			}
			else check1 = true;
		}
		else check1 = true;
		
		if (check1)
		{
			//Console.Printf("Check1");
			if (havebla <= 0) 
			{
				A_DropItem("Blunderaxe",1,256);
			}
			else
			{
				if (random(1,8) <= 1) 
				{
					A_DropItem("Blunderaxe",1,256);
				}
				else
				{
					if (random(1,8) <= 1) A_DropItem("BlunderAmmoBig",1,256,ADI_FULLAMMO);
													 else A_DropItem("BlunderAmmo",1,256,ADI_FULLAMMO);
				}
			}
		}
	}
	
	states
	{
		Spawn:
			DEHU AB 10 A_Look();
			loop;

		See:
			DEHU A 0
			{
				user_shotsfired = 0;
			}
			DEHU AABBCCDD 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			DEHU E 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			DEHU F 4 bright //A_SPosAttack
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();

				A_StartSound("shotguy/attack");
				if (GetCVar("dvds_shotgunnerspread") == 0) { user_pelletsfired = 3; } else { user_pelletsfired = 7; }
	
				if (exex_bulletstracers == 0) // Hitscan
				{
					A_CustomBulletAttack(22.4, 5.68, user_pelletsfired, random(1,5) * 3, "BulletPuff", 0, 1);
				}
				else
				{
					for (user_currenttracer = 0; user_currenttracer < user_pelletsfired; user_currenttracer++)
					{
						A_SpawnProjectile("ZombieBulletTracer", 32, 12, frandom(-11.2,11.2), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-2.84,2.84));
					}
				}
			}
			DEHU E 8
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(7); }
				A_FaceTarget();
			}
			goto See;

		Pain:
			DEHU G 2;
			DEHU G 2 A_EEPain();
			goto See;

		Death:
			DEHU H 5;
			DEHU I 5 A_Scream();
			DEHU J 5
			{
				A_NoBlocking();
				A_Drop();
			}
			DEHU KLM 5;
			DEHU N -1;
			stop;

		XDeath:
			DEHU O 5 A_XScream();
			DEHU P 5 A_StartSound("undeadhunter/xdeath");
			DEHU Q 5 
			{
				A_NoBlocking();
				A_Drop();
			}
			DEHU RSTUV 5;
			DEHU W -1;
			stop;

		Raise:
			DEHU MLKJIH 3;
			goto See;

		Ice:
			DEHU G 5 A_GenericFreezeDeath();
			DEHU G 1 A_FreezeDeathChunks();
			wait;
	}
}

class UndeadPriest : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Chieftain of Leng";

		obituary "%o was bagged by a Leng Chieftain.";
		health 100;
		gibhealth 50;
		radius 20;
		height 56;
		mass 125;
		speed 10;
		Painchance 70;
		DamageFactor "Fire", 2.0;
		Painchance "Fire", 140;
		DamageFactor "Ice", 1.34;
		Painchance "Ice", 94;
		DamageFactor "CherryBomb", 1.5;
		Painchance "CherryBomb", 105;
		DamageFactor "Chop", 1.25;
		Painchance "Chop", 88;
		DamageFactor "Lead", 2.5;
		Painchance "Lead", 175;
		Painchance "Fist", 105; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 175; // Kick attacks have a +150% chance of stunning an enemy
		decal "BulletChip";
		painsound "undeadhunter/pain";
		deathsound "undeadhunter/death";
		seesound "undeadhunter/activate";
		MONSTER;
		Species "Leng People";
		+FLOORCLIP;
		+DONTHARMSPECIES;
		+DONTHARMCLASS;
	}
	
	void A_Drop()
	{
		actor player = players[0].mo;
		int havescr = player.CountInv("Scrambler");
		int havebla = player.CountInv("Blunderaxe");
		bool check1;
		if (player.CountInv("PlayingDoom1") > 0)
		{
			//Console.Printf("PD1");
			if (havescr <= 0) 
			{
				//Console.Printf("havescr0");
				if (random(1,32) <= 1) 
				{
					A_DropItem("Scrambler",1,192);
					A_DropItem("Scrambler",1,192);
				}
				else check1 = true;
			}
			else check1 = true;
		}
		else check1 = true;
		
		if (check1)
		{
			//Console.Printf("Check1");
			if (havebla <= 0) 
			{
				A_DropItem("Blunderaxe",1,192);
				A_DropItem("Blunderaxe",1,192);
			}
			else
			{
				if (random(1,8) <= 1) 
				{
					A_DropItem("Blunderaxe",1,192);
					A_DropItem("Blunderaxe",1,192);
				}
				else
				{
					if (random(1,8) <= 1) A_DropItem("BlunderAmmoBig",1,128,ADI_FULLAMMO);
													 else A_DropItem("BlunderAmmo",1,128,ADI_FULLAMMO);
					if (random(1,8) <= 1) A_DropItem("BlunderAmmoBig",1,96,ADI_FULLAMMO);
													 else A_DropItem("BlunderAmmo",1,96,ADI_FULLAMMO);
				}
			}
		}
	}
	
	states
	{
		Spawn:
			UNDP A 10 A_Look();
			loop;

		See:
			UNDP A 0
			{
				user_shotsfired = 0;
			}
			UNDP A 0 A_Jump (32, "Run");
			UNDP AABBCCDD 3
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Run:
			UNDP A 0
			{
				user_shotsfired = 0;
			}
			UNDP A 0 A_Jump (24, "See");
			UNDP AABBCCDD 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Missile:
			UNDP E 10 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			UNDP F 5 bright 
			{
				user_pelletsfired = 5;

				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }

				A_StartSound("UndeadPriest/Shoot",CHAN_6);
				if (exex_bulletstracers == 0) // Hitscan
				{
					A_CustomBulletAttack(7, 7, user_pelletsfired, random(2,3) * random(1,5), "BulletPuff", 0, 1);
				}
				else
				{
					for (user_currenttracer = 0; user_currenttracer < user_pelletsfired; user_currenttracer++)
					{
						A_SpawnProjectile("UPriestBulletTracer", 32, 12, frandom(-3.5,3.5), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-3.5,3.5));
					}
				}
			}
			UNDP E 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_SentinelRefire();
			}
			UNDP E 10 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			UNDP F 5 bright 
			{
				user_pelletsfired = 5;

				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }

				A_StartSound("UndeadPriest/Shoot2",CHAN_7);
				if (exex_bulletstracers == 0) // Hitscan
				{
					A_CustomBulletAttack(7, 7, user_pelletsfired, random(2,3) * random(1,5), "BulletPuff", 0, 1);
				}
				else
				{
					for (user_currenttracer = 0; user_currenttracer < user_pelletsfired; user_currenttracer++)
					{
						A_SpawnProjectile("UPriestBulletTracer", 32, 12, frandom(-3.5,3.5), CMF_OFFSETPITCH|CMF_BADPITCH, frandom(-3.5,3.5));
					}
				}
			}
			UNDP E 10 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			UNDP E 0 A_Jump (32, "Run");
			goto See;

		Pain:
			UNDP G 3;
			UNDP G 3 A_EEPain();
			goto See;

		Death:
			UNDP H 6;
			UNDP I 6 A_Scream();
			UNDP JK 6;
			UNDP L 6 
			{
				A_NoBlocking();
				A_Drop();
			}
			UNDP M 6;
			UNDP N -1;
			Stop;

		XDeath:
			UNDP O 5 A_XScream();
			UNDP P 5;
			UNDP R 5
			{
				A_NoBlocking();
				A_Drop();
			}
			UNDP STUVW 5;
			UNDP X -1;
			Stop;

		Raise:
			UNDP NMLKJIH 6;
			goto See;

		Ice:
			UNDP G 5 A_GenericFreezeDeath();
			UNDP G 1 A_FreezeDeathChunks();
			wait;
	}
}

// Bullet Tracers
class UPriestBulletTracer : ZombieBulletTracer
{
	default
	{
		Tag "shot";
		DamageFunction ((Random(1,5) * random(2,3)));
		Damagetype "Bullet";
		Radius 1;
		Height 1;
		Mass 5;
		Speed 160; // 80
		PROJECTILE;
		+DONTREFLECT;
		+BLOODSPLATTER;
		+NODAMAGETHRUST;
		Renderstyle "Add";
		Alpha 1.0;
		Scale 0.5;
		decal "BulletChip";
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay bright;
		Idle:
			TNT1 A 1 bright A_SpawnTracerTrail("ZombieBulletTracerTrail",6,-2.5);
			loop;
		XDeath:
			TNT1 A 1; //A_SpawnItem("BulletPuff")
			stop;
		Death:
		Crash:
			TNT1 A 1 A_SpawnItem("BulletPuff");
			stop;
	}
}

class NightmareNew : EECreature
{
	int wispint;
	int wispintmax;
	default
	{
		Tag "Nightmare";
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Health 90;
		Radius 20;
		Height 56;
		Speed 15;
		PainChance 144;
		Painchance "Fist", 216; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 256; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Suck", 256;
		DamageFactor "Eldritch", 0.4;
		DamageFactor "Suck", 2.5;
		DamageFactor "Fist", 1.67;
		DamageFactor "Kick", 1.67;
		MONSTER;
		-NOPAIN;
		+FLOORCLIP;
		+STEALTH;
		+THRUSPECIES;
		+NOFEAR;
		+NOTARGET;
		+DONTTHRUST;
		+GHOST;
		+DONTBLAST;
		+NOINFIGHTSPECIES;
		Species "Nightmare";
		RenderStyle "Add";
		Alpha 0.01;
		SeeSound "nightmare/sight";
		PainSound "nightmare/pain";
		DeathSound "nightmare/death";
		ActiveSound "nightmare/active";
		MeleeSound "nightmare/melee";
		HitObituary "%o was tormented by a nightmare.";
		MeleeDamage 4;
	}
	
	States
	{
		Spawn:
			NMRE A 0 NoDelay 
			{
				A_NightmarePhaseOut();
				wispintmax = random(3,5);
			}
			NMRE AABB 5 A_Look();
			Loop;

		See:
			NMRE AABBCCDD 3
			{
				wispint++;
				if (wispint >= wispintmax)
				{
					wispint = 0;
					wispintmax = random(3,5);
					if (random(1,8) <= randompick(1,1,1,2,2,3))
					{
						A_DynamicMusic(matktype:11);
						A_SpawnProjectile("NightmareWisp",0,0,0); 
					}
				}
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 45) { A_SetTics(2); }
				A_NightmarePhaseOut();
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;

		Melee:
			TNT1 A 0 
			{
				A_DynamicMusic();
				A_NightmarePhaseIn();
			}
			NMRE EF 9 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > random(67,68)) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 45) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > random(22,23)) { A_SetTics(8); }
				A_NightmarePhaseIn();
				A_FaceTarget();
			}
			NMRE G 9 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > random(67,68)) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 45) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > random(22,23)) { A_SetTics(8); }
				A_NightmarePhaseIn();
				A_FaceTarget();
				
				A_CustomMeleeAttack(4*random(1,8),"nightmare/melee");
			}
			Goto See;
		
		Pain:
			NMRE H 2 
			{
				A_NightmarePhaseIn();
			}
			NMRE H 10 
			{
				A_NightmarePhaseIn();
				A_EEPain();
			}
			Goto See;
		Pain.Suck:
			NMRE H 2 
			{
				A_NightmarePhaseIn();
			}
			NMRE H 10 
			{
				A_NightmarePhaseIn();
				A_EEPain();
			}
			NMRE HHH 2;
			Goto See;

		Death:
			NMRE I 3 A_ScreamAndUnblock();
			NMRE JKLMNO 3;
			Stop;
			
		Ice:
			NMRE H 5 A_GenericFreezeDeath();
			NMRE H 1 A_FreezeDeathChunks();
			wait;
	}
}

class NightmareWisp : EEBaseZSC
{
	default
	{
		Radius 4;
		Height 8;
		Speed 0;
		Damage 0;
		RenderStyle "Add";
		Alpha 0.4;
		PROJECTILE;
		+NOCLIP;
	}
	
	States
	{
		Spawn:
			NMRE IJKLMNO 3;
			Stop;
	}
}

// Flayworm, based on Slimeworm by Captain toenail//
class SlimeWorm : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		obituary "%o was devoured by a flayworm.";
		Tag "Flayworm";
		health 120;
		painchance 90;
		DamageFactor "Fire", 1.5;
		Painchance "Fire", 135;
		DamageFactor "Ice", 1.625;
		Painchance "Ice", 147;
		DamageFactor "Suck", 0.5;
		Painchance "Suck", 45;
		DamageFactor "CherryBomb", 1.25;
		Painchance "CherryBomb", 113;
		DamageFactor "Chop", 1.25;
		Painchance "Chop", 113;
		DamageFactor "Breakfast", 0.4;
		Painchance "Breakfast", 36;
		DamageFactor "Bonk", 0.875;
		Painchance "Bonk", 79;
		DamageFactor "Cricket", 1.5;
		Painchance "Cricket", 240;
		DamageFactor "Dust", 1.5;
		Painchance "Dust", 240;
		Painchance "Fist", 135; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 225; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 0.7; // 5.6
		speed 10;
		radius 20;
		height 56;
		mass 250;
		seesound "slimeworm/sight";
		attacksound "slimeworm/melee";
		painsound "slimeworm/pain";
		deathsound "slimeworm/death";
		activesound "slimeworm/active";
		bloodcolor "yellow";
		MONSTER;
		+FLOORCLIP;
	}
	
	states
	{
		Spawn:
			WORM AB 10 A_Look();
			loop;

		See:
			WORM AABBCCDD 2 Fast
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Melee:
			WORM EF 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
			}
			WORM G 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
				A_CustomMeleeAttack(random(1,10)*4,"none","none","Melee",true); // A_SargAttack
			}
			goto See;

		Pain:
			WORM H 2;
			WORM H 2 A_EEPain();
			goto See;

		Death:
			WORM I 8;
			WORM J 8 A_Scream();
			WORM K 4;
			WORM L 4 A_NoBlocking();
			WORM M 4;
			WORM N -1;
			stop;

		Raise:
			WORM NMLKJI 5;
			goto See;
			
		Ice:
			WORM H 5 A_GenericFreezeDeath();
			WORM H 1 A_FreezeDeathChunks();
			wait;
	}
}

class SlimeBall1 : DoomImpBall
{
	default
	{
		radius 4;
		height 4;
		speed 14;
		damage 4;
		seesound "null";
		deathsound "slimeball/splat";
		scale 0.5;
		-NOGRAVITY;
		Decal "PlasmaScorchLower";
	}
	
	states
	{
		Spawn:
			BOGY ABC 2 bright;
			loop;
		Death:
			BOGY D 0 bright A_NoGravity();
			BOGY DEF 4 bright;
			stop;
	}
}

class SlimeBall2 : SlimeBall1
{
	default
	{
		speed 16;
	}
}

class SlimeBall3 : SlimeBall1
{
	default
	{
		speed 18;
	}
}

class SlimeBall4 : SlimeBall1
{
	default
	{
		speed 20;
	}
}

class SlimeBall5 : SlimeBall1
{
	default
	{
		speed 22;
	}
}

class StarVampire : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Star Vampire";
		Health 60;
		Radius 20;
		Height 56;
		mass 250;
		Speed 15;
		PainChance 144;
		DamageFactor "Fire", 1.5;
		Painchance "Fire", 216;
		DamageFactor "Ice", 1.625;
		Painchance "Ice", 234;
		DamageFactor "Suck", 0.5;
		Painchance "Suck", 72;
		DamageFactor "CherryBomb", 1.25;
		Painchance "CherryBomb", 180;
		DamageFactor "Chop", 1.25;
		Painchance "Chop", 180;
		DamageFactor "Breakfast", 0.4;
		Painchance "Breakfast", 58;
		DamageFactor "Bonk", 0.875;
		Painchance "Bonk", 126;
		DamageFactor "Cricket", 1.5;
		Painchance "Cricket", 216;
		DamageFactor "Dust", 1.5;
		Painchance "Dust", 216;
		Painchance "Fist", 216; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 0.7; // 5.6
		MONSTER;
		+STEALTH;
		+NOGRAVITY;
		+FLOAT;
		RenderStyle "Add";
		Alpha 0.4;
		SeeSound "starvamp/sight";
		PainSound "starvamp/pain";
		DeathSound "starvamp/death";
		ActiveSound "starvamp/active";
		MeleeSound "starvamp/melee";
		HitObituary "%o was drained by a star vampire.";
		MeleeDamage 4;
	}
	
	States
	{
		Spawn:
			VAMP AB 10 A_Look();
			Loop;
		See:
			VAMP AABBCCDD 3 Fast
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }

				A_FastChaseCalc(4,16);
				if (random(1,256) <= user_fastchasechance) { A_EEChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); A_FloatSetFChaseT(randompick(0,4)); } else { A_EEChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			Loop;
		Melee:
			VAMP E 0
			{
				user_painfastchase = 0;
			}
			VAMP EF 9 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 135) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 45) { A_SetTics(8); }
				A_FaceTarget();
			}
			VAMP G 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_CustomMeleeAttack(4*random(1,10),"starvamp/melee","none");
			}
			Goto See;

		Pain:
			VAMP H 5;
			VAMP H 5
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			Goto See;

		Death:
			VAMP I 3 A_ScreamAndUnblock();
			VAMP JKLM 5;
			VAMP N -1;
			Stop;

		Ice:
			VAMP H 5 A_GenericFreezeDeath();
			VAMP H 1 A_FreezeDeathChunks();
			wait;
	}
}

class Spiderbaby : RailArachnotron replaces RailArachnotron
{
	default
	{
		Health 300; // 600
		Radius 22; // 64
		Height 64;
		Mass 300; // 600
		Speed 10; // 12
		PainChance 50;
		DamageFactor "Fire", 0.75;
		Painchance "Fire", 38;
		DamageFactor "Ice", 1.334;
		Painchance "Ice", 67;
		DamageFactor "CherryBomb", 0.875;
		Painchance "CherryBomb", 44;
		DamageFactor "Bonk", 0.625;
		Painchance "Bonk", 31;
		DamageFactor "Cricket", 0.5;
		Painchance "Cricket", 25;
		DamageFactor "Breakfast", 1.5;
		Painchance "Breakfast", 75;
		DamageFactor "Suck", 0.25;
		Painchance "Suck", 13;
		DamageFactor "Zap", 1.5;
		Painchance "Zap", 75;
		DamageFactor "Holy", 2; // Demons = +200% Holy Damage
		Painchance "Holy", 150; // Demons = +300% Pain Chance
		Damagefactor "Crush", 0.65;
		Painchance "Fist", 75; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 125; // Kick attacks have a +150% chance of stunning an enemy
		Damage 30;
		Monster;
		+FLOORCLIP;
		SeeSound "baby/sight";
		PainSound "baby/pain";
		DeathSound "baby/death";
		ActiveSound "baby/active";
		Obituary "%o was splattered by a spiderbaby.";
		Decal "RedRailScorch";
		Species "Arachnotron";
		Tag "Arachnotron";
	}
	
	States
	{
		See:
			RSPI A 0;
			RSPI A 20;
			RSPI AABBCCDDEEFF 3
			{
				user_walksound++;
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				if (user_walksound == 1) { A_BabyMetal(); } else { A_EEChase("Melee","Missile",0,1,3,1,1); }
				if (user_walksound >= 6) { user_walksound = 0; }
			}
			goto See+2;
	}
}

class DemonWizard : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Health 220;
		Radius 22;
		Height 60;
		Speed 12;
		PainChance 64;
		DamageFactor "Fire", 1.75;
		Painchance "Fire", 112;
		DamageFactor "Ice", 0.75;
		Painchance "Ice", 48;
		DamageFactor "CherryBomb", 1.375;
		Painchance "CherryBomb", 88;
		DamageFactor "Bonk", 1.25;
		Painchance "Bonk", 80;
		DamageFactor "Cricket", 0.75;
		Painchance "Cricket", 48;
		DamageFactor "Lead", 1.0;
		Painchance "Lead", 64;
		DamageFactor "Chop", 2.0;
		Painchance "Chop", 128;
		DamageFactor "Breakfast", 1.75;
		Painchance "Breakfast", 112;
		DamageFactor "Suck", 2.00;
		Painchance "Suck", 128;
		DamageFactor "Dust", 1.25;
		Painchance "Dust", 80;
		DamageFactor "Zap", 0.625;
		Painchance "Zap", 40;
		DamageFactor "BRocket", 0.75;
		Painchance "BRocket", 48;
		DamageFactor "Popper", 2.0;
		Painchance "Popper", 128;
		DamageFactor "Spinner", 0.75;
		Painchance "Spinner", 48;
		DamageFactor "Beats", 2.0;
		Painchance "Beats", 128;
		Painchance "Fist", 96; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 160; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 0.8; // 6.4
		Monster;
		+FLOAT;
		+NOGRAVITY;
		SeeSound "DWizard/See";
		PainSound "DWizard/Pain";
		DeathSound "DWizard/Death";
		ActiveSound "DWizard/Active";
		Obituary "%o couldn't grasp the power of the Demon Wizard.";
		Tag "Demon Wizard";
		DropItem "PikeAmmo", 32;
		DropItem "PikeAmmo", 8;
		DropItem "PikeAmmoBig", 4;
		DropItem "PikeAmmoBig", 1;
	}
	
	States
	{
		Spawn:
			WDEM A 10 A_Look();
			Loop;

		See:
			WDEM AAA 3
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;

		Missile:
			WDEM B 4
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			WDEM C 4 Bright 
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			WDEM D 3 Bright 
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();

				A_SpawnProjectile("WDemonProj",46,8,-3,0,0);
				A_SpawnProjectile("WDemonProj2",46,-8,3,0,0);
			}
			WDEM D 3
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();
			}
			WDEM D 3 Bright 
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();

				A_SpawnProjectile("WDemonProj",46,8,-3,0,0);
				A_SpawnProjectile("WDemonProj2",46,-8,3,0,0);
			}
			WDEM D 3
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();
			}
			WDEM D 3 Bright 
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();

				A_SpawnProjectile("WDemonProj",46,8,-3,0,0);
				A_SpawnProjectile("WDemonProj2",46,-8,3,0,0);
			}
			WDEM D 3
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();
			}
			Goto See;

		Pain:
			WDEM E 5 A_FloatPain(0,8,64);
			Goto See;

		Death:
			WDEM F 6 Bright A_Scream();
			WDEM G 5 Bright A_NoBlocking();
			WDEM H 5 Bright;
			WDEM I 5 Bright;
			WDEM JK 4 Bright;
			WDEM L 4 A_SpawnItemEx("BishopPuff",0,0,40,0,0,0.5);
			WDEM M 4 A_QueueCorpse();
			WDEM N -1;
			Stop;

		Ice:
			WDEM E 5 A_GenericFreezeDeath();
			WDEM E 1 A_FreezeDeathChunks();
			wait;
	}
}

class WDemonProj : EEProjectile
{
	default
	{
		Tag "Demonshock Blast";
		Radius 10;
		Height 6;
		Speed 10;
		DamageFunction (2 * random(1,8));
		Projectile;
		RenderStyle "Translucent";
		Alpha 0.8;
		SeeSound "WDProj/Fire";
		DeathSound "WDProj/Xplode";
		Decal "WizardScorch";
	}
	
	States
	{
		Spawn:
			WBOL AABBCCDD 1 Bright 
			{
				A_Weave(3,0,1.0,0.0);
			}
			Loop;
		Death:
			WBOL EFG 4 Bright;
			Stop;
	}
}

class WDemonProj2 : WDemonProj
{
	default
	{
		Tag "Demonshock Blast";
	}
	States
	{
		Spawn:
			WBOL AABBCCDD 1 Bright 
			{
				A_Weave(-3,0,1.0,0.0);
			}
			Loop;
		Death:
			WBOL EFG 4 Bright;
			Stop;
	}
}

class GlaakiPeekDefense : PowerProtection
{
	default
	{
		damagefactor "normal", 1.00;
		inventory.icon "";
		Powerup.Duration 2147483646;
	}
	
	override void ModifyDamage(int damage, Name damageType, out int newdamage, bool passive, Actor inflictor, Actor source, int flags)
	{
		actor player = players[0].mo;
		let MiscItem = PlayerStatItem(Player.FindInventory("PlayerStatItem"));
		if (passive && damage > 0)
		{
			double TOTALFactor = 0.4;
			if (damageType == "Suck") TOTALFactor = 1.0;
			newdamage = max(0, ApplyDamageFactors(GetClass(), damageType, damage, damage * TOTALFactor));
			if (dydudebug_defensebuffs) Console.Printf("(%s) TOTALFactor: %.8f, damage: %d [%d]", GetClassName(), TOTALFactor, newdamage, damage);
		}
	}
}
class GlaakiBiteVulnerability : PowerProtection 
{
	default
	{
		damagefactor "normal", 1.0;
		inventory.icon "";
		Powerup.Duration 2147483646; 
	} 
	
	override void ModifyDamage(int damage, Name damageType, out int newdamage, bool passive, Actor inflictor, Actor source, int flags)
	{
		actor player = players[0].mo;
		let MiscItem = PlayerStatItem(Player.FindInventory("PlayerStatItem"));
		if (passive && damage > 0)
		{
			double TOTALFactor = 2.5;
			if (damageType == "Suck") TOTALFactor = 1.0;
			newdamage = max(0, ApplyDamageFactors(GetClass(), damageType, damage, damage * TOTALFactor));
			if (dydudebug_defensebuffs) Console.Printf("(%s) TOTALFactor: %.8f, damage: %d [%d]", GetClassName(), TOTALFactor, newdamage, damage);
		}
	}
}
class GlaakiSpawn : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Health 150;
		Speed 5;
		Radius 16;
		Height 29;
		Mass 4000;
		Painchance 0;
		DamageFactor "Crush", 0.0; // 0.0
		DamageFactor "Bonk", 0.25;
		DamageFactor "Chop", 4.0;
		DamageFactor "Suck", 0.5;
		DamageFactor "Cricket", 2.0;
		DamageFactor "Lead", 2.0;
		DamageFactor "Breakfast", 0.5;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 0.4;
		DamageFactor "Beats", 2.5;
		DamageFactor "Fire", 2.0;
		DamageFactor "Ice", 0.5;
		DamageFactor "CherryBomb", 1.5;
		DamageFactor "Spinner", 1.5;
		DamageFactor "BRocket", 1.5;
		DamageFactor "Popper", 5.0;
		Monster
		+FLOORCLIP;
		+LOOKALLAROUND;
		+NOTARGET;
		+DONTTHRUST;
		+NOPAIN;
		SeeSound "slgmsee";
		DeathSound "slgmdie";
		Obituary "%o was eaten by the spawn of Glaaki.";
		Tag "Spawn of Glaaki";
	}
	
	States
	{
		Spawn:
			SLGM A 0 A_Look();
			TNT1 A 0
			{
				A_UnsetShootable();
				A_SetInvulnerable();
				A_SetInventory("GlaakiPeekDefense",1);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			TNT1 A 1 A_Look();
			Goto Spawn+1;
		See:
			TNT1 A 0 
			{
				bNOTARGET = false;
				bDONTTHRUST = false;
				bCANTSEEK = false;
			}
			TNT1 A 0 A_JumpIfInventory("RiseCheck",1,"Walk");
			TNT1 A 0 A_GiveInventory("RiseCheck",1);
			TNT1 A 0 
			{
				A_SetShootable();
				A_UnsetInvulnerable();
				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			SLGM ABCDEFGHHHVWXY 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
			}
			Loop;
		Walk:
			TNT1 A 0 
			{
				A_UnsetShootable();
				A_SetInvulnerable();
				A_SetInventory("GlaakiPeekDefense",1);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			TNT1 A 0
			{
				bNOTARGET = true;
				bDONTTHRUST = true;
				bCANTSEEK = true;
			}
			TNT1 AA 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			TNT1 A 0 A_Jump(8,"PeekUp");
			Loop;
		PeekUp:
			TNT1 A 0
			{
				bNOTARGET = false;
				bDONTTHRUST = false;
				bCANTSEEK = false;
			}
			TNT1 A 0 
			{
				A_SetShootable();
				A_UnsetInvulnerable();
				A_SetInventory("GlaakiPeekDefense",1);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			SLGM ABCDEFG 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
			}
			SLGM HZ 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 270) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
			}
			SLGM \ 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 270) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
			}
			SLGM ZH 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 270) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
			}
			SLGM VWXY 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
			}
			Goto Walk;
		Melee:
			TNT1 A 0
			{
				bNOTARGET = false;
				bDONTTHRUST = false;
				bCANTSEEK = false;
			}
			TNT1 A 0
			{
				A_SetShootable();
				A_UnsetInvulnerable();
				A_SetInventory("GlaakiPeekDefense",1);
				A_SetInventory("GlaakiBiteVulnerability",1);
			}
			SLGM IJK 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
				A_SetInventory("GlaakiPeekDefense",1);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			SLGM LMN 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			SLGM O 6
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_CustomMeleeAttack(20*random(1,8), "slgmbite", "slgmbite", "Melee", true);
				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",1);
			}
			SLGM NML 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			SLGM KJI 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
				A_SetInventory("GlaakiPeekDefense",1);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			Goto Walk;
			
		Pain:
			Goto See;
			
		Death:
			SLGM VWXY 5;
			TNT1 A 5;
			TNT1 AAAA 0 A_EEWander(0,1,3,1,1);
			SLGM P 5 A_Scream();
			SLGM QRST 5;
			SLGM U 5 A_NoBlocking();
			SLGM U -1;
			Stop;

		Raise:
			SLGW N 5;
			SLGW MLKJI 5;
			Goto See;

		Ice:
			SLGM V 5 A_GenericFreezeDeath();
			SLGM V 1 A_FreezeDeathChunks();
			wait;
	}
}

class DholePeekDefense : PowerProtection 
{
	default
	{
		damagefactor "normal", 0.70;
		inventory.icon "";
		Powerup.Duration 2147483646;
	} 
}
class DholeBiteVulnerability : PowerProtection
{
	default
	{
		damagefactor "normal", 1.75;
		inventory.icon "";
		Powerup.Duration 2147483646;
	} 
}
class Dhole : EECreature replaces Cyberdemon
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Dhole";
		Health 2000;
		Speed 25;
		Radius 50;
		Height 110;
		Mass 10000;
		scale 2.0;
		Painchance 0;
		DamageFactor "Crush", 0.15;
		DamageFactor "Bonk", 0.25;
		DamageFactor "Chop", 4.0;
		DamageFactor "Suck", 0.0;
		DamageFactor "Cricket", 0.5;
		DamageFactor "Lead", 0.1;
		DamageFactor "Breakfast", 10.0;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 10.0;
		DamageFactor "Beats", 0.1;
		DamageFactor "Fire", 0.125;
		DamageFactor "Ice", 0.125;
		DamageFactor "CherryBomb", 0.5625;
		DamageFactor "Spinner", 0.5625;
		DamageFactor "BRocket", 0.5625;
		DamageFactor "Popper", 0.1;
		Monster;
		+NOPAIN;
		+FLOORCLIP;
		+LOOKALLAROUND;
		+NOTARGET;
		+NORADIUSDMG;
		+BOSSDEATH;
		+BOSS;
		SeeSound "dholsee";
		DeathSound "dholdie";
		Obituary "%o was flattened by a dhole.";
		dropitem "Backpack", 2;
		dropitem "Backpack", 2;
	}
	
	States
	{
		Spawn:
			DHOL A 0 NoDelay;
			TNT1 A 0
			{
				A_UnsetShootable();
				A_SetInvulnerable();
				A_SetInventory("DholePeekDefense",1);
				A_SetInventory("DholeBiteVulnerability",0);
			}
			TNT1 A 1 A_Look();
			Goto Spawn+1;

		See:
			TNT1 A 0 
			{
				bNOTARGET = false;
				bDONTTHRUST = false;
				bCANTSEEK = false;
			}
			TNT1 A 0 A_JumpIfInventory("RiseCheck",1,"Walk");
			TNT1 A 0 A_GiveInventory("RiseCheck",1);
			TNT1 A 0 
			{
				A_UnsetShootable();
				A_SetInvulnerable();
				A_SetInventory("DholePeekDefense",1);
				A_SetInventory("DholeBiteVulnerability",0);
			}
			Loop;
		
		Walk:
			TNT1 A 0 
			{
				A_UnsetShootable();
				A_SetInvulnerable();
				A_SetInventory("DholePeekDefense",1);
				A_SetInventory("DholeBiteVulnerability",0);
			}
			TNT1 A 0
			{
				bNOTARGET = true;
				bDONTTHRUST = true;
				bCANTSEEK = true;
			}
			TNT1 A 0 Radius_Quake(4,8,0,16,0);
			TNT1 AA 2
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
				A_SetInventory("DholeBiteVulnerability",0);
			}
			Loop;
		
		Melee:
		Missile:
			TNT1 A 0
			{
				bNOTARGET = false;
				bDONTTHRUST = false;
				bCANTSEEK = false;
			}
			TNT1 A 0
			{
				A_SetShootable();
				A_UnsetInvulnerable();
				A_SetInventory("DholePeekDefense",1);
				A_SetInventory("DholeBiteVulnerability",1);
			}
			DHOL A 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
				A_SetInventory("GlaakiPeekDefense",1);
				A_SetInventory("GlaakiBiteVulnerability",0);
				A_Explode();
			}
			DHOL BCDE 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
				A_SetInventory("GlaakiPeekDefense",1);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			DHOL FGHIJ 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			DHOL J 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",1);
			}
			DHOL K 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 300) { A_SetTics(1); }
				A_CustomMeleeAttack(20*random(1,10), "dholbite", "dholbite", "Melee", true);
				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",1);
			}
			DHOL K 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 300) { A_SetTics(1); }

				A_SpawnProjectile("GrellBall", 80, 0, -8, 0);

				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",1);
			}
			DHOL K 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 300) { A_SetTics(1); }

				A_SpawnProjectile("GrellBall", 90, 0, 0, 0);

				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",1);
			}
			DHOL K 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 300) { A_SetTics(1); }

				A_SpawnProjectile("GrellBall", 80, 0, 8, 0);

				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",1);
			}
			DHOL M 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",1);
			}
			DHOL FED 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
				A_SetInventory("GlaakiPeekDefense",0);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			DHOL CB 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
				A_SetInventory("GlaakiPeekDefense",1);
				A_SetInventory("GlaakiBiteVulnerability",0);
			}
			DHOL A 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
				A_SetInventory("GlaakiPeekDefense",1);
				A_SetInventory("GlaakiBiteVulnerability",0);
				A_Explode();
			}
			Goto Walk;

		Death:
			DHOL O 1 A_NoBlocking;
			DHOL OOOOOOOOOOOOOOOOOOOOOOO 5 Bright A_SpawnProjectile("DholeDeathExplosion",0+random(20,120),0,0+random(0,370),0);
			DHOL O 1 A_Scream();
			DHOL O 1 A_BossDeath();
			TNT1 AAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnProjectile("DholeGibber",50,0,random(0,359));
			TNT1 A 0 A_SpawnProjectile("DholeBigExplosion",0,0,0);
			TNT1 A 0 Radius_Quake(8,40,0,35,0);
			Stop;
		Ice:
			DHOL O 5 A_GenericFreezeDeath();
			DHOL O 1 A_FreezeDeathChunks();
			wait;
	}
}

class DholeGibber : EEBaseZSC
{
	default
	{
		radius 20;
		height 20;
		+NOINTERACTION;
	}
	
	states
	{
		Spawn:
			NULL A 0 A_Gravity();
			NULL A 0;
			NULL A 0 A_StartSound("darkinquisitor/gibbage");
			NULL A 1 A_SpawnItemEx ("Fleshspawngib1", 0, 0, random(0,42), random(2,6), random(2,6), 0, random(0,360), 160);
			NULL A 1 A_SpawnItemEx ("Fleshspawngib2", 0, 0, random(0,42), random(2,6), random(2,6), 0, random(0,360), 160);
			NULL A 1 A_SpawnItemEx ("Fleshspawngib3", 0, 0, random(0,42), random(2,6), random(2,6), 0, random(0,360), 160);
			NULL A 1 A_SpawnItemEx ("Fleshspawngib4", 0, 0, random(0,42), random(2,6), random(2,6), 0, random(0,360), 160);
			NULL A 1 A_SpawnItemEx ("Fleshspawngib5", 0, 0, random(0,42), random(2,6), random(2,6), 0, random(0,360), 160);
			NULL A 1 A_SpawnItemEx ("Fleshspawngib6", 0, 0, random(0,42), random(2,6), random(2,6), 0, random(0,360), 160);
			stop;
	}
}

class DholeDeathExplosion : EEBaseZSC
{
	default
	{
		Tag "Death Throes";
		radius 10;
		height 12;
		damage 0;
		speed 0;
		renderstyle "Add";
		Alpha 0.90;
		seesound "dholdethex";
		PROJECTILE;
		+NOCLIP;
		+DONTSPLASH;
		+SPAWNSOUNDSOURCE;
	}
	
	states
	{
		Spawn:
			TNT1 A 0 A_SpawnItemEx ("Fleshspawngib1", 0, 0, random(0,42), random(2,6), random(2,6), 0, random(0,360), 160);
			TNT1 A 0 A_SpawnItemEx ("Fleshspawngib2", 0, 0, random(0,42), random(2,6), random(2,6), 0, random(0,360), 160);
			TNT1 A 0 A_SpawnItemEx ("Fleshspawngib6", 0, 0, random(0,42), random(2,6), random(2,6), 0, random(0,360), 160);
			FLSP QRSTU 3 bright A_Explode(8,64,0);
			stop;
	}
}

class DholeBigExplosion : EEBaseZSC
{
	default
	{
		Tag "Final Death Throe";
		Radius 2;
		Height 2;
		Damage 0;
		+NOCLIP;
		Speed 0;
		PROJECTILE;
		RENDERSTYLE "Add";
		ALPHA 0.75;
		Scale 2.0;
		SeeSound "dholbigex";
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			GRNE A 3 Bright A_Explode(32,256,0);
			GRNE B 3 Bright;
			GRNE CDEFGHIJKLMN 3 Bright;
			stop;
	}
}

class DShambler : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		HitObituary "%o was displaced by a dimensional shambler.";
		Tag "Dimensional Shambler";
		Health 250;
		Radius 22;
		Height 56;
		Mass 200;
		Speed 12;
		PainChance 64;
		Painchance "Fist", 96; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 160; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 0.8; // 6.4
		DamageFactor "Eldritch", 2.5;
		DamageFactor "Bonk", 1.0;
		DamageFactor "Chop", 1.0;
		DamageFactor "Suck", 10.0;
		DamageFactor "Cricket", 1.0;
		DamageFactor "Lead", 1.0;
		DamageFactor "Breakfast", 1.0;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 0.1;
		DamageFactor "Beats", 1.0;
		DamageFactor "Fire", 1.0;
		DamageFactor "Ice", 1.0;
		DamageFactor "CherryBomb", 1.0;
		DamageFactor "Spinner", 1.0;
		DamageFactor "BRocket", 1.0;
		DamageFactor "Popper", 1.0;
		MeleeDamage 4;
		SeeSound "Shambler/Sight";
		PainSound "Shambler/Pain";
		DeathSound "Shambler/Death";
		ActiveSound "Shambler/Active";
		MeleeSound "Imp/Melee";
		Monster;
		+FLOORCLIP;
		+MISSILEEVENMORE;
	}
	
	States
	{
		Spawn:
			SHAM H 1;
			SHAM H 0 A_JumpIf(Args[0] > 0, "Spawn2");
			SHAM H 0 A_JumpIfInventory("WraithTeleporting", 1, "StopTeleport");
			SHAM H 1 A_Look();
			Goto Spawn+1;
		Spawn2:
			SHAM H 0 A_JumpIfInventory("WraithTeleporting", 1, "StopTeleport");
			SHAM H 1 A_LookEx(8, 0, 0, 0, 0, "Teleport");
			Loop;
		StopTeleport:
			SHAM A 0 
			{
				bINVULNERABLE = false;
				A_SetShootable();
				bNONSHOOTABLE = false;
				bSHOOTABLE = true;
				bNOTELEPORT = false;
				bNORADIUSDMG = false;
			}
			SHAM A 0 A_TakeInventory("WraithTeleporting", 1);
			Goto Spawn;
		See:
			SHAM AAABBBCCCDDD 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				
				chasetimer++;
				if (chasetimer >= 12)
				{
					A_EEChase(null,null,0,1,3,1,1);
					chasetimer = 0;
				}
				else
				{
					A_EEChase("Melee","Missile",0,1,3,1,1);
				}
			}
			SHAM B 0
			{ 
				if (Args[1] > 0)
				{
					if (random(1,256) <= 16) { return resolvestate("Missile"); }
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			Goto See+1;
		Melee:
			SHAM H 0 A_JumpIfInventory("WraithTeleporting", 1, 5);
			SHAM HH 1 
			{
				A_FaceTarget();
			}
			SHAM H 8 
			{
				A_StartSound("D3Wraith/Attack");
				A_CustomMeleeAttack(4*random(1,10),"none","none","Melee",true);
			}
			goto See;
			SHAM A 0 
			{
				bINVULNERABLE = false;
				A_SetShootable();
				bNONSHOOTABLE = false;
				bSHOOTABLE = true;
				bNOTELEPORT = false;
				bNORADIUSDMG = false;
				bDROPOFF = false;
			}
			SHAM A 0 A_TakeInventory("WraithTeleporting", 1);
			SHAM H 2
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();
			}
			SHAM H 8 
			{
				A_StartSound("D3Wraith/Attack");
				A_CustomMeleeAttack(4*random(1,10),"none","none","Melee",true);
			}
			SHAM A 0
			{
				bINVULNERABLE = false;
				A_SetShootable();
				bNONSHOOTABLE = false;
				bSHOOTABLE = true;
				bNOTELEPORT = false;
				bNORADIUSDMG = false;
				bDROPOFF = false;
			}
			Goto See;
		Missile:
			SHAM A 0 A_JumpIfCloser(128, 2);
			SHAM A 0 A_JumpIfCloser(1024, 2);
			SHAM A 0;
			Goto See;
			SHAM A 0 A_Jump(128, "Teleport");
			Goto See;
		Teleport:
			SHAM A 3 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();
			}
			TNT1 A 0 A_GiveInventory("WraithTeleporting", 1);
			TNT1 A 0 
			{
				A_StartSound("misc/ZAHANDO");

				bINVULNERABLE = true;
				bNONSHOOTABLE = true;
				bNOTELEPORT = true;
				bNORADIUSDMG = true;
				bDROPOFF = true;
				A_UnSetShootable();
			}
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAA 0 A_EEChase("Melee",null,0,1,3,1,1);
			TNT1 A 0 A_Jump(128,25);
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAA 0 A_EEChase("Melee",null,0,1,3,1,1);
			TNT1 A 1
			{
				A_EEChase("Melee",null,0,1,3,1,1);
			}
			SHAM A 0
			{
				bINVULNERABLE = false;
				A_SetShootable();
				bNONSHOOTABLE = false;
				bSHOOTABLE = true;
				bNOTELEPORT = false;
				bNORADIUSDMG = false;
				bDROPOFF = false;
			}
			SHAM A 0 A_TakeInventory("WraithTeleporting", 1);
			SHAM A 3
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();
			}
			Goto See;

		Pain:
			SHAM H 4;
			SHAM H 4 A_EEPain();
			Goto See;
		Pain.Suck:
			SHAM H 4;
			SHAM H 4 A_EEPain();
			SHAM HHHHHH 4;
			Goto See;
		Pain.Eldritch:
			SHAM H 4;
			SHAM H 4 A_EEPain();
			SHAM HHHHHHHHHHHH 4;
			Goto See;

		Death:
			SHAM I 8;
			SHAM J 8 A_Scream();
			SHAM K 6;
			SHAM L 6 A_NoBlocking();
			SHAM M 6;
			SHAM N 6;
			SHAM O 6;
			SHAM P -1;
			Stop;

		Raise:
			SHAM ONMLKJI 8;
			Goto See;

		Ice:
			SHAM H 5 A_GenericFreezeDeath();
			SHAM H 1 A_FreezeDeathChunks();
			wait;
	}
}

class WraithTeleporting : Inventory
{
	default
	{
		Inventory.MaxAmount 3;
	}
}

class ShadowBeast : EECreature replaces BaronOfHell
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		OBITUARY "%o was killed by a shadow beast.";
		Tag "Shadow Beast";
		Bloodcolor "70 AC 00";
		Health 1500; // 1000
		Radius 40;
		Height 80;
		Mass 1250; // 500
		Speed 12;
		PainChance 144;
		Painchance "Fist", 216; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 256; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 0.8; // 6.4
		DamageFactor "Bonk", 0.4;
		DamageFactor "Chop", 0.4;
		DamageFactor "Suck", 1.0;
		DamageFactor "Cricket", 2.5;
		DamageFactor "Lead", 2.5;
		DamageFactor "Breakfast", 2.5;
		DamageFactor "Zap", 0.75;
		DamageFactor "Dust", 0.25;
		DamageFactor "Beats", 2.5;
		DamageFactor "Fire", 0.4;
		DamageFactor "Ice", 2.5;
		DamageFactor "CherryBomb", 0.7;
		DamageFactor "Spinner", 0.7;
		DamageFactor "BRocket", 0.7;
		DamageFactor "Popper", 2.5;
		SEESOUND "shadowbeast/sight";
		PAINSOUND "shadowbeast/pain";
		DEATHSOUND "shadowbeast/death";
		ACTIVESOUND "shadowbeast/active";
		Alpha 1.0;
		RenderStyle "Translucent";
		MONSTER;
		+FloorClip;
		+BOSSDEATH;
		dropitem "Backpack", 2;
		dropitem "Backpack", 2;
	}
	
	states
	{
		Spawn:
			BDEM AB 10 A_Look();
			Loop;
		See:
			TNT1 A 0 A_JumpIfHealthLower ((user_MaxHP/2), "Run");
			BDEM ABCDEF 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); bAVOIDMELEE = true; }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); bAVOIDMELEE = true; }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); bAVOIDMELEE = true; }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;
		Run:
			TNT1 A 0 A_StartSound("shadowbeast/sight");
			BDEM AABBCCDDEEFFAABBCCDDEEFFAABBCCDDEEFF 2
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(1); }
				A_EEChase(null,null,0,1,3,1,1);
			}
			TNT1 A 0 A_Jump(252, "Missile");
			Goto See;

		Missile:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfHealthLower ((user_MaxHP/2), "Missile2");
			TNT1 A 0 A_Jump(90, "Missile1b");
			Missile1a:
				BDEM H 6 
				{
					if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
					A_FaceTarget();
				}
				BDEM I 6 
				{
					if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
					A_FaceTarget();

					A_SpawnProjectile("ShadowBeastBall1", 56, 0, -8);
					A_SpawnProjectile("ShadowBeastBall1", 56, 0, 0);
					A_SpawnProjectile("ShadowBeastBall1", 56, 0, 8);
				}
				Goto See;
			Missile1b:
				BDEM H 4 
				{
					if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
					A_FaceTarget();
				}
				BDEM I 4 
				{
					if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
					A_FaceTarget();

					A_SpawnProjectile("ShadowBeastBall2", 56, 0, -16);
				}
				BDEM I 4 
				{
					if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
					A_FaceTarget();

					A_SpawnProjectile("ShadowBeastBall2", 56, 0, -8);
				}
				BDEM I 4 
				{
					if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
					A_FaceTarget();

					A_SpawnProjectile("ShadowBeastBall2", 56, 0, 0);
				}
				BDEM I 4 
				{
					if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
					A_FaceTarget();

					A_SpawnProjectile("ShadowBeastBall2", 56, 0, 8);
				}
				BDEM I 4 
				{
					if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
					A_FaceTarget();

					A_SpawnProjectile("ShadowBeastBall2", 56, 0, 16);
				}
				BDEM I 4 
				{
					if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
					else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
					A_FaceTarget();
					
					A_SpawnProjectile("ShadowBeastBall2", 56, 0, 32);
				}
				Goto See;

		Missile2:
			TNT1 A 0 A_Jump(90, "Missile2b");
		Missile2a:
			BDEM H 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
			}
			BDEM IIIIIIIIIIIII 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 300) { A_SetTics(1); }

				A_SpawnProjectile("ShadowBeastBallFire", 56, 0, random(-8,8));
			}
			Goto See;
		Missile2b:
			BDEM H 16 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 157) { A_SetTics(9); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 135) { A_SetTics(10); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 112) { A_SetTics(11); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(12); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 67) { A_SetTics(13); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 45) { A_SetTics(14); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 22) { A_SetTics(15); }
				A_FaceTarget();
			}
			BDEM I 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();

				A_SpawnProjectile("ShadowBeastBall3", 56, 0, -64);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, 64);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, -56);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, 56);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, -48);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, 48);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, -40);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, 40);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, -32);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, 32);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, -24);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, 24);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, -16);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, 16);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, -8);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, 8);
				A_SpawnProjectile("ShadowBeastBall3", 56, 0, 0);
			}
			Goto See;
		Pain:
			TNT1 A 0 A_Jump ((16+(CountInv("MonsterLevel")/4)), "Spread");
			BDEM G 2;
			BDEM G 4 A_EEPain();
			Goto See;
		Pain.Bonk:
		Pain.Chop:
		Pain.Fire:
		Pain.CherryBomb:
		Pain.Spinner:
		Pain.BRocket:
		Pain.Zap:
			TNT1 A 0 A_Jump ((32+(CountInv("MonsterLevel")/2)), "Spread");
			BDEM G 2;
			BDEM G 4 A_EEPain();
			Goto See;
		Pain.Cricket:
		Pain.Lead:
		Pain.Breakfast:
			TNT1 A 0 A_Jump ((8+(CountInv("MonsterLevel")/8)), "Spread");
			BDEM G 2;
			BDEM G 4 A_EEPain();
			Goto See;
		Pain.Beats:
		Pain.Popper:
		Pain.Ice:
			TNT1 A 0 A_Jump ((4+(CountInv("MonsterLevel")/16)), "Spread");
			BDEM G 2;
			BDEM G 4 A_EEPain();
			Goto See;
		Death:
			BDEM R 8;
			BDEM S 8 A_Scream();
			BDEM TUVWX 6;
			BDEM Y 6 A_NoBlocking();
			BDEM Y 0 A_BossDeath();
			BDEM Z -1;
			Stop;
		Raise:
			BDEM Y 6;
			BDEM XWVUT 6;
			BDEM SR 8;
			goto See;

		Spread:
			TNT1 A 0 
			{
				A_SpawnItemEx("ShadowBeastSpread", 0, 0, 0, 0, 0, 0, 0, 128);

				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				A_SpawnItemEx("ShadowBeastSparkle", random(0,16), random(0,16), random(16,48), 0, 0, 0, random(0,359), 128);
				
				A_SpawnItemEx("ShadowBeastCreature", 0, 0, random(16,48), random(0,8), random(0,8), random(0,8), random(0,359), 0);
				A_SpawnItemEx("ShadowBeastCreature", 0, 0, random(16,48), random(0,8), random(0,8), random(0,8), random(0,359), 0);
				A_SpawnItemEx("ShadowBeastCreature", 0, 0, random(16,48), random(0,8), random(0,8), random(0,8), random(0,359), 0);
				A_SpawnItemEx("ShadowBeastCreature", 0, 0, random(16,48), random(0,8), random(0,8), random(0,8), random(0,359), 0);
				A_SpawnItemEx("ShadowBeastCreature", 0, 0, random(16,48), random(0,8), random(0,8), random(0,8), random(0,359), 0);
				
				A_SetTranslucent(0.0);
			}
			Goto Wander;
		Wander:
			TNT1 A 0 
			{
				A_UnSetShootable();
				bNOPAIN = true;
			}
			TNT1 A 0 A_Jump(60, 5);
			TNT1 A 0 A_Jump(60, 15);
			TNT1 A 0 A_Jump(60, 25);
			TNT1 A 0 A_Jump(60, 35);
			TNT1 A 0 A_Jump(60, 45);
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 300) { A_SetTics(1); }
				A_EEWander(0,1,3,1,1);
			}
			BDEM ABCDEF 3 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FadeIn(0.1667,FTF_CLAMP);
				if (random(1,6) == 1) { A_EEWander(0,1,3,1,1); } else { A_EEChase(null,null,0,1,3,1,1); }
			}
			TNT1 A 0 
			{
				A_SetShootable();
				bNOPAIN = false;
			}
			Goto See;
	}
}

class ShadowBeastSpread : EEProjectile
{
	default
	{
		Tag "Shadow Beast Shot";
		Radius 1;
		Height 1;
		Damage 0;
		Speed 0;
		PROJECTILE;
	}
	
	states
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("shadowbeast/spread");
			BDEM JKLMNOP 8;
			BDEM Q 70;
			BDEM QQQQQQQQQQ 1 A_FadeOut(0.1);
			stop;
	}
}

class ShadowBeastCreature : EESpawnedItem
{
	int linger;
	default
	{
		Tag "Shadow Beast Spirit";
		Alpha 1.0;
		Renderstyle "Add";
		Speed 16;
		MONSTER;
		-SOLID;
		-SHOOTABLE;
		-COUNTKILL;
		+FLOAT;
		+NOGRAVITY;
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		linger = (64 - randompick(5,45));
	}
	
	states
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("shadowbeast/spiritsit");
			Goto See;
		See:
			BDSP ABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAB 2 
			{
				A_Chase();
				linger--;
				if (linger <= 0) return resolvestate("Death");
				return resolvestate(null);
			}
			loop;
		Melee:
			BDSP AB 2 A_CustomMeleeAttack((random(2,3) * random(1,8)), "", "", "Zap");
			Goto See;
		Death:
			TNT1 A 0 A_StartSound("shadowbeast/spiritdth");
			BDSP EFGHIJ 5;
			Stop;
	}
}

// Shadow Beast
class ShadowBeastSparkle : EEProjectile
{   
	default
	{
		Alpha 1.0;
		Renderstyle "Add";
		Radius 1;
		Height 1;
		Damage 0;
		Speed 0;
		PROJECTILE;
		Scale 1.0;
	}
	
	states
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,4);
			TNT1 A 0 A_Jump(128,2);
			BDP1 GHI 5;
			stop;
	}
}

class ShadowBeastBallFire : EEEffectProjectile
{
	default
	{
		Tag "Shadow Beast Ballfire";
		Alpha 1.0;
		Speed 15;
		Radius 10;
		Height 6;
		DamageFunction (1 * random(1,8)); // 2
		DamageType "PoisonElemental"; // Poison
		Projectile;
		+SPAWNSOUNDSOURCE;
		+RIPPER;
		RenderStyle "Add";
		SeeSound "shadowbeast/pr1death";
		Decal "MummyScorch";
	}
	
	States
	{
		Spawn:
			BDP2 DEFGH 5 Bright;
			Goto Death;
		Death:
			TNT1 A 0 Bright
			{
				if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
				{
					actor player = players[0].mo;
					A_StatusEffectChecker(8);
					if (random(1,user_ailmentmaxchance) <= 3 && user_canafflict)
					{
						player.player.poisoncount += random(7,random(10,11));
					}
				}
				return resolvestate(null);
			}
		Death2:
			TNT1 A 0;
			Stop;
	}
}

class ShadowBeastBall1 : EEEffectProjectile
{
	default
	{
		Tag "Shadow Beast Ballfire";
		Alpha 1.0;
		Speed 15;
		Radius 10;
		Height 6;
		DamageFunction (5 * random(1,8));
		DamageType "PoisonElemental"; // Poison
		Projectile;
		+SPAWNSOUNDSOURCE;
		RenderStyle "Add";
		SeeSound "shadowbeast/pr1sight";
		DeathSound "shadowbeast/pr1death";
	}
	
	States
	{
		Spawn:
			BDP2 ABC 4 Bright;
			Loop;
		Death:
			TNT1 A 0 Bright
			{
				if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
				{
					actor player = players[0].mo;
					A_StatusEffectChecker(8);
					if (random(1,user_ailmentmaxchance) <= 3 && user_canafflict)
					{
						player.player.poisoncount += random(7,random(10,11));
					}
				}
				return resolvestate(null);
			}
		Death2:
			BDP2 DE 4 Bright;
			BDP2 FGH 3 Bright;
			Stop;
	}
}

class ShadowBeastBall2 : EEEffectProjectile
{
	default
	{
		Tag "Shadow Beast Ballfire";
		Alpha 1.0;
		Renderstyle "Add";
		Radius 8;
		Height 6;
		DamageFunction (2 * random(1,8));
		Speed 16;
		PROJECTILE;
		+Randomize;
		SeeSound "shadowbeast/pr2sight";
		DeathSound "shadowbeast/pr2death";
		Decal "PlasmaScorchLower";
	}
	
	States
	{
		Spawn:
			BDP1 DE 1 A_BishopMissileWeave();
			loop;
		Death:
			BDP1 FGHI 3;
			Stop;
	}
}

class ShadowBeastBall3 : EEEffectProjectile
{
	default
	{
		Tag "Shadow Beast Ballfire";
		Alpha 1.0;
		Scale 1.4;
		Renderstyle "Add";
		Radius 8;
		Height 6;
		DamageFunction (10 * random(1,8));
		Speed 20;
		PROJECTILE;
		+Randomize;
		SeeSound "shadowbeast/pr2sight";
		DeathSound "shadowbeast/pr2death";
		Decal "PlasmaScorchLower";
	}
	
	States
	{
		Spawn:
			BDP1 DEDEDEDED 2 A_BishopMissileWeave();
			BDP1 ED 2 A_BishopMissileWeave();
			TNT1 A 0 A_FadeOut(0.20);
			Goto Spawn+9;
		Death:
			BDP1 FGHI 3;
			Stop;
	}
}

class BeamRevenant : RevenantNew
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Beam Revenant";
		seesound "beamrevenant/activate";
		painsound "beamrevenant/pain";
		deathsound "beamrevenant/death";
		meleesound "beamrevenant/punch";
		HitObituary "%o was punched by a Beam Revenant.";
		Obituary "%o got in the Beam Revenant's way.";
		Tag "Beam Revenant";
	}
	
	States
	{
		Spawn:
			RASK A 0 NoDelay;
			RASK AB 10 A_Look();
			goto Spawn+1;
			Loop;
		See:
			RASK AABBCCDDEEFF 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;
		Melee:
			RASK G 1 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(0); }
				A_FaceTarget();
			}
			RASK G 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_SkelWhoosh();
			}
			RASK H 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
			}
			RASK I 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_SkelFist();
			}
			Goto See;
		Missile:
			RASK J 10 Bright
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			RASK K 10 // A_SkelMissile 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }

				A_SpawnProjectile("Revrailshot", 60, 0, random(-2,2),0);
			}
			RASK K 10 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			Goto See;
		Pain:
			RASK L 5;
			RASK L 5 A_EEPain();
			Goto See;
		Death:
			RASK LM 7;
			RASK N 7 A_Scream();
			RASK O 7 A_NoBlocking();
			RASK P 7;
			RASK Q -1;
			Stop;

		Raise:
			RASK Q 5;
			RASK PONML 5;
			Goto See;

		Ice:
			RASK L 5 A_GenericFreezeDeath();
			RASK L 1 A_FreezeDeathChunks();
			wait;
	}
}

class Revrailshot : EEFastProjectile
{
	default
	{
		Tag "Revenant Beam";
		radius 1;
		height 1;
		speed 100;
		DamageFunction (30 * random(1,8));
		renderstyle "Add";
		decal "RailScorchLower";
		seesound "weapons/railgf";
		deathsound "weapons/railgf";
		obituary "%o was shafted by a Beam Revenant.";
		PROJECTILE;
		+RANDOMIZE;
		+BLOODSPLATTER;
		+FOILINVUL;
		+DONTREFLECT;
	}
	
	states
	{
		Spawn:
			TNT1 A 1 bright A_SpawnItemEx("railtrail", 0, 0, 0,0,0,0,0,128);
			loop;
		Death:
			TNT1 A 2 bright A_SpawnItemEx("railpow", 0, 0, 0,0,0,0,0,128);
			stop;
	}
}

class Railtrail : EEBaseZSC
{
	default
	{
		Radius 2;
		Height 2;
		Speed 0;
		scale 0.5;
		PROJECTILE;
		+CLIENTSIDEONLY;
		+NOINTERACTION;
	}
	
	States
	{
		Spawn:
			APLS ABABAB 3 BRIGHT;
			Stop;
	}
}

class Railpow : EEBaseZSC
{
	default
	{
		Radius 2;
		Height 2;
		Speed 0;
		Scale 0.5;
		PROJECTILE;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
	}
	
	States
	{
		Spawn:
			APBX ABCDE 5 bright;
			Stop;
	}
}

// Roach
class Roach : EECreature
{
	private class<Inventory> LDLPreload, LDLToken, LDLCheck, MiscCheck, MiscCheck2, MiscCheck3, MiscCheck4;
	int check1;
	int healint1;
	int healint2;
	int paintics1;
	int paintics2;

	Default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Roach";
		Health 150;
		GibHealth 250;
		Radius 19;
		Height 48;
		Speed 8;
		PainChance 64;
		Painchance "Fist", 96; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 160; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Fist", 2.0;
		DamageFactor "Kick", 2.0;
		DamageFactor "Bonk", 0.05;
		DamageFactor "Chop", 0.05;
		DamageFactor "Suck", 0.05;
		DamageFactor "Cricket", 0.05;
		DamageFactor "Lead", 0.05;
		DamageFactor "Breakfast", 0.05;
		DamageFactor "Zap", 0.05;
		DamageFactor "Dust", 0.05;
		DamageFactor "Beats", 0.05;
		DamageFactor "Fire", 0.25;
		DamageFactor "Ice", 0.05;
		DamageFactor "CherryBomb", 0.625;
		DamageFactor "Spinner", 0.625;
		DamageFactor "BRocket", 0.625;
		DamageFactor "Popper", 0.05;
		Mass 200;
		BloodColor "DarkGreen";
		SeeSound "Roach/Sight";
		PainSound "Roach/Pain";
		DeathSound "Roach/Death";
		ActiveSound "Roach/Active";
		Obituary "%o was scalded by a Roach";
		Monster;
		+DontHarmClass;
	}
	
	States
	{
		Spawn:
			ROAC A 6 RoachLook();
			Loop;

		SeeAlert:
			ROAC A 0 A_AlertMonsters();
			Goto See;

		See:
			ROAC B 0 A_Jump(32, "Stand");
			ROAC BBBCCCDDDEEE 2
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = 1; }
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 90) { A_SetTics(1); }

				check1++;
				if (check1 >= 3) 
				{ 
					A_EEChase(); 
					check1 = 0; 
				} 
				else 
				{ 
					A_EEChase("Melee", null, CHF_NOPLAYACTIVE); 
				}
			}
			Loop;

		Stand:
			ROAC AAAAAAAAAAAA 3
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = 1; }
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { A_SetTics(2); }

				A_FaceTarget();
				A_EEChase("Melee", "Missile", CHF_NOPLAYACTIVE | CHF_DONTMOVE);
			}
			ROAC A 0 A_Jump(192, "Stand");
			Goto See+1;

		Melee:
		Missile:
			ROAC AAAAFF 3 
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();
			}
			ROAC G 6
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { A_SetTics(5); }

				A_SpawnProjectile("RoachBall", 32.0, -4.0, 1.0); 
				A_SpawnProjectile("RoachBall", 32.0, 4.0, -1.0); 
			}
			Goto See;

		Pain:
			ROAC H 0
			{
				if (paintics2 <= 0) paintics1 += random(53,70);
			}
			ROAC H 3;
			ROAC H 3 A_EEPain();
			Goto See;
		
		Pain.Fist:
			ROAC H 0
			{
				paintics2 += random(53,70);
				if (paintics1 > 0) paintics1 = 0; 
			}
			ROAC H 3;
			ROAC H 3 A_EEPain();
			ROAC HH 3;
			Goto See;
		
		Pain.Kick:
			ROAC H 0
			{
				paintics2 += random(53,70);
				if (paintics1 > 0) paintics1 = 0; 
			}
			ROAC H 3;
			ROAC H 3 A_EEPain();
			ROAC HHHH 3;
			Goto See;

		Death.Fist:
		Death.Kick:
			ROAC I 0 A_Jump(255, "XDeath");
			goto Death;
		Death.SpectralLow:
		Death.Sigil:
			ROAC I 0 A_Jump(248, "XDeath");
			goto Death;
		Death:
			ROAC I 8 A_ScreamAndUnblock();
			ROAC JKL 6;
			ROAC M 0 A_Jump(18, 2);
			ROAC M -1;
			Loop;
			ROAC MMMMM 70;
			ROAC MMMMM 70;
			ROAC MMMMM 70;
			ROAC M -1 Thing_Raise(0);
			Wait;

		XDeath:
			ROAC I 4 A_XScream();
			ROAC NOP 6;
			ROAC Q 6 A_NoBlocking();
			ROAC RS 6;
			ROAC T -1;
			Stop;

		Raise:
			ROAC MLKJI 5;
			Goto See;

		Ice:
			ROAC H 5 A_GenericFreezeDeath;
			ROAC H 1 A_FreezeDeathChunks;
			wait;
	}
	
	void RoachLook()
	{
		if(Args[0] == 1)
			A_LookEx(LOF_NOSEESOUND, 0, 0, 0, 0, "See");
		else if(Args[0] > 1)
			A_LookEx(0, 0, 0, 0, 0, "SeeAlert");
		else
			A_Look();
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay(); //Call original in case of another override
		
		healint1 = 10 - (Skill / 2);
		healint2 = healint1 * 7;
	}

	override void Tick()
	{
		super.tick(); // Call original in case of another override
		
		healint1 = 10 - (Skill / 2);
		if (paintics1 > 0)
		{
			if (!IsFrozen()) paintics1--;
			healint1 /= 4;
		}
		if (paintics2 > 0)
		{
			if (!IsFrozen()) paintics2--;
			paintics1 = 0;
			healint1 *= 4;
		}
		healint2 = healint1 * 7;
		
		
		// Heal every six tics
		bool regendebug = false;
		int healamt = 0;
		int	healmax = User_MaxHP;
		if (health > 0 && !IsFrozen())
		{
			if (regendebug) Console.Printf("\cyHealTimer1: %d / %d\c-, \cxHealTimer2: %d / %d\c-", level.maptime % healint1, healint1, level.maptime % healint2, healint2);
			if (health < User_MaxHP && level.maptime % healint1 == 0) 
			{
				healamt += randompick(1,2,2,2,2,2,2,2,2,3) + (CountInv("MonsterLevel") / randompick(40,30,30,30,30,30,30,30,30,20));
				if (regendebug) Console.Printf("Roach Regen [first value < MaxHP]: %d, healint1: %d", healamt, healint1);
			}
			if (health >= User_MaxHP && level.maptime % healint2 == 0) 
			{
				healmax = User_MaxHP * 2;
				healamt += randompick(0,0,1,1,1,1,2,2) + (CountInv("MonsterLevel") / randompick(100,100,80,80,80,80,60,60));
				if (regendebug) Console.Printf("Roach Regen [first value > MaxHP]: %d, healint2: %d", healamt, healint2);
			}
			if (regendebug && healamt > 0) Console.Printf("Roach Regen [legendary]: %d", healamt);
			
			if (healamt > 0)
			{
				health += healamt;
				if (health > healmax) health = healmax;
			}
		}
	
		// Run away when low on health, get aggressive when healed up again
		int fleehealth = (User_MaxHP * 40) / 150;
		int nofleehealth = (User_MaxHP * 120) / 150;
		if (health <= (User_MaxHP * 0.26667) && !bFrightened) bFrightened = true;
		if (health >= (User_MaxHP * 0.8) && bFrightened) bFrightened = false;
	}
}

Class RoachBall : EEProjectile
{
	Default
	{
		Tag "Roach Spit";
		Height 5;
		Radius 3;
		Speed 30;
		FastSpeed 60;
		DamageFunction (Random(5,8) * random(1,8));
		Decal "PlasmaScorchLower";
		Projectile;
		+RANDOMIZE
		RenderStyle "Add";
		Scale 0.6;
		Alpha 1.0;
		SeeSound "Roach/Fire";
		DeathSound "Roach/Hit";
	}
	
	States
	{
		Spawn:
			RCHB AAAABBBB 1 Bright A_SpawnItemEx("RoachBallTrail", -(Vel.X/1.2), -(Vel.Y/1.2), (Vel.Z/1.2*-1), (Vel.X/1.2), (Vel.Y/1.2), (Vel.Z/1.2), -Angle, SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEVELOCITY | SXF_CLIENTSIDE);
			Loop;
		Death:
			RCHB C 0 Bright A_Explode(5, 32, 0);
			RCHB CDEFG 3 Bright;
			Stop;
	}
}

Class RoachBallTrail : Actor
{
	Default
	{
		Projectile;
		RenderStyle "Add";
		Alpha 0.5;
		Scale 0.6;
	}
	
	States
	{
		Spawn:
			RCHB AABB 2 Bright A_FadeOut(0.05);
			Loop;
	}
}

class FleshSpawn : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Obituary "%o was burned by a FleshSpawn." ;
		HitObituary "%o was devoured by a FleshSpawn.";
		Tag "Flesh Spawn";
		health 50;
		radius 14;
		height 30;
		mass 80;
		speed 10;
		damage 2;
		painchance 224;
		Painchance "Fist", 256; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 256; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 1.2; // 9.6
		DamageFactor "Holy", 2; // Demons = +200% Holy Damage
		Painchance "Holy", 255; // Demons = +300% Pain Chance
		DamageFactor "Bonk", 5.0;
		Painchance "Bonk", 256;
		DamageFactor "Chop", 0.2;
		Painchance "Chop", 45;
		DamageFactor "Suck", 10.0;
		Painchance "Suck", 256;
		DamageFactor "Cricket", 5.0;
		Painchance "Cricket", 256;
		DamageFactor "Lead", 0.1;
		Painchance "Lead", 22;
		DamageFactor "Breakfast", 0.2;
		Painchance "Chop", 45;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 1.0;
		DamageFactor "Beats", 0.20;
		Painchance "Beats", 45;
		DamageFactor "Fire", 1.5;
		Painchance "Fire", 255;
		DamageFactor "Ice", 0.67;
		Painchance "Ice", 150;
		DamageFactor "CherryBomb", 1.0;
		DamageFactor "Spinner", 1.0;
		DamageFactor "BRocket", 1.0;
		DamageFactor "Popper", 0.20;
		Painchance "Popper", 45;

		missiletype "Fleshspawnball";
		bloodcolor "red";
		attacksound "flesh/melee";
		seesound "flesh/sight";
		painsound "flesh/pain";
		deathsound "flesh/death";
		activesound "flesh/active";
		MONSTER;
		+FLOAT;
		+NOGRAVITY;
		+DONTHARMSPECIES;
		+NOINFIGHTING;
		+NOTARGET;
	}
	
	States
	{
		Spawn:
			FLSP A 0 NoDelay;
			FLSP A 0 A_SetInventory("DMGWeakness100Percent",0);
			FLSP AB 8 A_Look();
			loop;
		See:
			FLSP A 0
			{
				A_SetInventory("DMGWeakness100Percent",0);
			}
			FLSP AABB 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }

				A_FastChaseCalc(3,24);
				if (random(1,256) <= user_fastchasechance) { A_EEChase("Melee","Missile",CHF_FASTCHASE,1,3,1,1); } else { A_EEChase("Melee","Missile",0,1,3,1,1); }
				user_painfastchase = 0;
			}
			loop;
		Missile:
			FLSP C 0 A_Jump((128+(CountInv("MonsterLevel")*1.5)),"Charge");
			goto See;
		Charge:
			FLSP C 0 A_Jump(96, "Charge2");
			FLSP C 8 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(7); }
				A_FaceTarget();
			}
			FLSP D 4     
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
				A_FaceTarget();
			}
			FLSP E 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }

				A_GiveInventory("DMGWeakness100Percent",1);
				A_SkullAttack(20);
			}
			FLSP FE 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_FaceTarget(); }
			}
			Goto Charge+4;
		Charge2:
			FLSP C 8 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(7); }
				A_FaceTarget();
			}
			FLSP D 4     
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
				A_FaceTarget();
			}
			FLSP E 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }

				A_GiveInventory("DMGWeakness100Percent",1);
				A_SkullAttack(20);
			}
			FLSP FEFE 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_FaceTarget(); }
			}
			FLSP C 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
			}
			FLSP D 4     
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
				A_FaceTarget();
			}
			FLSP E 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }

				A_GiveInventory("DMGWeakness100Percent",1);
				A_SkullAttack(20);
			}
			FLSP FE 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(3); }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_FaceTarget(); }
			}
			Goto Charge+4;

		Pain:
			FLSP I 0
			{
				A_SetInventory("DMGWeakness100Percent",0);
			}
			FLSP I 3;
			FLSP I 3
			{
				A_EEPain();
				user_painfastchase = 2 * random(1,8);
			}
			Goto See;

		Death:
			TNT1 A 0 Bright A_SetInventory("DMGWeakness100Percent",0);
			FLSP I 5;
			FLSP J 5 A_Scream;
			FLSP K 5;
			FLSP L 5 A_NoBlocking();
			FLSP MN 5 A_SetFloorClip();
			FLSP O -1;
			Stop;

		XDeath:
			TNT1 A 0 A_SetInventory("DMGWeakness100Percent",0);
			FLSP P 3;
			FLSP Q 0 
			{
				A_FaceTarget();
				A_SpawnItemEx("FleshSpawnGibs", 0, 0, 0, 0, 0, 0, 0, 128);
				A_SpawnProjectile("Fleshspawngib1", 14, 0, random(-180,180), 2, random(10,40));
				A_SpawnProjectile("Fleshspawngib2", 6, 2, random(-180,180), 2, random(0,25));
				A_SpawnProjectile("Fleshspawngib2B", 10, -2, random(-180,180), 2, random(0,25));
				A_SpawnProjectile("Fleshspawngib3", 8, 0, random(-180,180), 2, random(0,35));
				A_SpawnProjectile("Fleshspawngib4", 12, 5, random(-180,180), 2, random(-5,40));
				A_SpawnProjectile("Fleshspawngib4B", 5, -5, random(-180,180), 2, random(0,30));
				A_SpawnProjectile("Fleshspawngib5", 6, 3, random(-180,180), 2, random(10,60));
				A_SpawnProjectile("Fleshspawngib5", 8, 0, random(-180,180), 2, random(-10,55));
				A_SpawnProjectile("Fleshspawngib6", 12, 0, 0, 2, 0);
			}
			FLSP Q 3 A_XScream();
			FLSP R 3 A_NoBlocking();
			FLSP STU 3;
			Stop;

		Raise:
			FLSP O 5 A_UnSetFloorClip();
			FLSP NMLKJI 5;
			Goto See;

		Ice:
			FLSP I 5 A_GenericFreezeDeath();
			FLSP I 1 A_FreezeDeathChunks();
			wait;
	}
}

class FleshSpawnGibs : EECustomGib
{
	default
	{
		+NoClip;
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SpawnProjectile("Fleshspawngib1", 14, 0, random(-180,180), 2, random(10,40));
			TNT1 A 0 A_SpawnProjectile("Fleshspawngib2", 6, 2, random(-180,180), 2, random(0,25));
			TNT1 A 0 A_SpawnProjectile("Fleshspawngib2B", 10, -2, random(-180,180), 2, random(0,25));
			TNT1 A 0 A_SpawnProjectile("Fleshspawngib3", 8, 0, random(-180,180), 2, random(0,35));
			TNT1 A 0 A_SpawnProjectile("Fleshspawngib4", 12, 5, random(-180,180), 2, random(-5,40));
			TNT1 A 0 A_SpawnProjectile("Fleshspawngib4B", 5, -5, random(-180,180), 2, random(0,30));
			TNT1 A 0 A_SpawnProjectile("Fleshspawngib5", 6, 3, random(-180,180), 2, random(10,60));
			TNT1 A 0 A_SpawnProjectile("Fleshspawngib5", 8, 0, random(-180,180), 2, random(-10,55));
			TNT1 A 0 A_SpawnProjectile("Fleshspawngib6", 12, 0, 0, 2, 0);
			Stop;
	}
}

class Fleshspawngib1 : EECustomGib
{
	default
	{
		Speed 8;
		Mass 100;
		Radius 1;
		Height 1;
		Projectile;
		-NOGRAVITY;
		+DROPOFF;
	}
	
	States
	{
		Spawn:
			FGB1 ABCD 4;
			loop;
		Death:
			FGB1 E -1;
			stop;
	}
}

class Fleshspawngib2 : Fleshspawngib1
{
	default
	{
		Speed 8;
		Mass 100;
		Radius 1;
		Height 1;
		Projectile;
		-NoGravity;
		+DropOff;
		+ClientSideOnly;
	}
	
	States
	{
		Spawn:
			FGB2 ABCD 4;
			loop;
		Death:
			FGB2 I -1;
			stop;
	}
}

class Fleshspawngib2B : Fleshspawngib1
{
	default
	{
		+ClientSideOnly;
		Speed 0;
	}
	
	States
	{
		Spawn:
			FGB2 EFGH 4;
			loop;
		Death:
			FGB2 J -1;
			stop;
	}
}

class Fleshspawngib3 : Fleshspawngib1
{
	default
	{
		+ClientSideOnly;
		Speed 0;
	}
	
	States
	{
		Spawn:
			FGB3 ABCD 4;
			loop;
		Death:
			FGB3 E -1;
			stop;
	}
}

class Fleshspawngib4 : Fleshspawngib1
{
	default
	{
		+ClientSideOnly;
		Speed 0;
	}
	
	States
	{
		Spawn:
			FGB4 ABCD 4;
			loop;
		Death:
			FGB4 I -1;
			stop;
	}
}

class Fleshspawngib4B : Fleshspawngib1
{
	default
	{
		+ClientSideOnly;
		Speed 0;
	}
	
	States
	{
		Spawn:
			FGB4 EFGH 4;
			loop;
		Death:
			FGB4 J -1;
			stop;
	}
}

class Fleshspawngib5 : Fleshspawngib1
{
	default
	{
		+ClientSideOnly;
		Speed 0;
	}
	
	States
	{
		Spawn:
			FGB5 ABCD 4;
			loop;
		Death:
			FGB5 E -1;
			stop;
	}
}

class Fleshspawngib6 : Fleshspawngib1
{
	default
	{
		+ClientSideOnly;
		Speed 0;
	}
	
	States
	{
		Spawn:
			FGB6 A 4;
			loop;
		Death:
			FGB6 BC 4;
			FGB6 D -1;
			stop;
	}
}

//Vulgar
class VulgarNew : DoomImpNew
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		obituary "%o has the Innsmouth look.";
		hitobituary "%o has the Innsmouth look.";
		Tag "Vulgar";
		health 135; // 60
		radius 20;
		height 56;
		mass 120;
		speed 12;
		MeleeDamage 4;
		painchance 120;
		Painchance "Fist", 180; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 0.8; // 6.4
		DamageFactor "Bonk", 1.0;
		DamageFactor "Chop", 1.0;
		DamageFactor "Suck", 1.0;
		DamageFactor "Cricket", 1.0;
		DamageFactor "Lead", 2.0;
		Painchance "Lead", 240;
		DamageFactor "Breakfast", 1.0;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 1.0;
		DamageFactor "Beats", 1.0;
		DamageFactor "Fire", 1.0;
		DamageFactor "Ice", 1.0;
		DamageFactor "CherryBomb", 1.0;
		DamageFactor "Spinner", 1.0;
		DamageFactor "BRocket", 1.0;
		DamageFactor "Popper", 1.0;
		MONSTER;
		+FLOORCLIP;
		+DONTHARMSPECIES;
		seesound "monster/vulsit";
		painsound "monster/vulpai";
		deathsound "monster/vuldth";
		activesound "monster/vulact";
		meleesound "monster/vulhit";
	}
	
	states
	{
		Spawn:
			VULG A 0 NoDelay;
			VULG AB 10 A_Look();
			loop;

		See:
			VULG AABBCCDD 3
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Melee:
		Missile:
			VULG E 8 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(7); }
				A_FaceTarget();
			}
			VULG F 8
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(7); }
				A_FaceTarget();
				A_StartSound("monster/vulswg");
			}
			VULG G 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 150) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 75) { A_SetTics(5); }
				A_FaceTarget();
				
				A_CustomComboAttack("VulgarShotNew", 32, 4*random(1,8), "monster/vulhit");
			}
			goto See;

		Pain:
			VULG H 2;
			VULG H 2 A_EEPain();
			goto See;

		Death:
			VULG I 8;
			VULG J 8 A_Scream();
			VULG KL 6;
			VULG M 6 A_NoBlocking();
			VULG N -1;
			stop;

		XDeath:
			VULG O 5;
			VULG P 5 A_XScream();
			VULG Q 5;
			VULG R 5 A_NoBlocking();
			VULG STU 5;
			VULG V -1;
			stop;

		Raise:
			VULG ML 8;
			VULG KJI 6;
			goto See;

		Ice:
			VULG H 5 A_GenericFreezeDeath;
			VULG H 1 A_FreezeDeathChunks();
			wait;
	}
}

class VulgarShotNew : EEEffectProjectile
{
	default
	{
		Tag "Vulgar Poison Blast";
		DamageType "Poison";
		DamageFunction (4 * random(1,8));
		PoisonDamage 32;
		Radius 8;
		Height 16;
		Speed 10;
		RENDERSTYLE "Add";
		ALPHA 0.67;
		PROJECTILE;
		Seesound "poly/stmdr1";
		DeathSound "weapons/bloodx";
	}
	
	States
	{
		Spawn:
			FVUL AAABBB 1 Bright;
			loop;
		Death:
			FVUL CDEF 4 Bright;
			stop;
	}
}

// Devil Imp
class DevilImp : EECreature 
{
	Default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		obituary "%o was fried by a Devil Imp .";
		hitobituary "%o was flayed by a Devil Imp .";
		Tag "Devil Imp";
		health 60;
		radius 20;
		height 56;
		mass 120;
		speed 10;
		painchance 160;
		DamageFactor "Fire", 0.4;
		Painchance "Fire", 64;
		DamageFactor "Ice", 2.5;
		Painchance "Ice", 256;
		DamageFactor "CherryBomb", 0.6;
		Painchance "CherryBomb", 96;
		DamageFactor "BRocket", 1.125;
		Painchance "BRocket", 256;
		DamageFactor "Spinner", 0.8;
		Painchance "Spinner", 128;
		DamageFactor "Popper", 2.5;
		Painchance "Popper", 256;
		DamageFactor "Chop", 1.5;
		Painchance "Chop", 240;
		DamageFactor "Crush", 0.8; // 6.4
		DamageFactor "Holy", 1.5; // Imps = +50% Holy Damage
		Painchance "Holy", 240; // Imps = +50% Pain Chance
		Painchance "Fist", 240; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		+DontHarmClass;
		seesound "monster/dvlsit";
		painsound "monster/dvlpai";
		deathsound "monster/dvldth";
		activesound "monster/dvlact";
		MONSTER;
		+FLOORCLIP
		Species "Imp";
		+DONTHARMSPECIES;
	}

	states
	{
		Spawn:
			TRO2 AB 10 A_Look();
			loop;
		See:
			TRO2 AABBCCDD 3 
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = 1; }
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_EEChase();
			}
			loop;
		Melee:
		Missile:
			TRO2 EF 6 
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
			}
			TRO2 G 4 
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();

				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_CustomComboAttack("BelphegorBall", 32, (12.5*random(1,8)), "imp/melee"); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_CustomComboAttack("BaronBallNew", 32, (random(10,15)*random(1,8)), "imp/melee"); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { A_CustomComboAttack("KnightBallNew", 32, (random(5,10)*random(1,8)), "imp/melee"); }
				else { A_CustomComboAttack("DoomImpBall", 32, (3*random(1,8)), "imp/melee"); }       
			}
			TRO2 B 2
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 150) { A_SetTics(1); }
				A_FaceTarget();
			}
			TRO2 VW 6
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
			}
			TRO2 X 4
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();

				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_CustomComboAttack("BelphegorBall", 32, (12.5*random(1,8)), "imp/melee"); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_CustomComboAttack("BaronBallNew", 32, (random(10,15)*random(1,8)), "imp/melee"); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { A_CustomComboAttack("KnightBallNew", 32, (random(5,10)*random(1,8)), "imp/melee"); }
				else { A_CustomComboAttack("DoomImpBall", 32, (3*random(1,8)), "imp/melee"); }       
			}
			TRO2 E 0 A_Jump(200,9);
			TRO2 D 2
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 150) { A_SetTics(1); }
				A_FaceTarget();
			}
			TRO2 EF 6
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
			}
			TRO2 G 4
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();

				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_CustomComboAttack("BelphegorBall", 32, (12.5*random(1,8)), "imp/melee"); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_CustomComboAttack("BaronBallNew", 32, (random(10,15)*random(1,8)), "imp/melee"); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { A_CustomComboAttack("KnightBallNew", 32, (random(5,10)*random(1,8)), "imp/melee"); }
				else { A_CustomComboAttack("DoomImpBall", 32, (3*random(1,8)), "imp/melee"); }       
			}
			TRO2 B 2
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 150) { A_SetTics(1); }
				A_FaceTarget();
			}
			TRO2 VW 6
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
			}
			TRO2 X 4
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();

				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_CustomComboAttack("BelphegorBall", 32, (12.5*random(1,8)), "imp/melee"); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_CustomComboAttack("BaronBallNew", 32, (random(10,15)*random(1,8)), "imp/melee"); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { A_CustomComboAttack("KnightBallNew", 32, (random(5,10)*random(1,8)), "imp/melee"); }
				else { A_CustomComboAttack("DoomImpBall", 32, (3*random(1,8)), "imp/melee"); }       
			}
			TRO2 B 0
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 180) { A_SetTics(0); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(random(0,1)); }
				else { A_SetTics(random(0,2)); }
			}
			goto See;

		Pain:
			TRO2 H 2;
			TRO2 H 2 A_EEPain();
			goto See;

		Pain.Fist:
			TRO2 H 2;
			TRO2 H 2 A_EEPain();
			TRO2 HH 2;
			goto See;

		Pain.Kick:
			TRO2 H 2;
			TRO2 H 2 A_EEPain();
			TRO2 HHHH 2;
			goto See;

		Death:
			TRO2 I 8;
			TRO2 J 8 A_Scream();
			TRO2 K 6;
			TRO2 L 6 A_NoBlocking();
			TRO2 M -1;
			stop;

		XDeath:
			TRO2 N 5;
			TRO2 O 5 A_XScream();
			TRO2 P 5;
			TRO2 Q 5 A_NoBlocking();
			TRO2 RST 5;
			TRO2 U -1;
			stop;

		Raise:
			TRO2 ML 8;
			TRO2 KJI 6;
			goto See;

		Ice:
			TRO2 H 5 A_GenericFreezeDeath;
			TRO2 H 1 A_FreezeDeathChunks;
			wait;
	}
}

// Grell -- by NMN (w/DECORATE by Xaser, ZScript by Ghastly)

Class Grell : EECreature
{
	Default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Grell";
		health 300;
		radius 24;
		height 56;
		mass 400;
		speed 10;
		Obituary "%o was plagued by a grell.";
		painchance 128;
		Painchance "Fist", 192; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Eldritch", 150;
		DamageFactor "Eldritch", 2.5;
		Damagefactor "Stomp", 2.5;
		Damagefactor "Trample", 2.5;
		DamageFactor "Melee", 2.5;
		DamageFactor "Fist", 2.5;
		DamageFactor "Kick", 2.5;
		DamageFactor "Bonk", 2.5;
		DamageFactor "Chop", 0.4;
		DamageFactor "Suck", 2.5;
		DamageFactor "Cricket", 1.0;
		DamageFactor "Lead", 0.4;
		DamageFactor "Breakfast", 2.5;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 0.4;
		DamageFactor "Beats", 2.5;
		DamageFactor "Fire", 1.5;
		DamageFactor "Ice", 1.5;
		DamageFactor "CherryBomb", 1.25;
		DamageFactor "Spinner", 1.25;
		DamageFactor "BRocket", 1.25;
		DamageFactor "Popper", 2.5;
		seesound "grell/sight";
		painsound "grell/pain";
		deathsound "grell/death";
		activesound "grell/active";
		Monster;
		+FLOAT
		+NOGRAVITY
		+DONTHARMCLASS
		+DROPOFF
	}
	
	States
	{
		Spawn:
			GREL A 10 A_Look();
			Loop;

		See:
			GREL A 0
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = 1; }
				A_SentinelBob();
			}
			GREL AAB 3 
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = 1; }

				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(2); }

				A_FastChaseCalc(4,16);
				if (random(1,256) <= user_fastchasechance) { A_EEChase("Melee","Missile",CHF_FASTCHASE); A_FloatSetFChaseT(randompick(0,4)); } else { A_EEChase(); }
				user_painfastchase = 0;
			}
			GREL B 0 
			{
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = 1; }
				A_SentinelBob();
			}
			GREL BCC 3
			{
				A_FloatChaseCheck(4,8,12,16,0.5,0.5);
				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = 1; }

				if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags > 0 && CountInv("MonsterLevel") > 120) { A_SetTics(2); }

				A_FastChaseCalc(4,16);
				if (random(1,256) <= user_fastchasechance) { A_EEChase("Melee","Missile",CHF_FASTCHASE); A_FloatSetFChaseT(randompick(0,4)); } else { A_EEChase(); }
				user_painfastchase = 0;
			}
			Loop;
		Missile:
			TNT1 A 0 
			{
				A_StartSound("grell/attack");
				user_painfastchase = 0;
			}
			GREL D 4 
			{
				A_FaceTarget();
			}
			GREL E 4 Bright
			{
				A_FaceTarget();
			}
			GREL F 4 Bright
			{
				A_FaceTarget();

				A_SpawnProjectile("GrellBall", 32, 0, 0);
			}
			Goto See;

		Pain:
			GREL G 3;
			GREL G 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 4 * random(1,8);
			}
			Goto See;

		Pain.Fist:
			GREL G 3;
			GREL G 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 5 * random(1,8);
			}
			GREL GG 3;
			Goto See;

		Pain.Kick:
			GREL G 3;
			GREL G 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 7 * random(1,8);
			}
			GREL GGGG 3;
			Goto See;

		Pain.Eldritch:
			GREL G 3;
			GREL G 3
			{
				A_FloatPain(0,8,64);
				user_painfastchase = 14 * random(1,8);
			}
			GREL GGGGGGGG 3;
			Goto See;

		Death:
			GREL H 5;
			GREL I 0 A_NoBlocking();
			GREL I -1 A_Scream();

		Crash:
			GREL J 4 A_StartSound("grell/thud", CHAN_AUTO);
			GREL K 4;
			GREL LM 4 A_SetFloorClip();
			GREL N -1;
			Stop;

		Raise:
			GREL M 5 A_UnSetFloorClip();
			GREL LKJIH 5;
			Goto See;

		Ice:
			GREL G 5 A_GenericFreezeDeath;
			GREL G 1 A_FreezeDeathChunks;
			wait;
	}
}

Class GrellBall : EEEffectProjectile
{
	Default
	{
		Tag "Grell Spit";
		Radius 8;
		Height 16;
		Speed 15;
		DamageFunction(4 * random(1,8));
		Renderstyle "Add";
		DamageType "Eldritch";
		DeathSound "grell/projhit";
		Alpha 0.67;
		Projectile;
		+HitTracer
	}
	
	States
	{
		Spawn:
			FVUL AAABBB 1 Bright A_SpawnItemEx("BarbTrail",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			loop;
		Death:
			TNT1 A 0 Bright
			{
				if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE)
				{
					A_StatusEffectChecker(4);
					actor player = players[0].mo;
					if (random(1,user_ailmentmaxchance) <= 3 && user_canafflict > 0)
					{
						user_random = random(1,3);
						if (user_random == 1)
						{
							// Slow for 4-8 seconds [tics]
							if (!player.CountInv("PowerSlow"))
							{
								player.SetInventory("PowerSlow",1);
								let SlowItem = PowerSlow(player.FindInventory("PowerSlow"));
								if (SlowItem) SlowItem.EffectTics = random(140,280);
							}
							else
							{
								let SlowItem = PowerSlow(player.FindInventory("PowerSlow"));
								if (SlowItem) SlowItem.EffectTics += random(140,280);
							}
						} 
						else if (user_random == 2)
						{
							player.player.poisoncount += random(14,28);
						} 
						else if (user_random == 3) 
						{
							// Slow for 4-8 seconds [tics]
							if (!player.CountInv("PowerSlow"))
							{
								player.SetInventory("PowerSlow",1);
								let SlowItem = PowerSlow(player.FindInventory("PowerSlow"));
								if (SlowItem) SlowItem.EffectTics = random(70,140);
							}
							else
							{
								let SlowItem = PowerSlow(player.FindInventory("PowerSlow"));
								if (SlowItem) SlowItem.EffectTics += random(70,140);
							}
							player.player.poisoncount += random(7,14);
						}
					}
				}
				return resolvestate(null);
			}
		Death2:
			FVUL CDEF 4 Bright;
			stop;
	}
}

Class Barbtrail : Actor
{
	Default
	{
		Radius 0;
		Height 1;
		RENDERSTYLE "ADD";
		ALPHA 0.75;
		PROJECTILE;
	}
	
	States
	{
		Spawn:
			TNT1 A 1 Bright;
			SSFX ABCDEFG 2 Bright;
			Stop;
	}
}

//--------------------------------------------------------------
//Thanks to Combine Kegan for going through the trouble of defining these o.o
//These were taken from GMOTA v1.2's DECORATE code - Misfit

//BONE GIBS
//Ripped from Castlevania Bloodlines

class bonegib : EECustomGib
{
	default
	{
		+notimefreeze;
		+cannotpush;
		+movewithsector;
		+dontsplash;
		+noblockmap;
		+missile;
		+doombounce;
		+thruactors;
		+dontblast;
		-nogravity;
		+FORCEXYBILLBOARD;
		+LOOKALLAROUND;
		+bounceonactors;
		+randomize;
		+clientsideonly;
		Seesound "gibs/bones";
		Scale 1;
		Gravity 1.2;
		Bouncecount 3;
		Bouncefactor 0.45;
		Speed 5;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			BNGB ABCD 2;
			loop;
		Death:
			BNGB C 300;
			BNGB CCCCCCCC 5 A_Fadeout(0.125);
			stop;
	}
}

class brownbonegib : bonegib
{
	default
	{
		scale 0.8;
	}
	
	states
	{
		Spawn:
			BBGB EFGH 2;
			loop;
		Death:
			BBGB G 150;
			BBGB GGGGGGGGGG 2 A_Fadeout(0.1);
			stop;
	}
}

class quickbonegib : bonegib
{
	default
	{
		translation "0:255=%[0,0,0]:[1,1,1]";
		scale 0.8;
	}
	
	states
	{
		Spawn:
			BNGB ABCD 2;
			loop;
		Death:
			BNGB C 150;
			BNGB CCCC 5 A_Fadeout(0.25);
			stop;
	}
}

class bonespray : EECustomGib
{
	states
	{
		spawn:
			TNT1 A 0 a_spawnitemex ("quickbonegib", 0, 0, 0, random (-6, 6), random (4, 8), random (1, 6));
			TNT1 AA 0 a_spawnitemex ("quickbonegib", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			TNT1 AA 0 a_spawnitemex ("quickbonegib", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			stop;
	}
}

class brownbonespray : EECustomGib
{
	states
	{
		spawn:
			TNT1 A 0 a_spawnitemex ("brownbonegib", 0, 0, 0, random (-6, 6), random (4, 8), random (1, 6));
			TNT1 AA 0 a_spawnitemex ("brownbonegib", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			TNT1 AA 0 a_spawnitemex ("brownbonegib", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			stop;
	}
}

class goldbonespray : EECustomGib
{
	states
	{
		spawn:
			TNT1 A 0 a_spawnitemex ("goldbones", 0, 0, 0, random (-6, 6), random (4, 8), random (1, 6));
			TNT1 AA 0 a_spawnitemex ("goldbones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			TNT1 AA 0 a_spawnitemex ("goldbones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			stop;
	}
}

class minibonespray : EECustomGib
{
	states
	{
		spawn:
			TNT1 A 0 a_spawnitemex ("minibones", 0, 0, 0, random (-6, 6), random (4, 8), random (1, 6));
			TNT1 AA 0 a_spawnitemex ("minibones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			TNT1 AA 0 a_spawnitemex ("minibones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			stop;
	}
}

class blackbonespray : EECustomGib
{
	default
	{
		+BRIGHT;
		scale 1.4;
	}
	states
	{
		spawn:
			TNT1 A 0 a_spawnitemex ("blackbones", 0, 0, 0, random (-6, 6), random (4, 8), random (1, 6));
			TNT1 AA 0 a_spawnitemex ("blackbones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			TNT1 AA 0 a_spawnitemex ("blackbones", 0, 0, 0, random (-4, 3), random (2, 7), random (2, 8));
			stop;
	}
}

class blackbones : bonegib
{
	states
	{
		spawn:
			BBGB ABCD 2;
			loop;
		death:
			BBGB C 300;
			BBGB CCCCCCCC 5 A_Fadeout(0.125);
			stop;
	}
}

class goldbones : bonegib
{
	default
	{
		scale 0.55;
	}
	
	states
	{
		spawn:
			GBGB ABCD 2;
			loop;
		death:
			GBGB C 300;
			GBGB CCCCCCCC 5 A_Fadeout(0.125);
			stop;
	}
}

class goldhipbone : bonegib
{
	default
	{
		scale 0.55;
	}
	
	states
	{
		spawn:
			GHGB ABCD 2;
			loop;
		death:
			GHGB C 300;
			GHGB CCCCCCCC 5 A_Fadeout(0.125);
			stop;
	}
}

class goldribcage : bonegib
{
	default
	{
		scale 0.55;
	}
	
	states
	{
		spawn:
			GRIB ABCD 2;
			loop;
		death:
			GRIB C 300;
			GRIB CCCCCCCC 5 A_Fadeout(0.125);
			stop;
	}
}

class brownhipbone : bonegib
{
	states
	{
		spawn:
			BHGB EFGH 2;
			loop;
		death:
			BHGB E 300;
			BHGB EEEEEEEE 5 A_Fadeout(0.125);
			stop;
	}
}

class hipbonegib : bonegib
{
	states
	{
		spawn:
			BNGH ABCD 2;
			loop;
		death:
			BNGH A 300;
			BNGH AAAAAAAA 5 A_Fadeout(0.125);
			stop;
	}
}

class brownribbone : bonegib
{
	states
	{
		spawn:
			BRGB EFGH 2;
			loop;
		death:
			BRGB E 300;
			BRGB EEEEEEEE 5 A_Fadeout(0.125);
			stop;
	}
}

class ribbonegib : bonegib
{
	states
	{
		spawn:
			BNGR ABCD 2;
			loop;
		death:
			BNGR A 300;
			BNGR AAAAAAAA 5 A_Fadeout(0.125);
			stop;
	}
}


//Mini bones
//used for mini boners

class minibones : bonegib
{
	default
	{
		scale 0.55;
	}
}

class minihipbone : bonegib
{
	default
	{
		scale 0.55;
	}
	
	states
	{
		Spawn:
			BNGH ABCD 2;
			loop;
		Death:
			BNGH A 300;
			BNGH AAAAAAAA 5 A_Fadeout(0.125);
			stop;
	}
}

class miniribbone : bonegib
{
	default
	{
		scale 0.55;
	}
	
	states
	{
		Spawn:
			BNGR ABCD 2;
			loop;
		Death:
			BNGR A 300;
			BNGR AAAAAAAA 5 A_Fadeout(0.125);
			stop;
	}
}

class Skeleton : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Skeleton";
		HitObituary "%o was boned by a skeleton.";
		Health 100;
		Painchance 180;
		Painchance "Fist", 256; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 256; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 1.0; // 8.0
		DamageFactor "Bonk", 2.5;
		Painchance "Bonk", 45;
		DamageFactor "Chop", 1.0;
		DamageFactor "Suck", 1.0;
		DamageFactor "Cricket", 2.5;
		Painchance "Cricket", 45;
		DamageFactor "Lead", 1.0;
		DamageFactor "Breakfast", 1.0;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 1.0;
		DamageFactor "Beats", 1.0;
		DamageFactor "Fire", 1.0;
		DamageFactor "Ice", 1.0;
		DamageFactor "CherryBomb", 1.0;
		DamageFactor "Spinner", 1.0;
		DamageFactor "BRocket", 1.0;
		DamageFactor "Popper", 1.0;
		DamageFactor "Dashing", 1.5;
		DamageFactor "DashingBG", 2.25;
		DamageFactor "DashingSD", 3.0;
		Painchance "Dashing", 135;
		Painchance "DashingBG", 90;
		Painchance "DashingSD", 45;

		Speed 10;
		Radius 24;
		Height 56;
		Mass 250;
		Scale 0.9;
		MeleeRange 80; // 64
		SeeSound "skelsit";
		PainSound "skelpai";
		DeathSound "skeldth";
		MONSTER;
		+NOBLOOD;
		-COUNTKILL;
	}
	
	states
	{
		Spawn:
			SKLT R 10 A_Look();
			loop;
		
		See:
			SKLT AABBCCDDEEFF 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				if (random(1,256) <= 3) { A_StartSound("boner/rattle",CHAN_5); }
				if (random(1,256) <= 6) { A_StartSound("boner/rattle",CHAN_6); }
				if (random(1,256) <= 12) { A_StartSound("boner/rattle",CHAN_7); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Melee:
			SKLT GH 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			SKLT I 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
				A_StartSound("skelatt",chan_auto);
			}
			SKLT J 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_CustomMeleeAttack(random(1,6)*4,"swordhit","none");
			}
			SKLT K 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			goto See;

		Pain:
			SKLT L 2;
			SKLT L 2 A_EEPain();
			goto See;

		Death:
			SKLT M 0 
			{
				if (health <= (SpawnHealth() + Stamina * -1)) return resolvestate("RealDeath");
				int chance = 248;
				if (random(1,256) <= chance) return resolvestate("FakeDeath");
				return resolvestate(null);
			}
			goto RealDeath;
		Death.SpectralLow:
		Death.Sigil:
			SKLT M 0 
			{
				if (health <= (SpawnHealth() + Stamina * -1)) return resolvestate("RealDeath");
				int chance = 8;
				if (random(1,256) <= chance) return resolvestate("FakeDeath");
				return resolvestate(null);
			}
			goto RealDeath;
		Death.Cricket:
		Death.Bonk:
			SKLT M 0
			{
				if (health <= (SpawnHealth() + Stamina * -1)) return resolvestate("RealDeath");
				int chance = 124;
				if (random(1,256) <= chance) return resolvestate("FakeDeath");
				return resolvestate(null);
			}
			goto RealDeath;
		Death.Dashing:
			SKLT M 0
			{
				if (health <= (SpawnHealth() + Stamina * -1)) return resolvestate("RealDeath");
				int chance = 216;
				if (random(1,256) <= chance) return resolvestate("FakeDeath");
				return resolvestate(null);
			}
			goto RealDeath;
		Death.DashingBG:
			SKLT M 0
			{
				if (health <= (SpawnHealth() + Stamina * -1)) return resolvestate("RealDeath");
				int chance = 54;
				if (random(1,256) <= chance) return resolvestate("FakeDeath");
				return resolvestate(null);
			}
			goto RealDeath;
		Death.DashingSD:
			SKLT M 0
			{
				if (health <= (SpawnHealth() + Stamina * -1)) return resolvestate("RealDeath");
				int chance = random(18,19);
				if (random(1,256) <= chance) return resolvestate("FakeDeath");
				return resolvestate(null);
			}
			goto RealDeath;
		XDeath:
			SKLT M 0
			{
				if (health <= (SpawnHealth() + Stamina * -1)) return resolvestate("RealDeath");
				int chance = 128;
				if (random(1,256) <= chance) return resolvestate("FakeDeath");
				return resolvestate(null);
			}
			goto RealDeath;
		Death.Massacre:
		Death.SilentMassacre:
		Death.InstantDeath:
		RealDeath:
			TNT1 AAAAA 0 a_spawnitem ("brownbonespray");
			TNT1 AAAA 0 a_spawnitemex("brownhipbone",0,0,0,random(-10,10),random(-10,10),10);
			TNT1 A 0 a_spawnitemex("brownribbone",0,0,0,random(-10,10),random(-10,10),12);
			TNT1 A 1;
			stop;
		FakeDeath:
			SKLT M 4 A_Scream();
			SKLT N 4 A_Fall();
			SKLT O 8 A_Noblocking();
			SKLT P 12;
			SKLT Q 0 A_Jump(192,4);
			SKLT Q 0 A_Jump(128,4);
			SKLT Q 0 A_Jump(96,4);
			SKLT Q 0 A_Jump(64,4);
			SKLT Q 115;
			SKLT Q 115;
			SKLT Q 115;
			SKLT Q 115;
			SKLT Q 115;
		RegenCycle:
			SKLT Q 0 CanRaise Thing_Raise(0);
			SKLT Q 5;
			loop;
		
		Death.Holy:
			SKLT M 0 A_Jump(160,"RealDeath");
			goto FakeDeath;
		
		Raise:
			TNT1 A 0 { user_ressurrectstr += random(0,1); }
			SKLT PONM 4;
			goto see;

		Ice:
			SKLT M 0
			{
				if (random(1,256) <= 192) 
				{ 
					user_icekilledtimes++;
					if (user_icekilledtimes < 8) { return resolvestate("FakeDeath"); }
				}
				return resolvestate(null);
			}
			SKLT L 5 A_GenericFreezeDeath();
			SKLT L 1 A_FreezeDeathChunks();
			wait;
	}
}

class PurpleTentacle : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Strange Purple Worm";
		obituary "%o feels great, stronger, more aggressive.";
		health 120;
		painchance 90;
		Painchance "Fist", 135; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 225; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 0.7;
		DamageFactor "Bonk", 1.0;
		DamageFactor "Chop", 1.0;
		DamageFactor "Suck", 1.0;
		DamageFactor "Cricket", 1.0;
		DamageFactor "Lead", 1.0;
		DamageFactor "Breakfast", 1.0;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 1.0;
		DamageFactor "Beats", 1.0;
		DamageFactor "Fire", 1.0;
		DamageFactor "Ice", 1.0;
		DamageFactor "CherryBomb", 1.0;
		DamageFactor "Spinner", 1.0;
		DamageFactor "BRocket", 1.0;
		DamageFactor "Popper", 1.0;
		speed 10;
		radius 20;
		height 56;
		mass 250;
		seesound "slimeworm/sight";
		attacksound "slimeworm/melee";
		painsound "slimeworm/pain";
		deathsound "slimeworm/death";
		activesound "slimeworm/active";
		bloodcolor "green";
		MONSTER;
		+FLOORCLIP;
		-COUNTKILL;
		dropitem "Backpack", 2;
		dropitem "Backpack", 2;
	}
	
	states
	{
		Spawn:
			TENT A 10 A_Look();
			loop;

		See:
			TENT AABBCCDD 2 Fast
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			loop;

		Melee:
			TENT FG 6
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 30) { A_SetTics(5); }
				A_FaceTarget();
			}
			TENT H 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 30) { A_SetTics(5); }
				A_FaceTarget();

				A_CustomMeleeAttack(random(1,10)*random(4,8),"none","none","Melee",true); // A_SargAttack
			}
			goto See;

		Pain:
			TENT I 2;
			TENT I 2 A_EEPain();
			goto See;

		Death:
			TENT I 8;
			TENT J 8 A_Scream();
			TENT K 4;
			TENT L 4 A_NoBlocking();
			TENT L -1;
			stop;

		Raise:
			TENT MLKJI 5;
			goto See;
			
		Ice:
			TENT I 5 A_GenericFreezeDeath;
			TENT I 1 A_FreezeDeathChunks();
			wait;
	}
}

class StarSpawn : EECreature replaces BaronofHell
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		obituary "%o was driven mad by the Star Spawn of Cthulhu.";
		hitobituary "%o was flayed by the Star Spawn of Cthulhu.";
		Tag "Star Spawn of Cthulhu";
		health 30000; // 1500
		radius 36;
		height 128;
		mass 20000;
		speed 20;
		scale 2.5;
		BloodColor "Dark Green";
		painchance 50;
		Painchance "Fist", 75; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 125; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Eldritch", 150;
		DamageFactor "Eldritch", 2.5;
		DamageFactor "Crush", 0.003125; // 0.025
		DamageFactor "Bonk", 1.0;
		DamageFactor "Chop", 8.0;
		DamageFactor "Suck", 0.125;
		DamageFactor "Cricket", 5.0;
		DamageFactor "Lead", 2.0;
		DamageFactor "Breakfast", 0.5;
		DamageFactor "Zap", 0.4;
		DamageFactor "Dust", 2.5;
		DamageFactor "Beats", 10.0;
		DamageFactor "Fire", 0.1;
		DamageFactor "Ice", 0.1;
		DamageFactor "CherryBomb", 0.55;
		DamageFactor "Spinner", 0.55;
		DamageFactor "BRocket", 0.55;
		DamageFactor "Popper", 10.0;
		meleedamage 50;
		meleerange 64;
		seesound "deepone/sight";
		painsound "deepone/pain";
		deathsound "deepone/death";
		activesound "deepone/active";
		meleesound "deepone/melee";
		MONSTER;
		+FLOORCLIP;
		+BOSS;
		+BOSSDEATH;
		+MISSILEEVENMORE;
		+NORADIUSDMG;
		+NOTARGET;
	}
	
	states
	{
		Spawn:
			CUTH DD 6 A_Look();
			loop;

		See:
			CUTH ABCD 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); bAVOIDMELEE = true; }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); bAVOIDMELEE = true; }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); bAVOIDMELEE = true; }
				A_VileChase();
			}
			loop;

		Melee:
			CUTH E 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_StartSound("deepone/meleegrowl");
				A_FaceTarget();
			}
			CUTH F 6
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
			}
			CUTH G 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_CustomMeleeAttack(random(1,10)*50,"none","none","Melee",true);
			}
			CUTH HI 2
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
			}
			goto See;

		Missile:
			CUTH J 0 A_JumpIfCloser(32,"Melee") ;
			CUTH J 0 A_Jump(20, "Hide") ;
			CUTH J 8 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(7); }
				A_FaceTarget();
			}
			CUTH K 8 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(7); }

				A_SpawnProjectile("DeepOneBall",96,32);
			}
			CUTH K 0 bright 
			{
				A_CPosRefire();
			}
			Goto Missile+1;

		Pain:
			CUTH L 0 A_TakeInventory("squidinviso", 255);
			CUTH L 2 { bSTEALTH = false; }
			CUTH L 2 A_EEPain();
			goto See;
		Pain.Beats:
		Pain.Cricket:
			CUTH L 0 A_TakeInventory("squidinviso", 255);
			CUTH L 2;
			CUTH L 2 A_EEPain();
			CUTH LLLLLL 2;
			goto See;
		Pain.Eldritch:
			CUTH L 0 A_TakeInventory("squidinviso", 255);
			CUTH L 2;
			CUTH L 2 A_EEPain();
			CUTH LLLLLLLLLLLL 2;
			goto See;
			
		Hide:
			CUTH I 1 A_JumpIfInventory("squidinviso",1,"Unhide");
			CUTH I 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_SetInventory("squidinviso",1);
				A_StartSound("deepone/stealth");
			}
			CUTH I 10 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
				bSTEALTH = true;
			}
			goto See;

		Unhide:
			CUTH D 0 A_SetInventory("squidinviso",0);
			CUTH D 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				bSTEALTH = false;
			}
			CUTH D 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_StartSound("deepone/stealth");
			}
			goto See;

		Heal:
			CUTH I 10 Bright
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }

				A_DiabHealProj(-24.0,-40.0);
			}
			CUTH I 10 Bright
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
			}
			CUTH I 10 Bright
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }

				A_DiabHealProj(24.0,40.0);
			}
			Goto See;

		Death:
			CUTH M 10;
			CUTH N 10 A_Scream();
			CUTH O 10;
			CUTH P 10 A_NoBlocking();
			CUTH P 0 A_BossDeath();
			CUTH Q -1;
			stop;

		Raise:
			CUTH PONM 8;
			goto See;

		Ice:
			CUTH L 5 A_GenericFreezeDeath();
			CUTH L 1 A_FreezeDeathChunks();
			wait;
	}
}

class DeepOneBall : EEEffectProjectile
{
	default
	{
		Tag "Starspawn Shot";
		Radius 13;
		Height 8;
		Speed 25;
		DamageFunction (5 * random(1,8));
		Health 5;
		Projectile;
		+RANDOMIZE;
		+ROCKETTRAIL;
		+SEEKERMISSILE;
		DamageType "Eldritch";
		RenderStyle "Add";
		Alpha 0.75;
		SeeSound "deepone/fire";
		DeathSound "deepone/firehit";
	}
	
	States
	{
		Spawn:
			OLDP AABB 1 bright;
			loop;
		Death:
			OLDP C 0 A_Scream();
			OLDP CDEF 4 bright;
			stop;
	}
}

class squidinviso : Inventory
{
	default
	{
		Inventory.amount 0;
		Inventory.maxamount 1;
	}
}

// Atlach-Nacha
class SpiderGod : EECreature replaces SpiderMastermind
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "The Spinner in Darkness";
		Radius 72;
		Height 120;
		Health 40000;
		Speed 35;
		mass 1000000;
		meleerange 76;
		meleedamage 12;
		painchance 10;
		DamageFactor "Bonk", 1.0;
		DamageFactor "Chop", 1.0;
		DamageFactor "Suck", 1.0;
		DamageFactor "Cricket", 1.0;
		DamageFactor "Lead", 1.0;
		DamageFactor "Breakfast", 25.0;
		Painchance "Breakfast", 255;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 1.0;
		DamageFactor "Beats", 1.0;
		Painchance "Fire", 33;
		DamageFactor "Fire", 3.33;
		Painchance "Ice", 3;
		DamageFactor "Ice", 0.3;
		DamageFactor "CherryBomb", 2.165;
		Painchance "CherryBomb", 22;
		DamageFactor "Spinner", 2.165;
		Painchance "Spinner", 22;
		DamageFactor "BRocket", 2.165;
		Painchance "BRocket", 22;
		DamageFactor "Popper", 1.0;
		Painchance "Fist", 15; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 25; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 0.025; // 0.2
		Painchance "Eldritch", 30;
		DamageFactor "Eldritch", 2.5;
		Painchance "Holy", 30;
		DamageFactor "Holy", 2.5;
		translation "152:159=216:223,9:9=223:223,76:70=216:223,129:132=216:223";
		BloodColor "Orange";
		scale 2.0;
		SeeSound "spider2/sight";
		DeathSound "spider2/death";
		PainSound "spider2/pain";
		ActiveSound "spider2/active";
		MeleeSound "misc/gibbed";
		Obituary "%o was immolated by the Spinner in Darkness.";
		HitObituary "%o was devoured by the Spinner in Darkness.";
		Dropitem "SpiderGodling";
		MONSTER;
		+BOSS;
		+NORADIUSDMG;
		+MISSILEMORE;
		+MISSILEEVENMORE;
		+DONTHARMSPECIES;
		+NOTARGET;
		+FLOORCLIP;
		Dropitem "Backpack", 2;
		Dropitem "Backpack", 2;
	}
	
	States
	{
		Spawn:
			SPI2 AAAAAAAAAA 10 A_Look();
			SPI2 A 0 A_StartSound("spider/step");
			SPI2 U 50 ThrustThingZ( 0, 100, 0, 1);
			SPI2 A 0 Radius_Quake(9,64,0,16,0);
			SPI2 A 0 A_StartSound("spider/land");
			loop;
		See:
			SPI2 ABCD 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);

				chasetimer++;
				if (chasetimer >= 4)
				{
					A_StartSound("spider/step");
					chasetimer = 0;
				}
			}
			loop;

		Melee:
			SPI2 E 5 
			{
				A_FaceTarget();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_CustomMeleeAttack(random(1,10)*12,"misc/gibbed","misc/gibbed","Melee",true);
			}
			SPI2 A 13 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 150) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(9); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(10); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(11); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 30) { A_SetTics(12); }
				A_FaceTarget();
			}
			goto See;

		Missile:
			MNTR V 0 A_Jump (82,29);
			MNTR V 0 A_Jump (32,18);
			SPI2 U 5 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			TNT1 A 0 A_jumpifcloser(1024,15);
			SPI2 E 0 A_FaceTarget();
			MNTR E 0 A_StartSound("spider/step");
			SPI2 UUUUUUUUUU 5 
			{
				A_SkullAttack(20);
			}
			SPI2 A 1 
			{
				A_StartSound("spider/land");
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(0); }
				A_Stop();
			}
			goto See;
			SPI2 U 5 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			SPI2 X 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_SpawnProjectile("FlameShot", 54, 0, -8, 0);
			}
			SPI2 X 2
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_SpawnProjectile("FlameShot", 54, 0, 0, 0);
			}
			SPI2 X 2
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_SpawnProjectile("FlameShot", 54, 0, -8, 0);
			}
			SPI2 X 3 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			SPI2 U 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			goto See;
			SPI2 E 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			SPI2 EEE 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_ThrowGrenade("LengSpiderling", 85, 10, 20);
			}
			SPI2 E 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			goto See;
			SPI2 E 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			SPI2 U 5 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_StartSound("spider2/sight");
			}
			SPI2 X 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();
				A_SpawnProjectile("GrellBall", 54, 0, -8, 0);
			}
			SPI2 X 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();
				A_SpawnProjectile("GrellBall", 54, 0, 0, 0);
			}
			SPI2 X 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();
				A_SpawnProjectile("GrellBall", 54, 0, 8, 0);
			}
			SPI2 U 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			goto See;

		Pain:
			SPI2 E 2 A_SetTics(random(0,2));
			SPI2 E 2 A_EEPain();
			SPI2 EEE 6 
			{
				A_FaceTarget();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_ThrowGrenade("LengSpiderling", 85, 10, 20);
			}
			goto See;
		Pain.Holy:
		Pain.Eldritch:
			SPI2 E 2 A_SetTics(random(0,2));
			SPI2 E 2 A_EEPain();
			SPI2 EEEEEEEEEEEE 2;
			SPI2 EEE 6
			{
				A_Facetarget();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_ThrowGrenade("LengSpiderling", 85, 10, 20);
			}
			goto See;

		Death:
			MNTR A 0 A_Die();
			MNTR A 0 A_Fall();
			SPI2 F 8 bright A_Pain();
			SPI2 G 18 bright A_Scream();
			SPI2 HIJKL 3 bright;
			SPI2 M -1 A_BossDeath();
			stop;
		Raise:
			stop;
	}
}

class SpiderGodling : SpiderGod
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Spinner's Spawn";
		Obituary "%o was immolated by the Spinner's spawn.";
		HitObituary "%o was devoured by the Spinner's spawn.";
		Health 10000;
		Height 42;
		Radius 56;
		Speed 32;
		mass 250000;
		MeleeRange 42;
		MeleeDamage 8;
		Painchance 30;
		DamageFactor "Bonk", 1.0;
		DamageFactor "Chop", 1.0;
		DamageFactor "Suck", 1.0;
		DamageFactor "Cricket", 1.0;
		DamageFactor "Lead", 1.0;
		DamageFactor "Breakfast", 1.0;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 1.0;
		DamageFactor "Beats", 1.0;
		Painchance "Fire", 100;
		DamageFactor "Fire", 3.33;
		Painchance "Ice", 9;
		DamageFactor "Ice", 0.3;
		Painchance "Fire", 33;
		DamageFactor "Fire", 3.33;
		Painchance "Ice", 3;
		DamageFactor "Ice", 0.3;
		DamageFactor "CherryBomb", 2.165;
		Painchance "CherryBomb", 22;
		DamageFactor "Spinner", 2.165;
		Painchance "Spinner", 22;
		DamageFactor "BRocket", 2.165;
		Painchance "BRocket", 22;
		DamageFactor "Popper", 1.0;
		Painchance "Fist", 45; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 75; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 0.8; // 6.4
		Painchance "Eldritch", 150;
		DamageFactor "Eldritch", 2.5;
		DamageFactor "Breakfast", 25.0;
		Painchance "Breakfast", 255;
		Dropitem "LengSpiderling";
		Scale 1.0;
		-MISSILEEVENMORE;
		-NOTARGET;
		-BOSS;
		dropitem "Backpack", 2;
		dropitem "Backpack", 2;
	}
	
	States
	{
		Spawn:
			SPI2 AAAAAAAAAA 10 A_Look();
			loop;
		See:
			SPI2 ABCD 2
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			loop;
		Missile:
			TNT1 A 0 A_jumpifcloser(1024,14);
			SPI2 E 0 A_Facetarget();
			MNTR E 0 A_StartSound("spider/step");
			SPI2 UUUUUUUUUU 5 
			{
				A_SkullAttack(20);
			}
			MNTR A 0 A_StartSound("spider/land");
			SPI2 A 1 A_Stop();
			MNTR V 0 A_Jump (82,11);
			MNTR V 0 A_Jump (32,5);
			SPI2 U 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			SPI2 X 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_SpawnProjectile("GrellBall", 16, 0, 0, 0);
			}
			SPI2 X 3 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();
			}
			SPI2 U 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			goto See;
			SPI2 E 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			SPI2 EEE 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_ThrowGrenade("LengSpiderling", 85, 10, 20);
			}
			SPI2 E 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			goto See;
			SPI2 E 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			SPI2 U 5 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_StartSound("spider2/sight");
				A_FaceTarget();
			}
			SPI2 X 5 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_SpawnProjectile("HellRipper2", 56, 0, 0, 0);
			}
			SPI2 X 17 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 225) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(9); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 175) { A_SetTics(10); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 150) { A_SetTics(11); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 125) { A_SetTics(12); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 100) { A_SetTics(13); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 75) { A_SetTics(14); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 50) { A_SetTics(15); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 25) { A_SetTics(16); }
				A_FaceTarget();
			}
			SPI2 X 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_SpawnProjectile("GrellBall", 16, 0, -8, 0);
			}
			SPI2 X 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_SpawnProjectile("GrellBall", 16, 0, 0, 0);
			}
			SPI2 X 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_SpawnProjectile("GrellBall", 16, 0, 8, 0);
			}
			SPI2 U 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_FaceTarget();
			}
			goto See;

		Pain:
			SPI2 E 2 A_SetTics(random(0,2));
			SPI2 E 2 A_EEPain();
			SPI2 EEE 6
			{
				A_FaceTarget();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_ThrowGrenade("LengSpiderling", 85, 10, 20);
			}
			goto See;
		Pain.Eldritch:
			SPI2 E 2 A_SetTics(random(0,2));
			SPI2 E 2 A_EEPain();
			SPI2 EEEEEEEEEEEE 2;
			SPI2 EEE 6 
			{
				A_FaceTarget();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_ThrowGrenade("LengSpiderling", 85, 10, 20);
			}
			goto See;

		Death:
			MNTR A 0 A_Die();
			MNTR A 0 A_Fall();
			SPI2 F 8 bright A_Pain();
			SPI2 G 18 bright A_Scream();
			SPI2 HIJKL 3 bright;
			SPI2 M -1 A_BossDeath();
			stop;
		
		Raise:
			stop;
	}
}

class FlameShot : FatShotNew
{
	default
	{
		Tag "Flamer Shot";
		DamageType "Fire";
		DamageFunction (8 * random(1,8));
		Speed 25;
		SeeSound "skeleton/attack";
		Decal "Scorch";
	}
	
	States
	{
		Spawn:
			SBAL ABC 5 BRIGHT;
			loop;
		Death:
			SBAL DEFGH 3 BRIGHT;
			stop;
	}
}

class HellRipper : FatShotNew
{
	default
	{
		Tag "Hell Ripper";
		DamageType "Fire";
		DamageFunction (30 * random(1,8));
		Speed 50;
		Explosionradius 64;
		ExplosionDamage 50;
		SeeSound "skeleton/attack";
		Decal "Scorch";
	}
	
	States
	{
		Spawn:
			TNT1 A 1 Bright A_SpawnProjectile("ArchvileFire2",0,0,90,0);
			TNT1 A 0 Bright A_SpawnProjectile("ArchvileFire2",0,0,-90,0);
			TNT1 A 0 A_JumpIf (pos.z-floorz<24,1);
			loop;
			TNT1 A 0 A_Explode();
			TNT1 A 0 ThrustThingZ(0, random(2,3), 0, 0);
			loop;
		Death:
			TNT1 B 5 A_Burst("ArchvileFire2");
			stop;
	}
}

class ArchvileFire2 : ArchvileFire
{
	default
	{
		Tag "Vile FireHex";
		DamageFunction (5 * random(1,8));
		Speed 4;
	}
}

class HellRipper2 : HellRipper
{
	default
	{
		Tag "Hell Ripper";
		DamageFunction (12 * random(1,8));
	}
}

class dragontrail : EEBaseZSC
{
	default
	{
		Radius 0;
		Height 1;
		Speed 0;
		PROJECTILE;
		RENDERSTYLE "Add";
		ALPHA 1;
	}
	
	States
	{
		Spawn:
			NULL A 2 Bright;
			BOOM ABC 2 Bright;
			Stop;
	}
}

class LengSpider : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Leng Spider";
		health 150;
		radius 32;
		height 56;
		speed 12;
		Painchance 200;
		DamageFactor "Bonk", 1.0;
		DamageFactor "Chop", 1.0;
		DamageFactor "Suck", 1.0;
		DamageFactor "Cricket", 1.0;
		DamageFactor "Lead", 1.0;
		DamageFactor "Breakfast", 1.0;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 1.0;
		DamageFactor "Beats", 1.0;
		Painchance "Fire", 255;
		DamageFactor "Fire", 3.33;
		Painchance "Ice", 60;
		DamageFactor "Ice", 0.3;
		DamageFactor "CherryBomb", 2.165;
		Painchance "CherryBomb", 255;
		DamageFactor "Spinner", 2.165;
		Painchance "Spinner", 255;
		DamageFactor "BRocket", 2.165;
		Painchance "BRocket", 255;
		DamageFactor "Popper", 1.0;
		Painchance "Fist", 256; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 256; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Crush", 0.8;
		Painchance "Eldritch", 255;
		DamageFactor "Eldritch", 2.5;
		DamageFactor "Breakfast", 25.0;
		Painchance "Breakfast", 255;
		Obituary "%o was devoured by a Leng Spider.";
		HitObituary "%o was devoured by a Leng Spider.";
		SeeSound "spider2/sight";
		MeleeSound "misc/gibbed";
		PainSound "spider2/pain";
		translation 1;
		translation "96:111=64:79";
		scale 1.0;
		meleedamage 6;
		MONSTER;
		+NOTARGET;
		dropitem "Backpack", 2;
		dropitem "Backpack", 2;
	}
	States
	{
		Spawn:
			GAYS A 1 A_Look();
			loop;
		See:
			GAYS ABCD 1 
			{
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			loop;
		Melee:
			GAYS E 5 
			{
				A_FaceTarget();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_CustomMeleeAttack(random(1,10)*6,"misc/gibbed","misc/gibbed","Melee",true);
			}
			GAYS E 13 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 150) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(9); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(10); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(11); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 30) { A_SetTics(12); }
				A_FaceTarget();
			}
			goto See;

		Pain:
			GAYS A 2 A_SetTics(random(0,2));
			GAYS A 2 A_EEPain();
			GAYS A 2;
			goto See;
		Pain.Eldritch:
			GAYS A 2 A_SetTics(random(0,2));
			GAYS A 2 A_EEPain();
			GAYS AAAAAAAAAAAAA 2;
			goto See;

		Death:
			GAYR FEDC 5 A_Setfloorclip();
			GAYR B 5 A_Scream();
			GAYR A 5 A_Die();
			GAYR A 0 A_Fall();
			GAYR A -1;
			stop;

		Ice:
			GAYS A 5 A_GenericFreezeDeath();
			GAYS A 1 A_FreezeDeathChunks();
			wait;
	}
}

class LengSpiderling : LengSpider
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		Tag "Leng Spiderling";
		Obituary "%o was eaten by a Leng Spiderling.";
		HitObituary "%o was eaten by a Leng Spiderling.";
		health 50; // 150
		radius 20; // 32
		height 24; // 56
		speed 9; // 12
		Scale 0.5;
		Translation 2;
		Meleedamage 3;
		DamageFactor "Crush", 1.0;
		DamageFactor "Bonk", 1.0;
		DamageFactor "Chop", 1.0;
		DamageFactor "Suck", 1.0;
		DamageFactor "Cricket", 1.0;
		DamageFactor "Lead", 1.0;
		DamageFactor "Breakfast", 1.0;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 1.0;
		DamageFactor "Beats", 1.0;
		Painchance "Fire", 255;
		DamageFactor "Fire", 3.33;
		Painchance "Ice", 60;
		DamageFactor "Ice", 0.3;
		DamageFactor "CherryBomb", 1.0;
		DamageFactor "Spinner", 1.0;
		DamageFactor "BRocket", 1.0;
		DamageFactor "Popper", 1.0;
		Painchance "Fist", 256; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 256; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Eldritch", 255;
		DamageFactor "Eldritch", 2.5;
		DamageFactor "Breakfast", 25.0;
		Painchance "Breakfast", 255;
		-NOTARGET;
		dropitem "Backpack", 2;
		dropitem "Backpack", 2;
	}
	
	States
	{
		Melee:
			GAYS E 5 
			{
				A_FaceTarget();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
				A_CustomMeleeAttack(random(1,10)*3,"misc/gibbed","misc/gibbed","Melee",true);
			}
			GAYS E 13 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 150) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(9); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(10); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(11); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 30) { A_SetTics(12); }
				A_FaceTarget();
			}
			goto See;
	}
}

// :V
class Nyarlathotep : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Strange Aeons Monsters"
		obituary "%o was smote by the hand of The Crawling Chaos.";
		tag "Nyarlathotep, The Crawling Chaos";
		radius 20;
		height 80;
		meleeDamage 3;
		health 120000; // 4000
		mass 150000;
		speed 30;
		painchance 100;
		Painchance "Fist", 150; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 250; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Eldritch", 255;
		Painchance "Holy", 255;
		Painchance "Lead", 255;
		DamageFactor "Crush", 0.25; // 2.0
		DamageFactor "Eldritch", 2.5;
		DamageFactor "Holy", 5.0;
		DamageFactor "Bonk", 0.25;
		DamageFactor "Chop", 0.125;
		DamageFactor "Suck", 0.5;
		DamageFactor "Cricket", 10.0;
		DamageFactor "Lead", 25.0;
		DamageFactor "Breakfast", 5.0;
		DamageFactor "Zap", 0.5;
		DamageFactor "Dust", 10.0;
		DamageFactor "Beats", 5.0;
		DamageFactor "Fire", 0.0;
		DamageFactor "Ice", 0.0;
		DamageFactor "CherryBomb", 0.5;
		DamageFactor "Spinner", 0.5;
		DamageFactor "BRocket", 0.5;
		DamageFactor "Popper", 3.75;
		SeeSound "wizard/sight";
		PainSound "wizard/pain";
		DeathSound "wizard/death";
		ActiveSound "wizard/active";
		MONSTER;
		+FLOAT;
		+NOGRAVITY;
		+NOTARGET;
		+NOINFIGHTING;
		+BOSS;
		+BOSSDEATH;
		dropitem "Backpack", 256;
		dropitem "Backpack", 128;
		dropitem "Backpack", 64;
		dropitem "Backpack", 32;
	}
	
	states
	{
		Spawn:
			LMWZ E 10 A_Look();
			loop;

		See:
			LMWZ EEFFEEFF 1 
			{
				A_EEChase("Melee","Missile",CHF_FASTCHASE);
			}
			loop;

		Missile:
			LMWZ E 0 A_jump(256,"wraiths","FloorShot","magic");
			goto See;

		Wraiths:
			LMWZ EFG 10 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			TNT1 AAAAA 0 
			{
				A_SpawnItemEx("ShadowBeastCreature", 0, 0, random(16,48), random(0,8), random(0,8), random(0,8), random(0,359), 0);
			}
			LMWZ G 5
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 270) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
			}
			LMWZ E 5 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 270) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
			}
			LMWZ E 1 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(0); }
				A_StartSound("wizard/tele");
			}
			Goto See;
		FloorShot:
			LMWZ F 10 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			LMWZ G 0 
			{
				A_SpawnProjectile("FloorShot", 60, 0, 0);
			}
			LMWZ GGG 10 bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			LMWZ E 5 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 270) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
			}
			LMWZ E 1 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(0); }
				A_StartSound("wizard/tele");
			}
			goto See;
		Magic:
			LMWZ E 10 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 200) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 160) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 80) { A_SetTics(8); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 40) { A_SetTics(9); }
				A_FaceTarget();
			}
			LMWZ E 4 bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_SpawnProjectile("MagicBlast", 90, 30, 0);
				A_FaceTarget();
			}
			LMWZ E 4 bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_SpawnProjectile("MagicBlast", 90, -30, 0);
				A_FaceTarget();
			}
			LMWZ E 4 bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_SpawnProjectile("MagicBlast", 55, -30, 0);
				A_FaceTarget();
			}
			LMWZ E 4 bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_SpawnProjectile("MagicBlast", 55, 30, 0);
				A_FaceTarget();
			}
			LMWZ E 5 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 270) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(4); }
			}
			LMWZ E 1
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(0); }
				A_StartSound("wizard/tele");
			}
			goto See;

		Pain:
			LMWZ I 3;
			LMWZ I 5 A_EEPain();
			LMWZ I 0 A_StartSound("wizard/tele");
			Goto See;
		Pain.Beats:
			LMWZ I 3;
			LMWZ I 5 A_EEPain();
			LMWZ II 3;
			LMWZ I 0 A_StartSound("wizard/tele");
			Goto See;
		Pain.Lead:
		Pain.Cricket:
		Pain.Dust:
			LMWZ I 3;
			LMWZ I 5 A_EEPain();
			LMWZ IIIIII 3;
			LMWZ I 0 A_StartSound("wizard/tele");
			Goto See;
		Pain.Eldritch:
		Pain.Holy:
			LMWZ I 3;
			LMWZ I 5 A_EEPain();
			LMWZ IIIIIIII 3;
			LMWZ I 0 A_StartSound("wizard/tele");
			Goto See;

		Death:
			LMWZ J 6 A_Scream();
			LMWZ K 6 A_NoBlocking();
			LMWZ LMNO 6;
			LMWZ P 0 A_BossDeath();
			LMWZ P -1;
			Stop;
	}
}

class NyarlathotepLesser : Nyarlathotep
{
	default
	{
		health 12000; // 4000
		mass 15000;
		speed 20;
		Alpha 0.8;
		RenderStyle "Add";
		painchance 200;
		Painchance "Fist", 150; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 250; // Kick attacks have a +150% chance of stunning an enemy
		Painchance "Eldritch", 255;
		Painchance "Holy", 255;
		Painchance "Lead", 255;
		DamageFactor "Crush", 0.25; // 2.0
		DamageFactor "Eldritch", 2.5;
		DamageFactor "Holy", 5.0;
		DamageFactor "Bonk", 0.5;
		DamageFactor "Chop", 0.25;
		DamageFactor "Suck", 1.0;
		DamageFactor "Cricket", 10.0;
		DamageFactor "Lead", 25.0;
		DamageFactor "Breakfast", 5.0;
		DamageFactor "Zap", 1.0;
		DamageFactor "Dust", 10.0;
		DamageFactor "Beats", 5.0;
		DamageFactor "Fire", 0.25;
		DamageFactor "Ice", 0.25;
		DamageFactor "CherryBomb", 0.625;
		DamageFactor "Spinner", 0.625;
		DamageFactor "BRocket", 0.625;
		DamageFactor "Popper", 3.75;
	}
}

class FloorShot : EEProjectile
{
	default
	{
		Tag "Nyarly Floorsnake";
		Radius 5;
		Height 5;
		Speed 15;
		ReactionTime 175;
		DamageFunction (11 * random(1,8));
		ExplosionDamage 10;
		ExplosionRadius 128;
		DamageType "Fire";
		RenderStyle "Add";
		Alpha 1;
		PROJECTILE;
		DONTHURTSHOOTER;
		+FRIENDLY;
		+SEEKERMISSILE;
		+THRUGHOST;
		+FLOORHUGGER;
		-NOGRAVITY;
		Seesound "weapons/diasht";
		DeathSound "weapons/boom1";
	}
	
	States
	{
		Spawn:      
			NULL A 1 Bright A_SeekerMissile(0,3);
			NULL A 0 Bright;
			NULL A 0 Bright A_SpawnProjectile("floorPuff",0,0,0,0);
			loop;
		Death:
			NUCK A 4 Bright A_Explode();
			NUCK B 4 Bright;
			NUCK CDE 3 Bright;
			stop;
	}
}

class FloorPuff : EEBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		Speed 0;
		RENDERSTYLE "Add";
		DamageType "Fire";
		ALPHA 1;
		PROJECTILE;
		DONTHURTSHOOTER;
		+FRIENDLY;
		+FLOORHUGGER;
		-NOGRAVITY;
	}
	
	States
	{
		Spawn:
			FLOR ABCDEFGH 3 Bright;
			stop;
	}
}

class MagicBlast : EEProjectile
{
	default
	{
		Tag "Nyarly Magiblast";
		Radius 8;
		Height 8;
		Speed 25;
		DamageFunction (5 * random(1,8));
		PROJECTILE;
		RENDERSTYLE "Add";
		ALPHA 1;
		DamageType "Fire";
		+THRUGHOST;
		SeeSound "monster/dknmsl";
	}

	States
	{
		Spawn:
			SHOK A 2 Bright A_CStaffMissileSlither();
			SHOK A 0 A_SpawnItem("magicPuff",0,0);
			SHOK B 2 Bright A_CStaffMissileSlither();
			SHOK B 0 A_SpawnItem("magicPuff",0,0);
			SHOK C 2 Bright A_BishopMissileWeave();
			SHOK C 0 A_SpawnItem("magicPuff",0,0); 
			loop;
		Death:
			SHOK DEF 4 Bright;
			stop;
	}
}

class magicPuff : EEBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		Speed 0;
		RENDERSTYLE "Add";
		ALPHA 1;
		PROJECTILE;
	}
	
	States
	{
		Spawn:
			SHOK ABCABCABC 3 Bright A_FadeOut(0.10);
			stop;
	}
}