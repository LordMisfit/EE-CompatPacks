/*
class PSXDMonsterSpawner : RandomSpawner2 abstract
{
	int deathtimer;
	string MonsterName;

	// This function is needed for handling boss replacers 
	// [also this is to try to fix the problem of INSTANT effects on the death of spawned "boss" monsters in maps like E2M8/E3M8 so you can try to pick up the bosses' drops before the level ends]
	override void Tick()
	{
		Actor.Tick(); // Actor instead of Super in order to replace the original code added to RandomSpawner instead of adding to it.
		DDCreature monstertype;
		if (tracer) monstertype = DDCreature(tracer);
		if (tracer == null)
		{
			A_BossDeath();
			if (dydudebug_scriptdisplays) Console.Printf("BOSS/BOSSDEATH type RandomSpawner Self-Destroyed/nulled");
			Destroy();
		}
		else
		{
			if (monstertype)
			{
				MonsterName = monstertype.GetClassName();
				if (monstertype.bossdeathactivate)
				{
					A_BossDeath();
					if (dydudebug_scriptdisplays) Console.Printf("%s [bossdeathactivate: %d]", MonsterName, monstertype.bossdeathactivate);
					Destroy();
				}
			}
			else
			{
				if (tracer.health <= 0)
				{
					A_BossDeath();
					if (dydudebug_scriptdisplays) Console.Printf("BOSS/BOSSDEATH type RandomSpawner Self-Destroyed/nulled");
					Destroy();
				}
			}
		}
	}

	protected bool CanFitHere(Class<Actor> actorClass) 
	{
		let actor = Spawn(actorClass, Pos, NO_REPLACE);
		
		if (actor == null)
			return false;
		else 
		{
			let result = actor.TestMobjLocation();
			actor.ClearCounters();
			actor.Destroy();
			return result;
		}
	}
}
*/
class NightmareSpectreSpawner : DDMonsterSpawner replaces PSXNightmareSpectre
{
	Default
	{
		//$Sprite "RNMSF0"
		Radius 30;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		string result = "NightmareSpectreNew";
		string classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;

			while(!success && !success2)
			{
				if (random(1,16) <= 1) 
				{
					if (random(1,3) <= 1) classname = "NightmareVitriola";
													 else classname = "NightmareGalgoyle";
				}
				else
				if (random(1,16) <= 1) 
				{
					if (random(1,4) <= 1) classname = "SpectralFractalChicken";
													else classname = "SpectralFractalChick";
				}
				else
				if (random(1,random(9,11)) <= random(1,3)) 
				{
					if (random(1,16) <= 1)
					{
						if (random(1,2) <= 1) classname = "Forsaken_Quisling";
														else classname = "Forsaken_Jorgensen";
					}
					else
					{
						classname = "Forsaken";
					}
				}
				else
				{
					if (random(1,8) <= random(5,6))
					{
						if (random(1,2) == 1)
						{
							if (random(1,8) <= (random(2,3) + (Skill * 0.5))) classname = "NightmareCentaurionSgt";
																													else classname = "NightmareCentaurion";
						}
						else
						{
							if (random(1,2) <= 1)
							{
								if (random(1,16) <= 1) 
								{
									if (random(1,8) <= 1) classname = "Shillfish_FlyFuzzy";
																	else classname = "ShillfishFuzzy";
								}
								else classname = "NightmareBellefish_Fly";
							}
							else
							{
								if (random(1,16) <= (1 + (Skill * 0.75))) classname = "NightmareCremeDeBratte_Torched";
																										else classname = "NightmareCremeDeBratte";
							}
						}
					}
					else
					{
						if (random(1,4) <= 3) classname = "NightmareReelHeel";
														 else classname = "NightmareNurse";
					}
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}

			}
		}
		else spawndoomtype = true;
		
		return result;
	}
}

class LostSoulSpawner2 : DDMonsterSpawner //replaces LostSoul
{
	Default
	{
		//$Sprite "RNMSR0"
		Radius 16;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		string classname;
		string result = "LostSoulNew";
		if (random(1,256) <= 43)
		{
			classname = "LostSoulAnnoying";
			if (CanFitHere(classname)) result = classname;
		}
		return result;
	}
}
