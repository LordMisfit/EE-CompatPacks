// Base Circus 2 Weapon Class
class Circus2Weapon : DinahWeapon
{
	default
	{
		Weapon.Kickback 100;
	}
}

// Weapons
class GutFlingerNew : Circus2Weapon
{
	default
	{
		Weapon.SlotNumber 2;
		Weapon.SlotPriority 2.0;
		Tag "Gut-Flinger: \c[purple]<FIRE>\c- shoots a single explosive gut at foes. \c[purple]<ALT-FIRE>\c- quick-shoots a less accurate burst of guts. Shots can deal self-AOE, so beware!";
		Weapon.SelectionOrder 1150;
		Inventory.Pickupsound "Dinah/GetWeapon";
		DDWeapon.PickupVoice true;
		DDWeapon.PickupSound2 "misc/w_pkup";
		DDWeapon.PickupVoice2 false;
		Weapon.AmmoType "ClownSouls";
		Weapon.AmmoType2 "ClownSouls";
		Weapon.AmmoGive 5;
		Weapon.AmmoUse1 1;
		Weapon.AmmoUse2 1;
		Inventory.Pickupmessage "\c[gold]What in Heaven's name is this weird contraption? I'm getting bad vibes from it... \cx[Slot 2]\c-";
		AttackSound "";
		Scale 1;
	}
	
	States 
	{
		Spawn: 
			CCCC F -1;
			loop;
		Ready: 
			CCCC A 1 A_WeaponReady(WRF_ALLOWUSER4);
			loop;
		Deselect: 
			CCCC A 1 
			{
				A_Lower(12);
			}
			loop;
		Select: 
			CCCC A 1 
			{
				A_Raise(12);
			}
			loop;
		Fire:
			CCCC A 1 A_JumpIfNoAmmo("FireNoAmmo");
			CCCC A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(321,0,3,20);
			}
			CCCC B 1
			{
				A_StartSound("GUTFIRE");
				string type = "FlyingGut";
				if (invoker.IPAttackCheck) type = "FlyingGutNoHurt";
				A_FireProjectile(type,0,false,5.0,1,0,0);
				double p1 = frandompick(7.5,7.5,7.5,7.5,15.0);
				double p2 = frandompick(7.5,7.5,7.5,7.5,15.0);
				if (invoker.IPAttackCheck) 
				{
					A_FireProjectile(type,p1,false,5.0,1,0,p2);
					A_FireProjectile(type,p1,false,5.0,1,0,-p2);
					A_FireProjectile(type,-p1,false,5.0,1,0,p2);
					A_FireProjectile(type,-p1,false,5.0,1,0,-p2);
				}

				invoker.A_CheckIPModeOnUse();
				if (!A_CheckInfiniteAmmo()) A_TakeInventory("ClownSouls",1);
			}
			CCCC E 1;
			CCCC EDCB 3;
			Goto Ready;
		FireNoAmmo:
			CCCC E 0;
			Goto Deselect;
		AltFire:
			CCCC A 1
			{
				if (CountInv("ClownSouls") <= 0) return resolvestate("AltFireNoAmmo");
				return resolvestate(null);
			}
			CCCC A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(321,0,3,20);
			}
			CCCC B 1
			{
				string type = "FlyingGut";
				if (invoker.IPAttackCheck) type = "FlyingGutNoHurt";
				A_StartSound("GUTFIRE");
				double rand = frandom(-(A_GetHitScanXSpread(16)),(A_GetHitScanXSpread(16)));
				double rand2 = frandom(-(A_GetHitScanXSpread(16)),(A_GetHitScanXSpread(16)));
				double p1 = frandompick(7.5,7.5,7.5,7.5,15.0) + rand;
				double p2 = frandompick(7.5,7.5,7.5,7.5,15.0) + rand2;
				A_FireProjectile(type,rand,false,5.0,1,0,rand2);
				if (invoker.IPAttackCheck) 
				{
					A_FireProjectile(type,p1,false,5.0,1,0,p2);
					A_FireProjectile(type,p1,false,5.0,1,0,-p2);
					A_FireProjectile(type,-p1,false,5.0,1,0,p2);
					A_FireProjectile(type,-p1,false,5.0,1,0,-p2);
				}
				
				invoker.A_CheckIPModeOnUse();
				if (!A_CheckInfiniteAmmo()) A_TakeInventory("ClownSouls",1);
			}
			CCCC E 1;
			CCCC E 1;
			CCCC D 1;
			CCCC C 1;
			Goto Ready;
		AltFireNoAmmo:
			CCCC E 0;
			Goto Ready;
	}
} 

class ClownGrenadeNew : Circus2Weapon
{
	default
	{
		Weapon.SlotNumber 6;
		Weapon.SlotPriority 2.0;
		Tag "Clownish Grenade: \c[purple]<FIRE>\c- throws a grenade that deals no self-AOE. Will explode on contact with a shootable target.";
		Weapon.SelectionOrder 1400;
		Inventory.Pickupsound "Dinah/GetWeapon";
		DDWeapon.PickupVoice true;
		DDWeapon.PickupSound2 "misc/w_pkup";
		DDWeapon.PickupVoice2 false;
		Weapon.AmmoType "CGrenadeAmmo" ;
		Weapon.AmmoGive 5;
		Weapon.AmmoUse 1;
		Inventory.Pickupmessage "\c[gold]These look like some kind of odd canister grenades... \cx[Slot 6]\c-";
		AttackSound "";
		+FloatBob;
		Scale 0.3;
	}
	States 
	{
		Spawn: 
			CGRD ABCDEFGHIJKL 3;
			loop;
		Ready: 
			GHND ABCDEFFFFFEDCBAA 1 A_WeaponReady(WRF_ALLOWUSER4);
			loop;
		Deselect: 
			GHND A 1
			{
				A_Lower(12);
			}
			loop;
		Select: 
			GHND A 1 
			{
				A_Raise(12);
			}
			loop;
		Fire: 
			GHND A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(331,0,3,8);
			}
			GHND I 4
			{
				string type = "CGrenade";
				if (CountInv("PowerStrength") || CountInv("PowerStrengthDD")) type = "CGrenadeBerserk";
				if (invoker.IPAttackCheck) 
				{
					type = "CGrenadeSplitter";
					if (CountInv("PowerStrength") || CountInv("PowerStrengthDD")) type = "CGrenadeBerserkSplitter";
				}
				A_FireProjectile(type,0,false,0,1,0,0);
				
				invoker.A_CheckIPModeOnUse();
				if (!A_CheckInfiniteAmmo()) A_TakeInventory("CGrenadeAmmo",1);
			}
			GHND G 4 
			{
			}
			GHND H 10 
			{
			}
			Goto Ready;
	}
}

class GoreBalloonNew : Circus2Weapon
{
	default
	{
		Weapon.SlotNumber 4;
		Weapon.SlotPriority 2.0;
		Tag "Explosive Gore Balloon: \c[purple]<FIRE>\c- releases a bloody red balloon packed with explosive viscera at enemies. The released viscera can deal self-AOE, so beware.";
		Weapon.SelectionOrder 1500;
		Inventory.Pickupsound "Dinah/GetWeapon";
		DDWeapon.PickupVoice true;
		DDWeapon.PickupSound2 "misc/w_pkup";
		DDWeapon.PickupVoice2 false;
		Weapon.AmmoType "GoreBalloons";
		Weapon.AmmoGive 5;
		Weapon.AmmoUse 1;
		Inventory.Pickupmessage "\c[gold]Urgh! These balloons are heavy, almost like... wait... is there flaggin' BLOOD inside of these!? \cx[Slot 4]\c-";
		Obituary "%o wanted %k's balloon.";
		Scale 0.75;
	}
	States 
	{
		Spawn: 
			BLNN J -1;
			loop;
		Ready: 
			BLND ABCD 6 A_WeaponReady(WRF_ALLOWUSER4);
			loop;
		Deselect: 
			BLND E 1
			{
				A_Lower(12);
			}
			Loop;
		Select: 
			BLND E 1
			{
				A_Raise(12);
			}
			Loop;
		Fire: 
			BLND A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(341,0,6,8);
			}
			BLND A 1 
			{
			}
			BLND F 2
			{
			}
			BLND G 2
			{
			}
			TNT1 A 0
			{
				string type = "GoreBalloon666";
				if (invoker.IPAttackCheck) type = "GoreBalloon666IP";
				double heit = frandom(-1.5,3.0);
				A_FireProjectile(type,0,false,0,heit,0,0);
				if (invoker.IPAttackCheck)
				{
					if (random(1,16) <= 1)
					{
						A_FireProjectile(type,-15,false,5.2,heit,0,0);
						A_FireProjectile(type,-7.5,false,5.2,heit,0,0);
						A_FireProjectile(type,7.5,false,-5.2,heit,0,0);
						A_FireProjectile(type,15,false,-5.2,heit,0,0);
					}
					else
					{
						A_FireProjectile(type,-10,false,8,heit,0,0);
						A_FireProjectile(type,10,false,-8,heit,0,0);
					}
				}
				
				invoker.A_CheckIPModeOnUse();
				if (!A_CheckInfiniteAmmo()) A_TakeInventory("GoreBalloons",1);
			}
			BLND I 6
			{
			}
			BLND I 6
			{
			}
			BLND H 6
			{
			}
			TNT1 A 0;
			Goto Select;
	}
}

class GasRocketLauncherNew : Circus2Weapon
{
	default
	{
		Weapon.SlotNumber 5;
		Weapon.SlotPriority 2.0;
		Tag "Bingo's Gas Rocket Launcher: \c[purple]<FIRE>\c- Launches a rocket that explodes into a expanding spread of psychedelic gas clouds. \c[purple]<ALT-FIRE>\c- allows a more inaccurate quick-fire mode. The clouds of your rockets do NOT deal self-AOE, so\c- \c[green]you can safely move through them.\c-";
		Weapon.SelectionOrder 1050;
		Inventory.Pickupsound "Dinah/GetWeapon";
		DDWeapon.PickupVoice true;
		DDWeapon.PickupSound2 "misc/w_pkup";
		DDWeapon.PickupVoice2 false;
		Weapon.AmmoType "ClownSouls";
		Weapon.AmmoType2 "ClownSouls"; 
		Weapon.AmmoGive 20;
		Weapon.AmmoUse1 5;
		Weapon.AmmoUse2 5;
		Inventory.Pickupmessage "\c[gold]Some kind of garish missile or rocket shooting weapon... \cx[Slot 5]\c-";
		Obituary "%o choked on %k's gas.";
		AttackSound "";
		Scale 0.75;
	}
	
	States 
	{
		Spawn: 
			PRCK V -1;
			loop;
		Ready: 
			PRCK G 1 A_WeaponReady(WRF_ALLOWUSER4);
			loop;
		Deselect: 
			PRCK G 1 
			{
				A_Lower(12);
			}
			loop;
		Select: 
			PRCK D 1
			{
				A_Raise(12);
			}
			loop;
		Fire:
			PRCK A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(351,0,6,8);
			}
			PRCK G 0 
			{
				string type = "RevRocket2";
				if (invoker.IPAttackCheck) type = "RevRocket2IP";
				A_FireProjectile(type,0,false,4,1,0,0);
				
				invoker.A_CheckIPModeOnUse();
				if (!A_CheckInfiniteAmmo()) A_TakeInventory("ClownSouls",5);
			}
			PRCK W 4;
			PRCK A 4 A_StartSound("RRELOAD");
			PRCK BCDEFG 4;
			Goto Ready;
		AltFire:
			PRCK A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(351,0,6,8);
			}
			PRCK G 0 
			{
				if (CountInv("ClownSouls") <= 4)
				{
					return resolvestate("Ready");
				}
				return resolvestate(null);
			}
			PRCK G 0 
			{
				string type = "RevRocket2";
				if (invoker.IPAttackCheck) type = "RevRocket2IP";
				A_FireProjectile(type,frandom(-(A_GetHitScanXSpread(17)),(A_GetHitScanXSpread(17))),5,4,1,0,frandom(-(A_GetHitScanYSpread(17)),(A_GetHitScanYSpread(17))));
				
				invoker.A_CheckIPModeOnUse();
				if (!A_CheckInfiniteAmmo()) A_TakeInventory("ClownSouls",5);
			}
			PRCK W 1;
			PRCK A 1 A_StartSound("RRELOAD");
			PRCK BCDEFG 1;
			Goto Ready;
	}
} 

class PopcornGunNew : Circus2Weapon
{
	default
	{
		Weapon.SlotNumber 7;
		Weapon.SlotPriority 2.0;
		Tag "Popcorn Gun: \c[purple]<FIRE>\c- shoots a volley of weaponized popcorn shrapnel at foes.";
		Weapon.SelectionOrder 100;
		Inventory.Pickupsound "Dinah/GetWeapon";
		DDWeapon.PickupVoice true;
		DDWeapon.PickupSound2 "misc/w_pkup";
		DDWeapon.PickupVoice2 false;
		Weapon.AmmoType "PopcornPiece";
		Weapon.AmmoGive 20;
		Weapon.AmmoUse 1;
		Inventory.Pickupmessage "\c[gold]Does... this thing shoot this popcorn I'm finding as ammo? Better save up then... \cx[Slot 7]\c-";
		Obituary "%o ate some of %k's popcorn.";
		AttackSound "";
		Scale 0.75;
	}
	
	
	
	States 
	{
		Spawn: 
			PPPG A -1;
			loop;
		Ready: 
			PGUN AAACCCDDDEEEFFFGGG 1 A_WeaponReady(WRF_ALLOWUSER4);
			loop;
		Deselect: 
			PGUN A 1  
			{
				A_Lower(12);
			}
			loop;
		Select: 
			PGUN A 1
			{
				A_Raise(12);
			}
			loop;
		Fire:
			PGUN A 0 A_Jump (200,"FirePhase2");
			PGUN A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(361,0,1,16);
			}
			PGUN A 4
			{
				A_StartSound("POPFIRE");
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("Popcorn1",frandom(-1,1),false,frandom(-6,6),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-1,1),false,frandom(-6,6),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn1",frandom(-1,1),false,frandom(-6,6),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-1,1),false,frandom(-6,6),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn1",frandom(-1,1),false,frandom(-6,6),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-1,1),false,frandom(-6,6),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn1",frandom(-1,1),false,frandom(-6,6),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-1,1),false,frandom(-6,6),frandom(-1,1),0,frandom(-1,1));
				}
				else
				{
					A_FireProjectile("Popcorn1",-1,false,4,1,0,0);
					A_FireProjectile("Popcorn2",0,false,6,1,0,0);
				}
				
				if (!A_CheckInfiniteAmmo()) A_TakeInventory("PopcornPiece",1);
			}
			PGUN B 2 
			{
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("Popcorn3",frandom(1,-1),0,frandom(-6,6),frandom(-1,1),0,frandom(1,-1));
					A_FireProjectile("Popcorn3",frandom(1,-1),0,frandom(-6,6),frandom(-1,1),0,frandom(1,-1));
					A_FireProjectile("Popcorn3",frandom(1,-1),0,frandom(-6,6),frandom(-1,1),0,frandom(1,-1));
					A_FireProjectile("Popcorn3",frandom(1,-1),0,frandom(-6,6),frandom(-1,1),0,frandom(1,-1));
				}
				else
				{
					A_FireProjectile("Popcorn3",1,0,5,1,0,0);
				}
				invoker.A_CheckIPModeOnUse();
			}
		FirePhase2:
			PGUN A 0 A_Jump (144,"FirePhase3");
			PGUN A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(361,0,1,16);
			}
			PGUN A 2
			{
				A_StartSound("POPFIRE");
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("Popcorn11",frandom(-1,1),0,frandom(-4,4),frandom(-2,2),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-4,4),false,frandom(-5,5),frandom(-1,1),0,frandom(-4,4));
					A_FireProjectile("Popcorn1",frandom(-2,2),0,frandom(-4,4),frandom(-1,1),0,frandom(-2,2));
					A_FireProjectile("Popcorn11",frandom(-1,1),0,frandom(-4,4),frandom(-2,2),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-4,4),false,frandom(-5,5),frandom(-1,1),0,frandom(-4,4));
					A_FireProjectile("Popcorn1",frandom(-2,2),0,frandom(-4,4),frandom(-1,1),0,frandom(-2,2));
					A_FireProjectile("Popcorn11",frandom(-1,1),0,frandom(-4,4),frandom(-2,2),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-4,4),false,frandom(-5,5),frandom(-1,1),0,frandom(-4,4));
					A_FireProjectile("Popcorn1",frandom(-2,2),0,frandom(-4,4),frandom(-1,1),0,frandom(-2,2));
					A_FireProjectile("Popcorn11",frandom(-1,1),0,frandom(-4,4),frandom(-2,2),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-4,4),false,frandom(-5,5),frandom(-1,1),0,frandom(-4,4));
					A_FireProjectile("Popcorn1",frandom(-2,2),0,frandom(-4,4),frandom(-1,1),0,frandom(-2,2));
				}
				else
				{
					A_FireProjectile("Popcorn11",-1,0,4,2,0,0);
					A_FireProjectile("Popcorn2",-4,false,5,1,0,0);
					A_FireProjectile("Popcorn1",2,0,4,1,0,0);
				}
				
				if (!A_CheckInfiniteAmmo()) A_TakeInventory("PopcornPiece",1);
				invoker.A_CheckIPModeOnUse();
			}
		FirePhase3:
			PGUN A 0 A_Jump (128,"FirePhase4");
			PGUN A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(361,0,1,16);
			}
			PGUN A 4 
			{
				A_StartSound("POPFIRE");
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("Popcorn3",frandom(2,-2),0,frandom(-3,3),frandom(-1,1),0,frandom(2,-2));
					A_FireProjectile("Popcorn3",frandom(2,-2),0,frandom(-3,3),frandom(-1,1),0,frandom(2,-2));
					A_FireProjectile("Popcorn3",frandom(2,-2),0,frandom(-3,3),frandom(-1,1),0,frandom(2,-2));
					A_FireProjectile("Popcorn3",frandom(2,-2),0,frandom(-3,3),frandom(-1,1),0,frandom(2,-2));
				}
				else
				{
					A_FireProjectile("Popcorn3",-2,0,3,1,0,0);
				}
			}
			PGUN B 2 
			{
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("Popcorn2",frandom(-2,2),false,frandom(-4,4),frandom(-2,2),0,frandom(-2,2));
					A_FireProjectile("Popcorn2",frandom(-4,4),0,0,frandom(-1,1),0,frandom(-4,4));
					A_FireProjectile("Popcorn2",frandom(-2,2),false,frandom(-4,4),frandom(-2,2),0,frandom(-2,2));
					A_FireProjectile("Popcorn2",frandom(-4,4),0,0,frandom(-1,1),0,frandom(-4,4));
					A_FireProjectile("Popcorn2",frandom(-2,2),false,frandom(-4,4),frandom(-2,2),0,frandom(-2,2));
					A_FireProjectile("Popcorn2",frandom(-4,4),0,0,frandom(-1,1),0,frandom(-4,4));
					A_FireProjectile("Popcorn2",frandom(-2,2),false,frandom(-4,4),frandom(-2,2),0,frandom(-2,2));
					A_FireProjectile("Popcorn2",frandom(-4,4),0,0,frandom(-1,1),0,frandom(-4,4));
				}
				else
				{
					A_FireProjectile("Popcorn2",-2,false,4,-2,0,0);
					A_FireProjectile("Popcorn2",4,0,0,1,0,0);
				}
				
				if (!A_CheckInfiniteAmmo()) A_TakeInventory("PopcornPiece",1);
				invoker.A_CheckIPModeOnUse();
			}
		FirePhase4:
			PGUN A 0 A_Jump (96,"FirePhase5");
			PGUN A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(361,0,1,16);
			}
			PGUN A 0 
			{
				A_StartSound("POPFIRE");
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("Popcorn2",frandom(-3,3),0,frandom(-4,4),frandom(-1,1),0,frandom(-3,3));
					A_FireProjectile("Popcorn3",frandom(-3,3),0,0,frandom(-1,1),0,frandom(-3,3));
					A_FireProjectile("Popcorn2",frandom(-3,3),0,frandom(-4,4),frandom(-1,1),0,frandom(-3,3));
					A_FireProjectile("Popcorn3",frandom(-3,3),0,0,frandom(-1,1),0,frandom(-3,3));
					A_FireProjectile("Popcorn2",frandom(-3,3),0,frandom(-4,4),frandom(-1,1),0,frandom(-3,3));
					A_FireProjectile("Popcorn3",frandom(-3,3),0,0,frandom(-1,1),0,frandom(-3,3));
					A_FireProjectile("Popcorn2",frandom(-3,3),0,frandom(-4,4),frandom(-1,1),0,frandom(-3,3));
					A_FireProjectile("Popcorn3",frandom(-3,3),0,0,frandom(-1,1),0,frandom(-3,3));
				}
				else
				{
					A_FireProjectile("Popcorn2",-3,0,4,1,0,0);
					A_FireProjectile("Popcorn3",3,0,0,1,0,0);
				}
				invoker.A_CheckIPModeOnUse();
			}
		FirePhase5:
			PGUN A 0 A_Jump (96,"FirePhase6");
			PGUN A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(361,0,1,16);
			}
			PGUN A 2 
			{
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("Popcorn1",frandom(-3,3),0,frandom(-5,5),frandom(-1,1),0,frandom(-3,3));
					A_FireProjectile("Popcorn1",frandom(-3,3),0,frandom(-5,5),frandom(-1,1),0,frandom(-3,3));
					A_FireProjectile("Popcorn1",frandom(-3,3),0,frandom(-5,5),frandom(-1,1),0,frandom(-3,3));
					A_FireProjectile("Popcorn1",frandom(-3,3),0,frandom(-5,5),frandom(-1,1),0,frandom(-3,3));
				}
				else
				{
					A_FireProjectile("Popcorn1",3,0,5,1,0,0);
				}
			}
			PGUN B 1 
			{
				A_StartSound("POPFIRE");
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("Popcorn2",0,0,0,frandom(-1,1),0,0);
					A_FireProjectile("Popcorn3",frandom(-2,2),false,0,frandom(-1,1),0,frandom(-2,2));
					A_FireProjectile("Popcorn2",0,0,0,frandom(-1,1),0,0);
					A_FireProjectile("Popcorn3",frandom(-2,2),false,0,frandom(-1,1),0,frandom(-2,2));
					A_FireProjectile("Popcorn2",0,0,0,frandom(-1,1),0,0);
					A_FireProjectile("Popcorn3",frandom(-2,2),false,0,frandom(-1,1),0,frandom(-2,2));
					A_FireProjectile("Popcorn2",0,0,0,frandom(-1,1),0,0);
					A_FireProjectile("Popcorn3",frandom(-2,2),false,0,frandom(-1,1),0,frandom(-2,2));
				}
				else
				{
					A_FireProjectile("Popcorn2",0,0,0,1,0,0);
					A_FireProjectile("Popcorn3",-2,false,0,1,0,0);
				}
				
				if (!A_CheckInfiniteAmmo()) A_TakeInventory("PopcornPiece",1);
				invoker.A_CheckIPModeOnUse();
			}
		FirePhase6:
			PGUN A 0 A_Jump (64,"FirePhase7");
			PGUN A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(361,0,1,16);
			}
			PGUN A 4 
			{
				A_StartSound("POPFIRE");
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("Popcorn3",frandom(-1,1),0,frandom(-4,4),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn3",frandom(-1,1),0,frandom(-4,4),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn3",frandom(-1,1),0,frandom(-4,4),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn3",frandom(-1,1),0,frandom(-4,4),frandom(-1,1),0,frandom(-1,1));
				}
				else
				{
					A_FireProjectile("Popcorn3",-1,0,4,1,0,0);
				}
			}
			PGUN A 2 
			{
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("Popcorn2",frandom(-1,1),0,frandom(-4,4),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-1,1),0,frandom(-4,4),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-1,1),0,frandom(-4,4),frandom(-1,1),0,frandom(-1,1));
					A_FireProjectile("Popcorn2",frandom(-1,1),0,frandom(-4,4),frandom(-1,1),0,frandom(-1,1));
				}
				else
				{
					A_FireProjectile("Popcorn2",1,0,4,1,0,0);
				}
				invoker.A_CheckIPModeOnUse();
			}
		FirePhase7:
			PGUN A 0 A_Jump (64,"FirePhase8");
			PGUN A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(361,0,1,16);
			}
			PGUN B 1
			{
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("BurntPopcorn1",0,0,frandom(-5,5),frandom(-1,1),0,0);
					A_FireProjectile("BurntPopcorn1",0,0,frandom(-5,5),frandom(-1,1),0,0);
					A_FireProjectile("BurntPopcorn1",0,0,frandom(-5,5),frandom(-1,1),0,0);
					A_FireProjectile("BurntPopcorn1",0,0,frandom(-5,5),frandom(-1,1),0,0);
				}
				else
				{
					A_FireProjectile("BurntPopcorn1",0,0,5,1,0,0);
				}
				invoker.A_CheckIPModeOnUse();
			}
		FirePhase8:
			PGUN A 0 A_Jump (128,"FirePhaseEnd");
			PGUN A 0
			{
				A_CheckIPState1();
				A_ConfirmIPAttack(361,0,1,16);
			}
			PGUN A 1
			{
				if (invoker.IPAttackCheck)
				{
					A_FireProjectile("BurntPopcorn1",0,0,frandom(-5,5),frandom(-1,1),0,0);
					A_FireProjectile("BurntPopcorn1",0,0,frandom(-5,5),frandom(-1,1),0,0);
					A_FireProjectile("BurntPopcorn1",0,0,frandom(-5,5),frandom(-1,1),0,0);
					A_FireProjectile("BurntPopcorn1",0,0,frandom(-5,5),frandom(-1,1),0,0);
				}
				else
				{
					A_FireProjectile("BurntPopcorn1",0,0,5,1,0,0);
				}
				invoker.A_CheckIPModeOnUse();
			}
		FirePhaseEnd:
			PGUN A 0
			{
				invoker.A_CheckIPModeOnUse();
			}
			Goto Ready;
	}
}

class HappyCloud : EEProjectile
{ 
	default
	{
		Tag "Happy Gas";
		Radius 32;
		Height 32;
		Speed 3;
		Damage 1;
		+STRIFEDAMAGE;
		+RIPPER;
		PROJECTILE;
		+NODAMAGETHRUST;
		ProjectileKickback 0;
		//DONTHURTSHOOTER;
		RENDERSTYLE "Translucent";
		ALPHA 0.67;
	}
	
	States 
	{
		Spawn: 
			CLOD AABBCCBBAABBCCBBAABBCCBBAABBCCBBAABBCCDDCCBBAABBCCDDCCBBCCBBAABBCCDDEEFFGG 3
			{
				A_ScaleVelocity(0.9875);
			}
			CLOD A 0
			{
				if (random(1,3) <= 1) { return resolvestate("Spawn"); }
				return resolvestate(null);
			}
			Stop;
		Death: 
			CLOD ABCDEFG 4;
			Stop;
	}
} 

class HappyCloudPlayer : HappyCloud
{ 
	default
	{
		Tag "Happy Gas";
		Radius 32;
		Height 32;
		Speed 3;
		DamageFunction (finaldamagedealt); // 1
		+STRIFEDAMAGE;
		+RIPPER;
		PROJECTILE;
		+NODAMAGETHRUST;
		ProjectileKickback 0;
		//DONTHURTSHOOTER;
		RENDERSTYLE "Translucent";
		ALPHA 0.67;
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		finaldamagedealt = 1 * random(4,8);
	}
	
	States 
	{
		Spawn: 
			CLOD AABBCCBBAABBCCBBAABBCCBBAABBCCBBAABBCCDDCCBBAABBCCDDCCBBCCBBAA 3 NoDelay
			{
				A_ScaleVelocity(0.9875);
			}
			CLOD A 0
			{
				if (random(1,3) <= 1) { return resolvestate("Spawn"); }
				return resolvestate(null);
			}
			Stop;
		Death: 
			CLOD ABCDEFG 4 A_FadeOut(0.09);
			Stop;
	}
} 

class HappyCloudPlayerIP : HappyCloud
{ 
	default
	{
		Tag "Happy Gas";
		Radius 32;
		Height 32;
		Speed 3;
		DamageFunction (finaldamagedealt); // 1
		+STRIFEDAMAGE;
		+RIPPER;
		PROJECTILE;
		+NODAMAGETHRUST;
		ProjectileKickback 0;
		//DONTHURTSHOOTER;
		RENDERSTYLE "Translucent";
		ALPHA 0.446;
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		finaldamagedealt = 2 * random(1,8);
	}
	
	States 
	{
		Spawn: 
			CLOD AABBCCBBAABBCCBBAABBCCBBAABBCCBBAABBCCDDCCBBAABBCCDDCCBBCCBBAA 3 NoDelay
			{
				A_ScaleVelocity(0.975);
			}
			CLOD A 0
			{
				if (random(1,3) <= 1) { return resolvestate("Spawn"); }
				return resolvestate(null);
			}
			Stop;
		Death: 
			CLOD ABCDEFG 3 A_FadeOut(0.06);
			Stop;
	}
} 

class HappyCloudPlayerIP2 : HappyCloudPlayerIP
{ 
	default
	{
		Tag "Happy Gas";
		Radius 32;
		Height 32;
		Speed 3;
		DamageFunction (finaldamagedealt); // 1
		+STRIFEDAMAGE;
		+RIPPER;
		PROJECTILE;
		+NODAMAGETHRUST;
		ProjectileKickback 0;
		//DONTHURTSHOOTER;
		RENDERSTYLE "Translucent";
		ALPHA 0.446;
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		finaldamagedealt = 2 * random(1,8);
	}
	
	States 
	{
		Spawn: 
			CLOD AABBCCBBAABBCCBBAABBCCBBAABBCCBB 3 NoDelay
			{
				A_ScaleVelocity(0.95);
			}
			CLOD A 0
			{
				if (random(1,4) <= 1) { return resolvestate("Spawn"); }
				return resolvestate(null);
			}
			Stop;
		Death: 
			CLOD ABCDEFG 2 A_FadeOut(0.06);
			Stop;
	}
}

//
class RevRocket : EEProjectile // replaces RevRocket
{
	int trailheight;
	default
	{
		Tag "Happy Gas Rocket";
		Radius 8;
		Height 6;
		Speed 12;
		DamageFunction (2 * random(1,8));
		Scale 0.55;
		+SEEKERMISSILE;
		PROJECTILE;
		SeeSound "REVRCK";
		DeathSound "EXPLODE";
		ExplosionRadius 96;
		ExplosionDamage 12;
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		trailheight = -8;
	}
	
	States
	{
		Spawn:
			RRCK A 1 A_SeekerMissile (30,40);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0);
			RRCK A 1 A_StartSound("HISS");
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1); 
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			Loop;
		Death:
			GLOB A 4 Bright;
			GLOB B 4 Bright A_Explode(12,96,0);
			GLOB B 2 Bright A_SpawnProjectile("HappyCloud", 16, 8, 135, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB BBBBBBB 0 A_SpawnProjectile("Sparkles", 4,4, random(-180, 180), 2, random(-180, 180));
			GLOB B 2 Bright A_SpawnProjectile("HappyCloud", 12, 0, 90, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB B 2 Bright A_SpawnProjectile("HappyCloud", 16, -8, -135, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB C 2 Bright A_SpawnProjectile("HappyCloud", 16, 0, -200, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB CCCCCCC 0 A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
			GLOB D 2 Bright A_SpawnProjectile("HappyCloud", 18, 0, 45, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB E 2 Bright A_SpawnProjectile("HappyCloud", 16, 8, 300, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB E 2 Bright A_SpawnProjectile("HappyCloud", 16, 0, 200, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB EEEEEEE 0 A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
			GLOB F 2 Bright A_SpawnProjectile("HappyCloud", 22, -8, 315, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB G 2 Bright A_SpawnProjectile("HappyCloud", 16, 0, 270, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB G 2 Bright A_SpawnProjectile("HappyCloud", 12, 8, 180, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB H 4 Bright;
			Stop;
	}
}

class RevRocket2 : EEProjectile
{
	int trailheight;
	default
	{
		Tag "Happy Gas Rocket";
		Speed 18;
		DamageFunction (finaldamagedealt); // 5
		Radius 8;
		Height 6;
		Scale 0.55;
		+SEEKERMISSILE;
		PROJECTILE;
		SeeSound "REVRCK";
		DeathSound "EXPLODE";
		ExplosionRadius 96;
		ExplosionDamage 12;
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		finaldamagedealt = 5 * random(1,8);
		trailheight = -8;
	}
	
	States
	{
		Spawn:
			RRCK A 0 NoDelay;
			RRCK A 1 A_SeekerMissile (30,40);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0);
			RRCK A 1 A_StartSound("HISS");
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			Loop;
		Death:
			GLOB A 4 Bright;
			GLOB B 4 Bright A_Explode(128,96,0);
			GLOB B 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, 8, 135, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB BBBBBBB 0 A_SpawnProjectile("Sparkles", 4,4, random(-180, 180), 2, random(-180, 180));
			GLOB B 2 Bright A_SpawnProjectile("HappyCloudPlayer", 12, 0, 90, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB B 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, -8, -135, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB C 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, 0, -200, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB CCCCCCC 0 A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
			GLOB D 2 Bright A_SpawnProjectile("HappyCloudPlayer", 18, 0, 45, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB E 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, 8, 300, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB E 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, 0, 200, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB EEEEEEE 0 A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
			GLOB F 2 Bright A_SpawnProjectile("HappyCloudPlayer", 22, -8, 315, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB G 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, 0, 270, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB G 2 Bright A_SpawnProjectile("HappyCloudPlayer", 12, 8, 180, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB H 4 Bright;
			Stop;
	}
}

class RevRocket2NoHurt : EEProjectile
{
	int trailheight;
	default
	{
		Speed 18;
		DamageFunction (finaldamagedealt); // 5
		Radius 8;
		Height 6;
		Scale 0.55;
		+SEEKERMISSILE;
		PROJECTILE;
		SeeSound "REVRCK";
		DeathSound "EXPLODE";
		ExplosionRadius 96;
		ExplosionDamage 12;
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		finaldamagedealt = 5 * random(1,8);
		trailheight = -8;
	}
	
	States
	{
		Spawn:
			RRCK A 0 NoDelay; 
			RRCK A 1 A_SeekerMissile (30,40);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, CMF_AIMOFFSET|CMF_TRACKOWNER);
			RRCK A 1 A_StartSound("HISS");
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), CMF_AIMDIRECTION|CMF_TRACKOWNER, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, CMF_AIMOFFSET|CMF_TRACKOWNER);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, CMF_AIMOFFSET|CMF_TRACKOWNER);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), CMF_AIMDIRECTION|CMF_TRACKOWNER, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, CMF_AIMOFFSET|CMF_TRACKOWNER);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, CMF_AIMOFFSET|CMF_TRACKOWNER);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), CMF_AIMDIRECTION|CMF_TRACKOWNER, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, CMF_AIMOFFSET|CMF_TRACKOWNER);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, CMF_AIMOFFSET|CMF_TRACKOWNER);
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, CMF_AIMOFFSET|CMF_TRACKOWNER);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), CMF_AIMDIRECTION|CMF_TRACKOWNER, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, CMF_AIMOFFSET|CMF_TRACKOWNER);
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), CMF_AIMDIRECTION|CMF_TRACKOWNER, random(-180, 180));
			RRCK A 1 A_SpawnProjectile("RevTrail", trailheight, 0, 0, CMF_AIMOFFSET|CMF_TRACKOWNER);
			Loop;
		Death:
			GLOB A 4 Bright;
			GLOB B 4 Bright A_Explode(128,96,0);
			GLOB B 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, 8, 135, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB BBBBBBB 0 A_SpawnProjectile("Sparkles", 4,4, random(-180, 180), CMF_AIMDIRECTION|CMF_TRACKOWNER, random(-180, 180));
			GLOB B 2 Bright A_SpawnProjectile("HappyCloudPlayer", 12, 0, 90, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB B 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, -8, -135, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB C 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, 0, -200, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB CCCCCCC 0 A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), CMF_AIMDIRECTION|CMF_TRACKOWNER, random(-180, 180));
			GLOB D 2 Bright A_SpawnProjectile("HappyCloudPlayer", 18, 0, 45, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB E 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, 8, 300, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB E 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, 0, 200, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB EEEEEEE 0 A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), CMF_AIMDIRECTION|CMF_TRACKOWNER, random(-180, 180));
			GLOB F 2 Bright A_SpawnProjectile("HappyCloudPlayer", 22, -8, 315, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB G 2 Bright A_SpawnProjectile("HappyCloudPlayer", 16, 0, 270, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB G 2 Bright A_SpawnProjectile("HappyCloudPlayer", 12, 8, 180, CMF_AIMOFFSET|CMF_TRACKOWNER);
			GLOB H 4 Bright;
			Stop;
	}
}

class RevRocket2IP : EEProjectile
{
	int trailheight;
	default
	{
		Tag "Happy Gas Rocket";
		Speed 18;
		DamageFunction (finaldamagedealt); // 5
		Radius 8;
		Height 6;
		Scale 0.55;
		+SEEKERMISSILE;
		PROJECTILE;
		SeeSound "REVRCK";
		DeathSound "EXPLODE";
		ExplosionRadius 96;
		ExplosionDamage 12;
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		finaldamagedealt = 10 * random(4,8);
		trailheight = -8;
	}
	
	void A_SpawnGasTrail(int type)
	{
		double rand1 = frandompick(12,16,18,22);
		double rand2 = frandompick(-8,0,8);
		double rand3 = frandompick(45,90,135,180,200,225,270,300,315);
		string types = "HappyCloudPlayerIP";
		if (type == 1) types = "HappyCloudPlayerIP2";
		A_SpawnProjectile(types, rand1, rand2, rand3, CMF_AIMOFFSET|CMF_TRACKOWNER);
	}
	
	States
	{
		Spawn:
			RRCK A 0 NoDelay; 
			RRCK A 1 A_SeekerMissile (30,40);
			RRCK A 1 
			{
				A_SpawnGasTrail(1);
				A_SpawnProjectile("RevTrail", trailheight, 0, 0);
			}
			RRCK A 1 A_StartSound("HISS");
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 
			{
				A_SpawnGasTrail(1);
				A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			}
			RRCK A 1 
			{
				A_SpawnGasTrail(1);
				A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			}
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 
			{
				A_SpawnGasTrail(1);
				A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			}
			RRCK A 1 
			{
				A_SpawnGasTrail(1);
				A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			}
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 
			{
				A_SpawnGasTrail(1);
				A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			}
			RRCK A 1 
			{
				A_SpawnGasTrail(1);
				A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			}
			RRCK A 1 
			{
				A_SpawnGasTrail(1);
				A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			}
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 
			{
				A_SpawnGasTrail(1);
				A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			}
			RRCK A 0 A_SpawnProjectile("ClownSpark", 8, 0, random(-180, 180), 2, random(-180, 180));
			RRCK A 1 
			{
				A_SpawnGasTrail(1);
				A_SpawnProjectile("RevTrail", trailheight, 0, 0, 1);
			}
			Loop;
		Death:
			GLOB A 4 Bright;
			GLOB B 4 Bright A_Explode(192,144,0);
			GLOB B 2 Bright 
			{
				A_SpawnProjectile("HappyCloudPlayer", 16, 8, 135, CMF_AIMOFFSET|CMF_TRACKOWNER);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
			}
			GLOB BBBBBBB 0 
			{
				A_SpawnProjectile("Sparkles", 4,4, random(-180, 180), 2, random(-180, 180));
				A_SpawnProjectile("Sparkles", 4,4, random(-180, 180), 2, random(-180, 180));
				A_SpawnProjectile("Sparkles", 4,4, random(-180, 180), 2, random(-180, 180));
				A_SpawnProjectile("Sparkles", 4,4, random(-180, 180), 2, random(-180, 180));
			}
			GLOB B 2 Bright 
			{
				A_SpawnProjectile("HappyCloudPlayer", 12, 0, 90, CMF_AIMOFFSET|CMF_TRACKOWNER);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
			}
			GLOB B 2 Bright 
			{
				A_SpawnProjectile("HappyCloudPlayer", 16, -8, -135, CMF_AIMOFFSET|CMF_TRACKOWNER);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
			}
			GLOB C 2 Bright 
			{
				A_SpawnProjectile("HappyCloudPlayer", 16, 0, -200, CMF_AIMOFFSET|CMF_TRACKOWNER);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
			}
			GLOB CCCCCCC 0 
			{
				A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
				A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
				A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
				A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
			}
			GLOB D 2 Bright 
			{
				A_SpawnProjectile("HappyCloudPlayer", 18, 0, 45, CMF_AIMOFFSET|CMF_TRACKOWNER);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
			}
			GLOB E 2 Bright 
			{
				A_SpawnProjectile("HappyCloudPlayer", 16, 8, 300, CMF_AIMOFFSET|CMF_TRACKOWNER);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
			}
			GLOB E 2 Bright 
			{
				A_SpawnProjectile("HappyCloudPlayer", 16, 0, 200, CMF_AIMOFFSET|CMF_TRACKOWNER);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
			}
			GLOB EEEEEEE 0 
			{
				A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
				A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
				A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
				A_SpawnProjectile("Sparkles", 4, 4, random(-180, 180), 2, random(-180, 180));
			}
			GLOB F 2 Bright 
			{
				A_SpawnProjectile("HappyCloudPlayer", 22, -8, 315, CMF_AIMOFFSET|CMF_TRACKOWNER);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
			}
			GLOB G 2 Bright 
			{
				A_SpawnProjectile("HappyCloudPlayer", 16, 0, 270, CMF_AIMOFFSET|CMF_TRACKOWNER);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
			}
			GLOB G 2 Bright 
			{
				A_SpawnProjectile("HappyCloudPlayer", 12, 8, 180, CMF_AIMOFFSET|CMF_TRACKOWNER);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
				A_SpawnGasTrail(0);
			}
			GLOB H 4 Bright;
			Stop;
	}
}