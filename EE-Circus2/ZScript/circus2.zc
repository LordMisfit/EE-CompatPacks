class MyBall2 : EEEffectProjectile
{
	default
	{
		Tag "Micro Deadlight";
		Radius 8;
		Height 6;
		Speed 10;
		Damage 3;
		scale 0.8;
		//+SEEKERMISSILE;
		PROJECTILE;
		ALPHA 0.8;
		SeeSound "imp/attack";
		DeathSound "CBLAST1";
	}
	
	States
	{
		Spawn:
			MBBB AB 2 bright;
			loop;
		Death:
			TNT1 A 0 Bright
			{
				A_StatusEffectChecker(4);
				if (random(1,user_ailmentmaxchance) <= 1 && user_canafflict)
				{
					user_random = random(1,13);
					//if (user_random == 1) { ACS_NamedExecuteAlways("BuffTimer",0,8,21,random(105,175)); } // Silence for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 2) { ACS_NamedExecuteAlways("BuffTimer",0,8,19,random(105,175)); } // Blind for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 3) { ACS_NamedExecuteAlways("BuffTimer",0,8,20,random(105,175)); } // Sleep for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 4) { ACS_NamedExecuteAlways("BuffTimer",0,8,18,random(105,175)); } // Fatigue for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 5) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(210,350)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 6) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(210,350)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 7) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(210,350)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 8) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(210,350)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 9) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(210,350)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 10) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(210,350)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 11) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(210,350)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 12) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(210,350)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 13) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(210,350)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
				}
				return resolvestate(null);
			}
		Death2:
			MBBB C 4 Bright A_Scream();
			MBBB DDDDDDDDDDDD 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			MBBB D 4 Bright A_Fall();
			MBBB E 4 Bright;
			MBBB EEEEEEEEEEEEE 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			MBBB FFFFFFFFFF 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			MBBB F 4 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			MBBB G 4 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			MBBB GGGGGGG 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			MBBB H 4;
			MBBB I 4;
			Stop;
	}
}

class MyBall3 : EEEffectProjectile
{
	default
	{
		Tag "Micro Deadlight";
		Radius 8;
		Height 6;
		Speed 5;
		Damage 4;
		scale 1.0;
		+SeeKERMISSILE;
		PROJECTILE;
		ALPHA 0.8;
		SeeSound "imp/attack";
		DeathSound "EXPLODE";
		ExplosionRadius 48;
		ExplosionDamage 20;
	}
	
	States
	{
		Spawn:
			MBBB A 2 bright A_SeekerMissile (5,5);
			MBBB B 2 bright A_SpawnProjectile("RevTrail", 0, 0, 0, 1);
			Loop;
		Death:
			TNT1 A 0 Bright
			{
				A_StatusEffectChecker(4);
				if (random(1,user_ailmentmaxchance) <= 1 && user_canafflict)
				{
					user_random = random(1,12);
					//if (user_random == 1) { ACS_NamedExecuteAlways("BuffTimer",0,8,21,random(105,175)); } // Silence for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 2) { ACS_NamedExecuteAlways("BuffTimer",0,8,19,random(105,175)); } // Blind for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 3) { ACS_NamedExecuteAlways("BuffTimer",0,8,20,random(105,175)); } // Sleep for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 4) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(210,350)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 5) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(210,350)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 6) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(210,350)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 7) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(210,350)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 8) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(210,350)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 9) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(210,350)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 10) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(210,350)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 11) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(210,350)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 12) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(210,350)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
				}
			}
		Death2:
			GLOB A 0 Bright A_Explode(20,48,0,0,24);
			GLOB A 4 Bright A_Scream();
			GLOB B 4 Bright A_Fall();
			GLOB C 4 Bright;
			GLOB DEFGH 4;
			Stop;
	}
}

class TinyBingoBall : EEEffectProjectile
{
	default
	{
		Tag "Bingo Ball";
		Radius 8;
		Height 6;
		Speed 15;
		DamageFunction (1 * random(1,8));
		scale 0.5;
		ALPHA 0.8;
		//+SEEKERMISSILE;
		PROJECTILE;
		+ADDITIVEPOISONDURATION
		+ADDITIVEPOISONDAMAGE
		PoisonDamage 4;
		SeeSound "TINY";
		DeathSound "imp/shotx";
	}
	
	States
	{
		Spawn:
			ORBB AB 0 NoDelay A_SeekerMissile (10,10);
			ORBB AB 0;
			ORBB AB 2 bright A_CStaffMissileSlither();
			ORBB AB 0
			{
				if (random(1,8) <= 4) return resolvestate("Spawn");
				return resolvestate(null);
			}
			Goto Spawn+2;
		Death:
			TNT1 A 0 Bright
			{
				A_StatusEffectChecker(8);
				if (random(1,user_ailmentmaxchance) <= 2 && user_canafflict)
				{
					if (master && master.player) master.player.poisoncount += random(4,8);
					//ACS_NamedExecuteAlways("BuffTimer",0,8,16,random(35,105)); // Poison for 1-3 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
				}
			}
		Death2:
			ORBB C 4 Bright A_Scream();
			ORBB D 4 Bright A_Fall();
			ORBB E 4 Bright;
			Stop;
	}
}

class RandomArmorSpawner : EEBaseZSC //32111
{
	default
	{
		//$Category DV-DS Random Spawners
		RenderStyle "Add";
		Alpha 0.0;
		Scale 1.25;
		+FLOATBOB;
	}

	int user_spawntimes;
	int user_roll;

	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				user_roll = random(1,5);
				if (user_roll == 1)
				{
					A_SpawnItemEx("KnightGown",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
				}
				if (user_roll == 2)
				{
					A_SpawnItemEx("KnightGown2",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
				}
				if (user_roll == 3)
				{
					if (random(1,256) <= 8)
					{
						A_SpawnItemEx("KnightGown4",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
					}
					else
					{
						A_SpawnItemEx("KnightGown3",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
					}
				}
				if (user_roll == 4)
				{
					if (random(1,256) <= 64)
					{
						A_SpawnItemEx("KnightGown4",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
					}
					else
					{
						A_SpawnItemEx("KnightGown3",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,0,tid);
					}
				}
				if (user_roll == 5)
				{
					double spreadbase = 6.0;
					A_SpawnItemEx("ArmorScrapKit",0,0,0,0,0,0,0,tid,0);
					for (user_spawntimes = 0; user_spawntimes < 63; user_spawntimes++)
					{
						A_SpawnItemEx("ArmorScrap",0,0,0,frandom(-spreadbase,spreadbase),frandom(-spreadbase,spreadbase),frandom(-spreadbase,spreadbase),0,0,(random(2,4) + (user_spawntimes*frandom(0.375,0.625))));
					}
				}
				Thing_Remove(0);
			}
			Stop;
	}
}