// The Big Clown Boi Himself :V
class PennywiseShield : PowerProtection
{
	default
	{
		inventory.icon "";
		Powerup.Duration 2147483646;
	}
}

class PennywiseNotShield : PowerProtection
{
	default
	{
		inventory.icon "";
		Powerup.Duration 2147483646;
	}
}

class PennywiseBoss : EEUniqueBoss // 3672
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Happy Time Circus/Bosses"
		Tag "Pennywise The Dancing Clown";
	
		Health 45000;
		Radius 40;
		Height 112;
		Speed 8;
		MONSTER;
		MinMissileChance 40;
		scale 1.25;
		Mass 135000;
		PainChance 224;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		PainChance "Zap", 252;
		PainChance "Melee", 252;
		PainChance "Deadlight", 256;
		PainChance "Cricket", 256;
		PainChance "Bonk", 256;
		PainChance "Lead", 256;
		PainChance "Zap", 256;
		PainChance "Breakfast", 256;
		PainChance "Beats", 256;
		PainChance "Suck", 16;
		DamageFactor 0.667;
		RadiusDamageFactor 0.667;
		DamageFactor "Explosive", 0.667;
	
		DamageFactor "Cricket", 2.5;
		DamageFactor "Bonk", 2.5;
		DamageFactor "Lead", 2.5;
		DamageFactor "Zap", 2.5;
		DamageFactor "Breakfast", 2.5;
		DamageFactor "Beats", 2.5;
		DamageFactor "Melee", 1.5;
		DamageFactor "Stomp", 1.5;
		DamageFactor "Trample", 1.5;
		DamageFactor "Deadlight", 7.5;
		DamageFactor "DashBG", 15.0;
		+BOSS;
		+FLOORCLIP;
		+FULLVOLACTIVE;
		+NOTARGET;
		+LOOKALLAROUND;
		+NODAMAGETHRUST;
		+DONTHARMSPECIES;
		-NORADIUSDMG;
		SeeSound "";
		PainSound "PENHURT";
		DeathSound "pwise/death";
		ActiveSound "ITACTIVE";
		MeleeSound "imp/melee";
		Obituary "%o was killed by Pennywise the Dancing Clown.";
		HitObituary "%o was killed by Pennywise the Dancing Clown.";
		MissileHeight 96;
		MissileType "PennySeeker";
		Species "Pennywise";
	}
	int regentimer;
	int degentimer;
	
	actor PWClone;
	bool success;

	action void A_SpawnPWClone(actor Clone)
	{
		if (clone)
		{
			EECreature Clone2;
			Clone2 = EECreature(clone);
			if (Clone2)
			{
				if (CountInv("PWATKBalloonBuff") > 0) Clone2.A_SetInventory("PWATKBalloonBuff",1);
				if (CountInv("PWDefenseBuff") > 0) Clone2.A_SetInventory("PWDefenseBuff",1);
				Clone2.Health *= frandom(0.25,0.5);
				Clone2.Speed *= 1.5;
				Clone2.Mass *= 1.25;
			}
		}
	}
	
	override void Tick()
	{
		if (!isfrozen())
		{
			if (!CountInv("PennywiseNotShield"))
			{
				if (health < (SpawnHealth() + Stamina))
				{
					if (CountInv("PWDefenseBuff")) regentimer += 9;
					regentimer += 3;
					if (regentimer >= 32)
					{
						health++;
						if (health > (SpawnHealth() + Stamina)) health = (SpawnHealth() + Stamina);
						regentimer -= 32;
					}
				}
			}
			else
			{
				if (health > ((SpawnHealth() + Stamina) * 0.01))
				{
					degentimer += 12;
					if (CountInv("PWDefenseBuff")) degentimer -= 9;
					if (degentimer >= 32)
					{
						health--;
						if (health < ((SpawnHealth() + Stamina) * 0.01)) health = ((SpawnHealth() + Stamina) * 0.01);
						degentimer -= 32;
					}
				}
			}
		}
		
		super.Tick();
	}
	
	States
	{
		Spawn:
			PLIT J 0 NoDelay;
			PLIT J 10 A_Look();
			goto Spawn+1;
		See:
			PLIT QPONMLJKIHGFEDCB 2;
			goto See2;
		See2:
			PENY AABB 3
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
				A_SetInventory("PennywiseShield",1);
				A_SetInventory("PennywiseNotShield",0);
				if (CountInv("PWDefenseBuff")) A_SetTics(2);
			}
			PENY CCDD 3
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
				A_SetInventory("PennywiseShield",1);
				A_SetInventory("PennywiseNotShield",0);
				if (CountInv("PWDefenseBuff")) A_SetTics(2);
			}
			PENY A 0
			{
				if (CountInv("PWDefenseBuff"))
				{
					A_QuakeEx(random(0,1),random(0,1),random(0,2),random(5,8),0,512,"",QF_SCALEDOWN);
				}
			}
			loop;
		Melee:
			PENY E 0
			{
				A_DynamicMusic();
			}
			PENY E 1  
			{
				A_DynamicMusic();
				A_SetInventory("PennywiseShield",0);
				A_FaceTarget();
			}
			PENY E 1
			{
				A_DynamicMusic();
				A_SetInventory("PennywiseShield",0);
				A_FaceTarget();
				A_SpawnProjectile("PWSoulAttack", 80, random(-4, 4), random(-45, 45), 2, random(-20, 20));
				if (random(1,10) <= 7) { A_SpawnProjectile("PWSoulAttack", 56, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
				if (random(1,10) <= 3) { A_SpawnProjectile("PWSoulAttack", 24, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
				if (random(1,20) <= 1) { A_SpawnProjectile("PWSoulAttack", 8, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
			}
			PENY E 1 
			{
				A_DynamicMusic();
				A_SetInventory("PennywiseShield",0);
				A_FaceTarget();
				A_SpawnProjectile("PWSoulAttack", 32, random(-4, 4), random(-45, 45), 2, random(-20, 20));
				if (random(1,10) <= 7) { A_SpawnProjectile("PWSoulAttack", 22, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
				if (random(1,10) <= 3) { A_SpawnProjectile("PWSoulAttack", 10, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
				if (random(1,20) <= 1) { A_SpawnProjectile("PWSoulAttack", 3, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
			}
			Goto See2;
		Missile:
			PENY E 0
			{
				A_DynamicMusic();
				A_ClearShadow();
			}
			PENY E 0 A_SetInventory("PennywiseShield",0);
			PENY A 0 A_Jump(32,"Missile2");
			PENY E 9
			{
				A_DynamicMusic();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(8); }
				A_FaceTarget();
			}
			PENY E 4 
			{
				A_DynamicMusic();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }

				A_SpawnProjectile("Deadlight", 96, 0, 0, 1);
			}
			PENY E 9
			{
				A_DynamicMusic();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(8); }
				A_FaceTarget();
			}
			Goto See2;  
		Missile2:
			PENY E 9
			{
				A_DynamicMusic();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(8); }
				A_FaceTarget();
			}
			PENY E 4 
			{
				A_DynamicMusic();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }

				A_SpawnProjectile("Deadlight", 96, -9, 0, 1);
				A_SpawnProjectile("Deadlight", 96, 9, 0, 1);
			}
			PENY E 9
			{
				A_DynamicMusic();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(8); }
				A_FaceTarget();
			}
			Goto See2;
		Pain:
			PENY F 0
			{
				A_SetInventory("PennywiseShield",1);
				A_SetInventory("PennywiseNotShield",0);
			}
			PENY F 8 A_EEPain(1,random(4,6),32);
			PENY F 0 
			{
				if (random(1,4) == 1) { return resolvestate("See2"); }
				return resolvestate(null);
			}
			Goto PainRetaliate;
		Pain.Beats:
		Pain.Cricket:
		Pain.Lead:
		Pain.Zap:
		Pain.Suck:
			PENY F 0
			{
				A_SetInventory("PennywiseShield",1);
				A_SetInventory("PennywiseNotShield",0);
			}
			PENY F 8 A_EEPain(1,random(4,6),32);
			PENY F 0 
			{
				if (random(1,16) <= 13) { return resolvestate("See2"); }
				return resolvestate(null);
			}
			Goto PainRetaliate;
		Pain.Deadlight:
			PENY F 0 
			{
				if (random(1,16) == 1) { return resolvestate("See2"); }
				A_QuakeEx(random(1,2),random(1,2),random(1,3),random(40,70),(randompick(0,0,0,0,0,1,1,1,2)*16),1024,"PENHURT",QF_SCALEDOWN);
				A_StartSound("PENHURT",9,CHANF_DEFAULT,1.0,ATTN_NORM,0.67);
				A_StartSound("PENHURT",10,CHANF_DEFAULT,1.0,ATTN_NORM,1.5);
				A_StartSound("PENHURT",11,CHANF_DEFAULT,1.0,ATTN_NORM,0.5);
				A_StartSound("PENHURT",12,CHANF_DEFAULT,1.0,ATTN_NORM,2);
				A_StartSound("PENHURT",13,CHANF_DEFAULT,1.0,ATTN_NORM,0.8);
				A_StartSound("PENHURT",14,CHANF_DEFAULT,1.0,ATTN_NORM,1.25);
				A_SetInventory("PennywiseShield",0);
				A_SetInventory("PennywiseNotShield",1);
				bNOPAIN = true;
				return resolvestate(null);
			}
			PENY F 8 A_EEPain(1,random(18,22),8);
			PENY FFFFFFFF 8
			{
				A_SetTics(randompick(7,8,8,8,8,9));
				if (CountInv("PWDefenseBuff")) A_SetTics(randompick(5,6,6,6,6,7));
			}
			PENY F 0 A_Jump(16,17);
			PENY FFFFFFFF 8
			{
				A_SetTics(randompick(7,8,8,8,8,9));
				if (CountInv("PWDefenseBuff")) A_SetTics(randompick(5,6,6,6,6,7));
			}
			PENY F 0 A_Jump(64,8);
			PENY FFFFFFFF 8
			{
				A_SetTics(randompick(7,8,8,8,8,9));
				if (CountInv("PWDefenseBuff")) A_SetTics(randompick(5,6,6,6,6,7));
			}
			PENY FFFF 0 
			{
				A_SetInventory("PennywiseShield",1);
				A_SetInventory("PennywiseNotShield",0);
				bNOPAIN = false;
			}
			PENY F 0 A_Jump(random(32,64),"PainStunWarp");
			goto See2;
		PainRetaliate:
			PENY FFFF 5 
			{
				A_SetTics(randompick(4,5,5,5,5,6));
				A_SpawnProjectile("PWSkullSeeker", 96,0,random(-180, 180),1,random(-20, 20));
			}
			PENY F 0 A_Jump(64,4);
			PENY FFFF 5 
			{
				A_SetTics(randompick(4,5,5,5,5,6));
				A_SpawnProjectile("PWSkullSeeker", 96,0,random(-180, 180),1,random(-20, 20));
			}
			PENY FFFF 0 
			{
				A_SetInventory("PennywiseShield",1);
				A_SetInventory("PennywiseNotShield",0);
				bNOPAIN = false;
			}
			Goto See2;
		PainStunWarp:
			PENY F 0
			{
				A_SetRenderStyle(12,1.00);
				A_UnSetshootable();
				A_UnsetSolid();
			}
			PENY F 1 A_StartSound("vokter/tele");
			PENY F 1 A_SetTranslucent(0.67);
			PENY F 1 A_SetTranslucent(0.33);
			PENY F 1 A_SetTranslucent(0.0);
			PENY F 0 
			{
				[success, PWClone] = A_SpawnItemEx("PennywiseFake",0,0,0,0,0,0,0,48);
				A_SpawnPWClone(PWClone);
			}
			PENY FFFFFFFFFFFFFFFFFFFFFFFF 0 
			{
				A_SetTics(randompick(0,0,0,0,0,1,1));
				A_Wander();
			}
			PENY FFFFFFFFFFF 0
			{
				A_SetTics(randompick(0,0,0,0,0,1,1));
				if (random(1,2) <= 1) A_EEChase(null,null,0,1,3,1,1);
												 else A_Wander();
			}
			PENY FFFFFFFFFFFF 1
			{
				A_SetTics(randompick(0,1,1));
				if (random(1,2) <= 1) A_EEChase(null,null,0,1,3,1,1);
												 else A_Wander();
			}
			PENY F 0 
			{
				[success, PWClone] = A_SpawnItemEx("PennywiseFake",0,0,0,0,0,0,0,48);
				A_SpawnPWClone(PWClone);
			}
			PENY FFFFFFFFFFFFFFFFFFFFFFFF 0 
			{
				A_SetTics(randompick(0,0,0,0,0,1,1));
				if (random(1,2) <= 1) A_EEChase(null,null,0,1,3,1,1);
												 else A_Wander();
			}
			PENY FFFFFFFFFFF 0
			{
				A_SetTics(randompick(0,0,0,0,0,1,1));
				if (random(1,2) <= 1) A_EEChase(null,null,0,1,3,1,1);
												 else A_Wander();
			}
			PENY FFFFFFFFFFFF 1
			{
				A_SetTics(randompick(0,1,1));
				if (random(1,2) <= 1) A_EEChase(null,null,0,1,3,1,1);
												 else A_Wander();
			}
			PENY F 0 
			{
				[success, PWClone] = A_SpawnItemEx("PennywiseFake",0,0,0,0,0,0,0,48);
				A_SpawnPWClone(PWClone);
			}
			PENY FFFFFFFFFFFFFFFFFFFFFFFF 0 
			{
				A_SetTics(randompick(0,0,0,0,0,1,1));
				if (random(1,2) <= 1) A_EEChase(null,null,0,1,3,1,1);
												 else A_Wander();
			}
			PENY FFFFFFFFFFF 0
			{
				A_SetTics(randompick(0,0,0,0,0,1,1));
				A_EEChase(null,null,0,1,3,1,1);
			}
			PENY F 0 
			{
				[success, PWClone] = A_SpawnItemEx("PennywiseFake",0,0,0,0,0,0,0,48);
				A_SpawnPWClone(PWClone);
			}
			PENY FFFFFFFFFFFF 1
			{
				A_SetTics(randompick(0,1,1));
				A_EEChase(null,null,0,1,3,1,1);
			}
			PENY F 1 A_StartSound("vokter/tele2");
			PENY F 1 A_SetTranslucent(0.33);
			PENY F 1 A_SetTranslucent(0.67);
			PENY F 1 A_SetTranslucent(1.0);
			PENY F 0
			{
				A_SetSolid();
				A_SetShootable();
				A_SetRenderStyle(1,1.00);
			}
			Goto See2;
		Death:
			PENY G 8
			{
				A_QuakeEx(random(3,4),random(3,4),random(4,6),random(220,340),(randompick(1,1,1,1,1,2,2,2,2)*16),4096);
				A_KillChildren();
			}
			PENY GGGG 8;
			PENY H 8
			{
				A_RemoveChildren();
				A_StopSound(CHAN_VOICE);
				A_StopSound(CHAN_5);
				A_StopSound(CHAN_6);
				A_StopSound(CHAN_7);
				A_StopSound(8);
				A_StartSound("pwise/death",CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NONE,1.0);
				A_StartSound("pwise/death",CHAN_5,CHANF_DEFAULT,1.0,ATTN_NONE,0.8);
				A_StartSound("pwise/death",CHAN_6,CHANF_DEFAULT,1.0,ATTN_NONE,1.2);
				A_StartSound("pwise/death",CHAN_7,CHANF_DEFAULT,1.0,ATTN_NONE,1.1);
				A_StartSound("pwise/death",8,CHANF_DEFAULT,1.0,ATTN_NONE,0.9);
			}
			PENY IJ 8;
			PENY K 8 A_Fall();
			PENY L 1 A_SpawnProjectile("cloud1", random(24, 40), 0, 0, 0, 0);
			PENY L 1 A_SpawnProjectile("cloud1", random(24, 40), 0, 0, 0, 0);
			PENY L 0 A_SpawnProjectile("Sparkles", 8, random(-16, 16), random(-180, 180), 2, random(-180, 180));
			PENY L 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY L 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY LLLL 0 A_SpawnProjectile("cloud1", random(24, 40), random(-4, 4), 0, 0, 0);
			PENY L 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY LLL 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY L 1 A_SpawnProjectile("cloud1", random(24, 40), random(-16, 16), 0, 0, 0);
			PENY L 0 A_SpawnProjectile("cloud1", random(24, 40), random(-16, 16), 0, 0, 0);
			PENY LLLL 0 A_SpawnProjectile("cloud1", random(24, 40), random(-8, 8), 0, 0, 0);
			PENY L 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY L 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY L 1 A_SpawnProjectile("cloud1", random(24, 40), random(-16, 16), 0, 0, 0);
			PENY L 0 A_SpawnProjectile("cloud1", random(24, 40), random(-16, 16), 0, 0, 0);
			PENY LLL 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY L 1 A_SpawnProjectile("cloud1", random(24, 40), random(-4, 4), 0, 0, 0);
			PENY LLL 1 A_SpawnProjectile("cloud1", random(24, 40), random(-2, 2), 0, 0, 0);
			PENY MM 1 A_SpawnProjectile("cloud1", random(16, 32), random(-2, 2), 0, 0, 0);
			PENY MM 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY MM 1 A_SpawnProjectile("cloud1", random(16, 32), 0, 0, 0, 0);
			PENY MM 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY MMM 0 A_SpawnProjectile("cloud1", random(16, 32), random(-4, 4), 0, 0, 0);
			PENY MM 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY MM 0 A_SpawnProjectile("cloud1", random(16, 32), 0, 0, 0, 0);
			PENY MMM 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY MM 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY MM 1 A_SpawnProjectile("cloud1", random(16, 32), random(-16, 16), 0, 0, 0);
			PENY MM 0 A_SpawnProjectile("cloud1", random(16, 32), random(-4, 4), 0, 0, 0);
			PENY MM 1 A_SpawnProjectile("cloud1", random(16, 32), random(-16, 16), 0, 0, 0);
			PENY N 1 A_SpawnProjectile("cloud1", random(14, 30), random(-2, 2), 0, 0, 0);
			PENY NNN 1 A_SpawnProjectile("cloud1", random(14, 30), random(-32, 32), 0, 0, 0);
			PENY NNNN 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY N 1 A_SpawnProjectile("cloud1", random(14, 30), random(-16, 16), 0, 0, 0);
			PENY NN 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY NN 1 A_SpawnProjectile("cloud1", random(14, 30), random(-16, 16), 0, 0, 0);
			PENY NNN 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY NN 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY N 1 A_SpawnProjectile("cloud1", random(14, 30), random(-16, 16), 0, 0, 0);
			PENY NN 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY N 1 A_SpawnProjectile("cloud1", random(14, 30), random(-16, 16), 0, 0, 0);
			PENY O 1 A_SpawnProjectile("cloud1", random(12, 24), random(-16, 16), 0, 0, 0);
			PENY OOO 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY OOO 1 A_SpawnProjectile("cloud1", random(12, 24), random(-16, 16), 0, 0, 0);
			PENY OOOO 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY OOO 1  A_SpawnProjectile("cloud1", random(12, 24), random(-16, 16), 0, 0, 0);
			PENY OOOO 1 A_SpawnProjectile("cloud1", random(12, 24), random(-16, 16), 0, 0, 0);
			PENY OO 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY OOOO 1 A_SpawnProjectile("cloud1", random(12, 24), random(-16, 16), 0, 0, 0);
			PENY PPPP 1 A_SpawnProjectile("cloud1", random(12, 20), random(-16, 16), 0, 0, 0);
			PENY PPPP 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY PPPPP 1 A_SpawnProjectile("cloud1", random(12, 20), random(-16, 16), 0, 0, 0);
			PENY PPPP 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY PPPPP 1 A_SpawnProjectile("cloud1", random(12, 20), random(-16, 16), 0, 0, 0);
			PENY PPPPP 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY PPPP 1 A_SpawnProjectile("cloud1", random(12, 20), random(-16, 16), 0, 0, 0);
			PENY PPPPP 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY PPPP 1 A_SpawnProjectile("cloud1", random(12, 20), random(-16, 16), 0, 0, 0);
			PENY QQQQQQ 1 A_SpawnProjectile("cloud1", random(10, 18), random(-16, 16), 0, 0, 0);
			PENY QQQQQQ 1 A_SpawnProjectile("cloud1", random(10, 18), random(-16, 16), 0, 0, 0);
			PENY QQQQQQ 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY QQQQQQ 1 A_SpawnProjectile("cloud1", random(10, 18), random(-16, 16), 0, 0, 0);
			PENY QQQQQQ 1 A_SpawnProjectile("cloud1", random(10, 18), random(-16, 16), 0, 0, 0);
			PENY QQQQQQ 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY QQQQQQ 1 A_SpawnProjectile("cloud1", random(10, 18), random(-16, 16), 0, 0, 0);
			PENY QQQQQQ 1 A_SpawnProjectile("cloud1", random(10, 18), random(-16, 16), 0, 0, 0);
			PENY QQQQQQ 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY RRRRRRR 1 A_SpawnProjectile("cloud1", random(10, 16), random(-16, 16), 0, 0, 0);
			PENY RRRRRRR 1 A_SpawnProjectile("cloud1", random(10, 16), random(-16, 16), 0, 0, 0);
			PENY RRRRRRR 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY RRRRRRR 1 A_SpawnProjectile("cloud1", random(10, 16), random(-16, 16), 0, 0, 0);
			PENY RRRRRRR 1 A_SpawnProjectile("cloud1", random(10, 16), random(-16, 16), 0, 0, 0);
			PENY RRRRRRR 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY RRRRRRR 1 A_SpawnProjectile("cloud1", random(10, 16), random(-16, 16), 0, 0, 0);
			PENY RRRRRRR 1 A_SpawnProjectile("cloud1", random(10, 16), random(-16, 16), 0, 0, 0);
			PENY RRRRRRR 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY SSSSSSSS 1 A_SpawnProjectile("cloud1", random(8, 14), random(-16, 16), 0, 0, 0);
			PENY SSSSSSSS 1 A_SpawnProjectile("cloud1", random(8, 14), random(-16, 16), 0, 0, 0);
			PENY SSSSSSSS 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY SSSSSSSS 1 A_SpawnProjectile("cloud1", random(8, 14), random(-16, 16), 0, 0, 0);
			PENY SSSSSSSS 1 A_SpawnProjectile("cloud1", random(8, 14), random(-16, 16), 0, 0, 0);
			PENY SSSSSSSS 1 A_SpawnProjectile("cloud1", random(8, 14), random(-16, 16), 0, 0, 0);
			PENY SSSSSSSS 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY SSSSSSSS 1 A_SpawnProjectile("cloud1", random(8, 14), random(-16, 16), 0, 0, 0);
			PENY TTTTTTTTT 1 A_SpawnProjectile("cloud1", random(8, 12), random(-16, 16), 0, 0, 0);
			PENY TTTTTTTTT 1 A_SpawnProjectile("cloud1", random(8, 12), random(-16, 16), 0, 0, 0);
			PENY TTTTTTTTT 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY TTTTTTTTT 1 A_SpawnProjectile("cloud1", random(8, 12), random(-16, 16), 0, 0, 0);
			PENY TTTTTTTTT 1 A_SpawnProjectile("cloud1", random(8, 12), random(-16, 16), 0, 0, 0);
			PENY TTTTTTTTT 1 A_SpawnProjectile("cloud1", random(8, 12), random(-16, 16), 0, 0, 0);
			PENY TTTTTTTTT 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY UUUUUUUUUU 1 A_SpawnProjectile("cloud1", random(6, 10), random(-16, 16), 0, 0, 0);
			PENY UUUUUUUUUU 1 A_SpawnProjectile("cloud1", random(6, 10), random(-16, 16), 0, 0, 0);
			PENY UUUUUUUUUU 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY UUUUUUUUUU 1 A_SpawnProjectile("cloud1", random(6, 10), random(-16, 16), 0, 0, 0);
			PENY UUUUUUUUUU 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY UUUUUUUUUU 1 A_SpawnProjectile("cloud1", random(6, 10), random(-16, 16), 0, 0, 0);
			PENY UUUUUUUUUU 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY VVVVVVVVVVVV 1 A_SpawnProjectile("cloud1", random(6, 8),random(-16, 16), 0, 0, 0);
			PENY VVVVVVVVVVVV 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY VVVVVVVVVVVV 1 A_SpawnProjectile("cloud1", random(6, 8), random(-16, 16), 0, 0, 0);
			PENY VVVVVVVVVVVV 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY VVVVVVVVVVVV 1 A_SpawnProjectile("cloud1", random(6, 8),random(-16, 16), 0, 0, 0);
			PENY VVVVVVVVVVVV 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY WWWWWWWWWWWWWW 1 A_SpawnProjectile("cloud1", random(4, 8), random(-16, 16), 0, 0, 0);
			PENY WWWWWWWWWWWWWW 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY WWWWWWWWWWWWWW 1 A_SpawnProjectile("cloud1", random(4, 8), random(-16, 16), 0, 0, 0);
			PENY WWWWWWWWWWWWWW 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY WWWWWWWWWWWWWW 1 A_SpawnProjectile("cloud1", random(4, 8), random(-16, 16), 0, 0, 0);
			PENY XXXXXXXXXXXXXXXX 1 A_SpawnProjectile("cloud1", random(2, 8), random(-16, 16), 0, 0, 0);
			PENY XXXXXXXXXXXXXXXX 1 A_SpawnProjectile("cloud1", random(2, 8), random(-16, 16), 0, 0, 0);
			PENY XXXXXXXXXXXXXXXX 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY XXXXXXXXXXXXXXXX 1 A_SpawnProjectile("cloud1", random(2, 8), random(-16, 16), 0, 0, 0);
			PENY XXXXXXXXXXXXXXXX 1 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PENY XXXXXXXXXXXXXXXX 1 A_SpawnProjectile("cloud1", random(2, 8), random(-16, 16), 0, 0, 0);
			PENY YYYYYYYYYYYYYYYYYYYY 5 A_SpawnProjectile("cloud1", random(0, 8), random(-16, 16), 0, 0, 0);
			PENY Z -1;
			Stop;
		Ice:
			goto Death;
	}
}

class PennywiseFake : EEUniqueBoss // 3672
{
	default
	{
		//$Angled
		//$Color 12
		//$Category "Happy Time Circus/Bosses"
		Tag "Pennywise The Dancing Clown";
	
		Health 45;
		Radius 40;
		Height 112;
		Speed 8;
		MONSTER;
		MinMissileChance 40;
		scale 1.25;
		Mass 1350;
		PainChance 224;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		PainChance "Zap", 252;
		PainChance "Melee", 252;
		PainChance "Deadlight", 256;
		PainChance "Cricket", 256;
		PainChance "Bonk", 256;
		PainChance "Lead", 256;
		PainChance "Zap", 256;
		PainChance "Breakfast", 256;
		PainChance "Beats", 256;
		PainChance "Suck", 256;
		PainChance "DashBG", 256;
	
		DamageFactor "Cricket", 5.5;
		DamageFactor "Bonk", 5.5;
		DamageFactor "Lead", 5.5;
		DamageFactor "Zap", 5.5;
		DamageFactor "Breakfast", 5.5;
		DamageFactor "DashBG", 55.0;
		DamageFactor "Beats", 11.0;
		DamageFactor "Suck", 33.0;
		DamageFactor "Melee", 3;
		DamageFactor "Stomp", 3;
		DamageFactor "Trample", 3;
		DamageFactor "Deadlight", 30;
		+BOSS;
		+FLOORCLIP;
		+NOTARGET;
		+LOOKALLAROUND;
		+NODAMAGETHRUST;
		+DONTHARMSPECIES;
		-NORADIUSDMG;
		SeeSound "";
		PainSound "PENHURT";
		DeathSound "PENHURT";
		ActiveSound "ITACTIVE";
		MeleeSound "imp/melee";
		Obituary "%o was killed by Pennywise the Dancing Clown?";
		HitObituary "%o was killed by Pennywise the Dancing Clown?";
		MissileHeight 96;
		MissileType "PennySeeker";
		Species "Pennywise";
	}
	int regentimer;
	int degentimer;
	
	override void Tick()
	{
		if (!isfrozen())
		{
			if (health < (SpawnHealth() + Stamina))
			{
				if (CountInv("PWDefenseBuff")) regentimer += 3;
				regentimer += 1;
				if (regentimer >= 44)
				{
					health++;
					if (health > (SpawnHealth() + Stamina)) health = (SpawnHealth() + Stamina);
					regentimer -= 44;
				}
			}
		}
		
		EEUniqueBoss.Tick();
	}
	
	States
	{
		Spawn:
			PENY A 0 NoDelay;
			PENY AABB 5 A_Look();
			goto Spawn+1;
		See:
			PENY AABB 3
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
				if (CountInv("PWDefenseBuff")) A_SetTics(2);
			}
			PENY CCDD 3
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(2); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
				if (CountInv("PWDefenseBuff")) A_SetTics(2);
			}
			PENY A 0
			{
				if (CountInv("PWDefenseBuff"))
				{
					A_QuakeEx(random(0,1),random(0,1),random(0,2),random(5,8),0,512,"",QF_SCALEDOWN);
				}
			}
			loop;
		Melee:
			PENY E 0
			{
				A_DynamicMusic();
			}
			PENY E 1  
			{
				A_FaceTarget();
				A_DynamicMusic();
			}
			PENY E 1
			{
				A_DynamicMusic();
				A_FaceTarget();
				A_SpawnProjectile("PWSoulAttackFake", 80, random(-4, 4), random(-45, 45), 2, random(-20, 20));
				if (random(1,10) <= 3) { A_SpawnProjectile("PWSoulAttackFake", 56, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
				if (random(1,10) <= 1) { A_SpawnProjectile("PWSoulAttackFake", 24, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
				if (random(1,40) <= 1) { A_SpawnProjectile("PWSoulAttackFake", 8, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
			}
			PENY E 1 
			{
				A_DynamicMusic();
				A_FaceTarget();
				A_SpawnProjectile("PWSoulAttackFake", 32, random(-4, 4), random(-45, 45), 2, random(-20, 20));
				if (random(1,10) <= 3) { A_SpawnProjectile("PWSoulAttackFake", 56, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
				if (random(1,10) <= 1) { A_SpawnProjectile("PWSoulAttackFake", 24, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
				if (random(1,40) <= 1) { A_SpawnProjectile("PWSoulAttackFake", 8, random(-4, 4), random(-45, 45), 2, random(-20, 20)); }
			}
			Goto See;
		Missile:
			PENY A 0 
			{
				A_ClearShadow();
				A_DynamicMusic();
			}
			PENY E 9
			{
				A_DynamicMusic();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(8); }
				A_FaceTarget();
			}
			PENY E 4 
			{
				A_DynamicMusic();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }

				A_SpawnProjectile("DeadlightFake", 96, 0, 0, 1);
			}
			PENY E 9
			{
				A_DynamicMusic();
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(5); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(6); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(7); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(8); }
				A_FaceTarget();
			}
			Goto See;  
		Pain:
			PENY F 8 A_EEPain(1,random(4,6),32);
			PENY F 0 
			{
				if (random(1,4) == 1) { return resolvestate("See2"); }
				return resolvestate(null);
			}
			PENY FFFF 5 
			{
				A_SetTics(randompick(4,5,5,5,5,6));
				if (random(1,8) <= 5) A_SpawnProjectile("PWSkullSeekerFake", 96,0,random(-180, 180),1,random(-20, 20));
			}
			PENY F 0 A_Jump(64,4);
			PENY FFFF 5 
			{
				A_SetTics(randompick(4,5,5,5,5,6));
				if (random(1,8) <= 5) A_SpawnProjectile("PWSkullSeekerFake", 96,0,random(-180, 180),1,random(-20, 20));
			}
			Goto See;
		Death:
			PENY F 4
			{
				A_Scream();
				A_SetRenderStyle((alpha-0.1112),STYLE_Translucent);
			}
			PENY F 4 
			{
				A_FadeOut(0.1112);
			}
			wait;
		Ice:
			goto Death;
	}
}

class Deadlight : EEEffectProjectile
{
	default
	{
		Tag "Deadlight Shot";
		DamageFunction (5 * (4*random(1,8)));
		DamageType "DeadLight";
		Radius 8;
		Height 6;
		Speed 14;
		Scale 1;
		+SEEKERMISSILE;
		PROJECTILE;
		SeeSound "";
		DeathSound "TRANEXP";
		ExplosionRadius 96;
		ExplosionDamage 12;
		Species "Pennywise";
	}
	
	States
	{
		Spawn:
			PWT2 A 1 
			{
				if (random(1,16) > 1) { A_SeekerMissile(30,40); A_ScaleVelocity(1.0125); }
			}
			PWT2 B 1 
			{
				if (random(1,16) == 1) { A_SeekerMissile(30,40); A_ScaleVelocity(1.0125); }
				A_SpawnProjectile("Deadlight2",0, 0, 0);
			}
			PWT2 CDABCD 1
			{
				if (random(1,16) == 1) { A_SeekerMissile(30,40); A_ScaleVelocity(1.0125); }
			}
			Loop;
		Death:
			TNT1 A 0 Bright
			{
				// 1
				A_StatusEffectChecker(4);
				if (random(1,user_ailmentmaxchance) <= 2 && user_canafflict)
				{
					user_random = random(1,12);
					//if (user_random == 1) { ACS_NamedExecuteAlways("BuffTimer",0,8,21,random(105,175)); } // Silence for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 2) { ACS_NamedExecuteAlways("BuffTimer",0,8,19,random(105,175)); } // Blind for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 3) { ACS_NamedExecuteAlways("BuffTimer",0,8,20,random(105,175)); } // Sleep for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 4) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 5) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 6) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 7) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 8) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 9) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 10) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 11) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 12) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
				}

				// 2
				A_StatusEffectChecker(4);
				if (random(1,user_ailmentmaxchance) <= 2 && user_canafflict)
				{
					user_random = random(1,12);
					//if (user_random == 1) { ACS_NamedExecuteAlways("BuffTimer",0,8,21,random(105,175)); } // Silence for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 2) { ACS_NamedExecuteAlways("BuffTimer",0,8,19,random(105,175)); } // Blind for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 3) { ACS_NamedExecuteAlways("BuffTimer",0,8,20,random(105,175)); } // Sleep for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 4) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 5) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 6) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 7) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 8) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 9) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 10) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 11) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 12) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
				}

				// 3
				A_StatusEffectChecker(4);
				if (random(1,user_ailmentmaxchance) <= 2 && user_canafflict)
				{
					user_random = random(1,12);
					//if (user_random == 1) { ACS_NamedExecuteAlways("BuffTimer",0,8,21,random(105,175)); } // Silence for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 2) { ACS_NamedExecuteAlways("BuffTimer",0,8,19,random(105,175)); } // Blind for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 3) { ACS_NamedExecuteAlways("BuffTimer",0,8,20,random(105,175)); } // Sleep for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 4) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 5) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 6) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 7) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 8) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 9) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 10) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 11) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 12) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
				}

				// 4
				A_StatusEffectChecker(4);
				if (random(1,user_ailmentmaxchance) <= 2 && user_canafflict)
				{
					user_random = random(1,12);
					//if (user_random == 1) { ACS_NamedExecuteAlways("BuffTimer",0,8,21,random(105,175)); } // Silence for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 2) { ACS_NamedExecuteAlways("BuffTimer",0,8,19,random(105,175)); } // Blind for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 3) { ACS_NamedExecuteAlways("BuffTimer",0,8,20,random(105,175)); } // Sleep for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 4) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 5) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 6) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 7) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 8) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 9) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 10) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 11) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 12) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
				}

				// 5
				A_StatusEffectChecker(4);
				if (random(1,user_ailmentmaxchance) <= 2 && user_canafflict)
				{
					user_random = random(1,12);
					//if (user_random == 1) { ACS_NamedExecuteAlways("BuffTimer",0,8,21,random(105,175)); } // Silence for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 2) { ACS_NamedExecuteAlways("BuffTimer",0,8,19,random(105,175)); } // Blind for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 3) { ACS_NamedExecuteAlways("BuffTimer",0,8,20,random(105,175)); } // Sleep for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 4) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 5) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 6) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 7) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 8) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 9) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 10) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 11) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 12) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
				}

				// 6
				A_StatusEffectChecker(4);
				if (random(1,user_ailmentmaxchance) <= 2 && user_canafflict)
				{
					user_random = random(1,12);
					//if (user_random == 1) { ACS_NamedExecuteAlways("BuffTimer",0,8,21,random(105,175)); } // Silence for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 2) { ACS_NamedExecuteAlways("BuffTimer",0,8,19,random(105,175)); } // Blind for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 3) { ACS_NamedExecuteAlways("BuffTimer",0,8,20,random(105,175)); } // Sleep for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 4) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 5) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 6) { ACS_NamedExecuteAlways("BuffTimer",0,8,14,random(315,525)); } // Sap for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 7) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 8) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 9) { ACS_NamedExecuteAlways("BuffTimer",0,8,13,random(315,525)); } // Blunt for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 10) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 11) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					//else if (user_random == 12) { ACS_NamedExecuteAlways("BuffTimer",0,8,15,random(315,525)); } // Deceleratle for 6-10 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
				}
			}
			goto Death2;
		Death2:
			PWT2 E 4 Bright;
			PWT2 EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PWT2 F 4 Bright A_Explode(12,96,0,0,48);
			PWT2 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PWT2 GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG  0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PWT2 GHI 4 Bright;
			PWH4 JKL 4 Bright;
			Stop;
	}
}

class Deadlight2 : EEBaseZSC
{
	default
	{
		scale 2;
		Speed 1;
		RENDERSTYLE "Translucent";
		ALPHA 0.05;
		PROJECTILE;
		Species "Pennywise";
	}
	
	States
	{
		Spawn:
			PWHT ABCDCB 1 A_Explode(3,24,0,0,12);
			PWHT ABCDCB 2 A_Explode(3,24,0,0,12);
			PWHT ABCDCB 3 A_Explode(3,24,0,0,12);
			PWHT ABCDCB 3 A_Explode(3,24,0,0,12);
			PWHT ABCD 4 A_Explode(3,24,0,0,12);
			Stop;
		Death:
			PWHT ABCD 4 Bright A_Explode(3,24,0,0,12);
			Stop;
	}
}

//
class PWSkullSeeker : EEProjectile
{
	default
	{
		Tag "Skull Seeker";
		DamageFunction (3 * random(1,8));
		Radius 8;
		Height 6;
		Speed 9;
		Scale 1;
		+SEEKERMISSILE;
		PROJECTILE;
		//RENDERSTYLE "Add";
		//ALPHA 0.67;
		SeeSound "";
		DeathSound "BHIT3";
		Species "Pennywise";
	}
	
	States
	{
		Spawn:
			GHST ABABABABABABABABABABAB 4 A_SeekerMissile(random(4,6),28);
			GHST ABABABABABAB 4 A_SeekerMissile(random(4,6),28);
			GHST ABABABABABABABABCDEFG 4 A_SeekerMissile(random(4,6),28);
			Stop;
		Death:
			GHST CDEFG 4 Bright;
			Stop;
	}
}

//
class PWSoulAttack : EEProjectile
{  
	default
	{
		Tag "Soul Strike";
		DamageFunction (5 * random(1,8));
		RenderStyle "Add";
		Radius 6;
		Height 10;
		Speed 12;
		+Missile;
		+lowgravity;
		+NoBlockmap;
		+NoTeleport;
		+NODAMAGETHRUST;
		RENDERSTYLE "Translucent";
		ALPHA 0.5;
		SCALE 0.6;
		Species "Pennywise";
	}
	States
	{
		Spawn:
			SEEK AAAAAAAAAAAAAAAAAAAAAA 2 Bright
			{
				A_ScaleVelocity(1.01);
			}
			GLOB B 1 Bright 
			{
				A_ScaleVelocity(1.01);
			}
			GLOB A 3 Bright 
			{
				A_ScaleVelocity(1.01);
				A_Scream();
			}
			GLOB H 3 Bright 
			{
				A_ScaleVelocity(1.01);
				A_Fall();
			}
			Stop;
		Death:
			GLOB B 1 Bright 
			{
				A_ScaleVelocity(1.01);
			}
			GLOB A 3 Bright 
			{
				A_ScaleVelocity(1.01);
				A_Scream();
			}
			GLOB H 3 Bright 
			{
				A_ScaleVelocity(1.01);
				A_Fall();
			}
			Stop;
	}
} 

class PWSoulAttackFake : PWSoulAttack
{  
	default
	{
		Tag "Soul Strike";
		DamageFunction (random(1,5) * random(1,random(4,8)));
		RenderStyle "Add";
		Radius 6;
		Height 10;
		Speed 12;
		+Missile;
		+lowgravity;
		+NoBlockmap;
		+NoTeleport;
		+NODAMAGETHRUST;
		RENDERSTYLE "Translucent";
		ALPHA 0.5;
		SCALE 0.6;
		Species "Pennywise";
	}
	States
	{
		Spawn:
			SEEK AAAAAAAAAAAAAAAAAAAAAA 2 Bright
			{
				A_ScaleVelocity(1.01);
			}
			GLOB B 1 Bright 
			{
				A_ScaleVelocity(1.01);
			}
			GLOB A 3 Bright 
			{
				A_ScaleVelocity(1.01);
				A_Scream();
			}
			GLOB H 3 Bright 
			{
				A_ScaleVelocity(1.01);
				A_Fall();
			}
			Stop;
		Death:
			GLOB B 1 Bright 
			{
				A_ScaleVelocity(1.01);
			}
			GLOB A 3 Bright 
			{
				A_ScaleVelocity(1.01);
				A_Scream();
			}
			GLOB H 3 Bright 
			{
				A_ScaleVelocity(1.01);
				A_Fall();
			}
			Stop;
	}
} 

class PWSkullSeekerFake : PWSkullSeeker
{
	default
	{
		Tag "Skull Seeker";
		DamageFunction (random(1,3) * random(1,random(4,8)));
		Radius 8;
		Height 6;
		Speed 9;
		Scale 1;
		+SEEKERMISSILE;
		PROJECTILE;
		//RENDERSTYLE "Add";
		//ALPHA 0.67;
		SeeSound "";
		DeathSound "BHIT3";
		Species "Pennywise";
	}
	
	States
	{
		Spawn:
			GHST ABABABABABABABABABABAB 4 A_SeekerMissile(random(3,5),16);
			GHST ABABABABABAB 4 A_SeekerMissile(random(3,5),16);
			GHST ABABABABABABABABCDEFG 4 A_SeekerMissile(random(3,5),16);
			Stop;
		Death:
			GHST CDEFG 4 Bright;
			Stop;
	}
}

class DeadlightFake : Deadlight
{
	default
	{
		Tag "Deadlight Shot";
		DamageFunction (0);
		DamageType "DeadLight";
		Radius 8;
		Height 6;
		Speed 14;
		Scale 1;
		+SEEKERMISSILE;
		PROJECTILE;
		SeeSound "";
		DeathSound "TRANEXP";
		ExplosionRadius 0;
		ExplosionDamage 0;
		Species "Pennywise";
	}
	
	States
	{
		Spawn:
			PWT2 A 1 
			{
				if (random(1,16) > 1) { A_SeekerMissile(30,40); A_ScaleVelocity(1.0125); }
			}
			PWT2 B 1 
			{
				if (random(1,16) == 1) { A_SeekerMissile(30,40); A_ScaleVelocity(1.0125); }
				A_SpawnProjectile("Deadlight2Fake",0, 0, 0);
			}
			PWT2 CDABCD 1
			{
				if (random(1,16) == 1) { A_SeekerMissile(30,40); A_ScaleVelocity(1.0125); }
			}
			Loop;
		Death:
			PWT2 E 4 Bright;
			PWT2 EEEEEEEEEEEEEEEEEEEE 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PWT2 F 4 Bright;
			PWT2 FFFFFFFFFFFFFFFFFFFF 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PWT2 GGGGGGGGGGGGGGGGGGGG 0 A_SpawnProjectile("Sparkles", 8, 0, random(-180, 180), 2, random(-180, 180));
			PWT2 GHI 4 Bright;
			PWH4 JKL 4 Bright;
			Stop;
	}
}

class Deadlight2Fake : Deadlight2
{
	default
	{
		scale 2;
		Speed 1;
		RENDERSTYLE "Translucent";
		ALPHA 0.05;
		PROJECTILE;
		Species "Pennywise";
	}
	
	States
	{
		Spawn:
			PWHT ABCDCB 1;
			PWHT ABCDCB 2;
			PWHT ABCDCB 3;
			PWHT ABCDCB 3;
			PWHT ABCD 4;
			Stop;
		Death:
			PWHT ABCD 4 Bright;
			Stop;
	}
}

// Monsters
class GoreWormNew : EECreature
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "Happy Time Circus/Monsters";
		Tag "Gore Worm";
		Health 20;
		Radius 8;
		Height 4;
		Speed 3;
		Mass 20;
		MONSTER;
		+FLOORCLIP;
		+RANDOMIZE;
		Scale 0.75;
		MeleeDamage 1;
		SeeSound "HSEE";
		PainSound "HAND1";
		DeathSound "";
		ActiveSound "HAND1";
		MeleeSound "SKULBITE";
		Obituary "Um... how the hell did %o die?! o_O;";
		
		PainChance 200;
		Painchance "Fist", 255; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
	}

	States
	{
		Spawn:
			WORM A 0 NoDelay;
			WORM A 20 A_UnSetShootable();
			WORM A 4 A_SetShootable();
			WORM A 4 A_Look();
			Goto Spawn+1;
		See:   
			WORM A 0;
			WORM ABCB 3 A_EEWander(0,1,3,1,1);
			WORM A 0 A_JumpIfHealthLower(6,2);
			Loop;
			WORM A 0;
			WORM A 0 A_Jump(64,1);
			WORM ABCB 1 A_EEWander(0,1,3,1,1);
			Goto See;
		Melee:
			WORM C 0;
			Goto Death;
		Pain:
			WORM A 8 A_EEPain();
			Goto See ;
		Death:
			WORM A 5 A_SpawnProjectile("ZGut2", 0, 0, 30);
			WORM B 2 A_StartSound("splat11",CHAN_BODY);
			WORM B 2 A_TossGib();
			WORM B 3 A_Scream();
			WORM C 2 A_TossGib();
			WORM C 1 A_SpawnProjectile("BSplatter", 0, 0, 0, 1);
			WORM C 5 A_SpawnProjectile("ZGut3", 0, 0, -40);
			Stop;
	}
}

class FluffyNew : EECreature
{
	int user_res;
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "Happy Time Circus/Monsters";
		Tag "Fluffy";

		Health 1000;
		Radius 25;
		Height 56;
		Speed 40;
		Mass 250;
		PainChance 80;
		Painchance "Fist", 120; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 200; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Zap", 1.25;
		Painchance "Zap", 100;
		DamageFactor "Cricket", 0.25;
		Painchance "Cricket", 20;
		DamageFactor "Bonk", 0.25;
		Painchance "Bonk", 20;
		DamageFactor "Breakfast", 0.25;
		Painchance "Breakfast", 20;
		DamageFactor "CherryBomb", 0.25;
		Painchance "CherryBomb", 20;
		DamageFactor "Spinner", 0.25;
		Painchance "Spinner", 20;
		DamageFactor "Ice", 0.25;
		Painchance "Ice", 20;
		DamageFactor "BRocket", 2.5;
		Painchance "BRocket", 200;
		DamageFactor "Popper", 1.75;
		Painchance "Popper", 140;
		DamageFactor "Beats", 0.25;
		Painchance "Beats", 256;
		DamageFactor "Suck", 0.0;
		Painchance "Suck", 0;
		MONSTER;
		+FLOORCLIP;
		+NOCLIP;
		+GHOST;
		+NOLIFTDROP;
		MELEEDAMAGE 7;
		SeeSound "BHIT1";
		PainSound "BHIT5";
		DeathSound "BTALK3";
		ActiveSound "BTALK7";
		MeleeSound "BCHOMP";
		HitObituary "%o was playing with Fluffy!";
		MissileHeight 12;
		MissileType "SkullSeeker";

		dropitem "KnightGown3", 256;
		dropitem "KnightGown4", 64;
		dropitem "GoldApple", 128;
		dropitem "GoldApple", 128;
		dropitem "GoldApple", 64;
		dropitem "GoldApple", 64;
		dropitem "GoldApple", 64;
		dropitem "GoldApple", 64;
		dropitem "GoldApple", 32;
		dropitem "GoldApple", 32;
		dropitem "GoldApple", 32;
		dropitem "GoldApple", 32;
	}

	States 
	{
		Spawn:
			FLUF A 0 NoDelay;
			FLUF A 2 A_Look();
			goto Spawn+1;
		See:
			FLUF A 0;
			FLUF ABCBJ 2
			{
				if (user_res && random(1,16) <= (3+(user_res*1.5))) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			FLUF KL 1;
			FLUF M 1 
			{
				if (user_res && random(1,16) <= (3+(user_res*1.5))) { A_SetTics(1); }
				A_SpawnProjectile("ZGut", 0, 0, 0, 0);
			}
			FLUF M 1 
			{
				A_StartSound("SPLAT5");
				A_DynamicMusic();
			}
			FLUF LK 1;
			FLUF J 1 A_Jump((124+(user_res*16)),2);
			GoTo See;
			FLUF K 0;
			FLUF K 0; 
			FLUF K 0 
			{
				A_SpawnProjectile("JSkull_Image1", 0, 0, 0, 1); 
				A_DynamicMusic();
			}
			GoTo See;
		Missile:   
			TNT1 A 0
			{
				A_DynamicMusic();
			}
			FLUF A 0 A_Jump(124,8);
			FLUF A 0 A_Jump(156,2);
			FLUF A 0 A_Jump(99,10);
			FLUF AB 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			FLUF C 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();

				A_CustomComboAttack("SkullSeeker", 28, (7*random((1+(user_res * 1.5)),10)*(user_res * 1.5)), "BCHOMP");
			}
			Goto See;
			FLUF AB 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_FaceTarget();
			}
			FLUF C 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }

				A_SpawnProjectile("SkullSeeker", 28, -4, 0, 1);
			}
			Goto See;
			FLUF AB 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_FaceTarget();
			}
			FLUF C 2
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }

				A_SpawnProjectile("SkullSeeker", 28, -12, -60, 1);
			}
			FLUF B 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			FLUF C 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }

				A_SpawnProjectile("SkullSeeker", 28, -4, 60, 1);
			}
			Goto See;
			FLUF AB 2 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_FaceTarget();
			}
			FLUF C 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }

				A_SpawnProjectile("SkullSeeker", 28, 12, 0, 1);
			}
			Goto See;
		Melee:
			TNT1 A 0
			{
				A_DynamicMusic();
			}
			FLUF ABC 4  
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			FLUF B 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
				
				A_CustomMeleeAttack((7*random((1+(user_res * 1.5)),10)*(user_res * 1.5)),"BCHOMP");
			}
			Goto See;
		Pain:
			FLUF C 2;
			FLUF C 3 A_EEPain();
			Goto See ;
		Death:
			TNT1 A 0 { user_ressurrectstr += random(4,5); }
			FLUF JKLMN 10;
			FLUF N 100;
		RegenCycle:
			FLUF N 0 CanRaise Thing_Raise(0);
			FLUF N 5;
			loop;
		Raise:
			FLUF M 10 
			{
				user_res++;
				A_MonsterStatsHP_ATK_DEF_SPD(0,3); // multiplies the level of the Resurrected Fluffy by 16
				bNOPAIN = true;
			}
			FLUF LKJ 10;
			GoTo See;
		Ice:
			goto Death;
	}
}

class MiniFluffyNew : EECreature
{
	default
	{
		Tag "Mini Fluffy";
		//$Angled;
		//$Color 12;
		//$Category "Happy Time Circus/Monsters";
		Health 60;
		Radius 8;
		Height 25;
		Speed 6;
		Mass 40;
		PainChance 80;
		Painchance "Fist", 120; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 200; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Zap", 1.25;
		Painchance "Zap", 100;
		MONSTER;
		+FLOORCLIP;
		MELEEDAMAGE 1;
		SeeSound "BHIT1";
		PainSound "BHIT5";
		DeathSound "BTALK3";
		ActiveSound "BTALK7";
		MeleeSound "BCHOMP";
		HitObituary "%o was playing with Fluffy!";

		dropitem "GreenArmor", 2;
		dropitem "BlueArmor", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
	}
	
	States 
	{
		Spawn:
			RAIN B 0 NoDelay; 
			RAIN B 5 A_Look();
			goto Spawn+1;
		See:
			SBUN H 0;
			SBUN HHHHIIIJJ 3;
		See2:
			SBUN ABCCB 1
			{
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			loop;
		Melee:
			TNT1 A 0
			{
				A_DynamicMusic();
			}
			SBUN ABC 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			SBUN B 6 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();
				
				A_CustomMeleeAttack(1*random(1,10),"BCHOMP");
			}
			Goto See2;
		Pain:
			SBUN D 8 A_EEPain();
			SBUN E 8 A_UnSetShootable();
			SBUN F 100;
			SBUN F 0 A_Jump(128,3);
			SBUN E 8;
			SBUN D 8 A_SetShootable();
			Goto See2;
			SBUN F 8 A_UnSetShootable();
			SBUN F 100;  
			SBUN E 8 A_SetShootable();
			Goto See2;
		Death:
			TNT1 A 0;
			SBUN DEF 8;
			SBUN G -1;
			Stop;
		Ice:
			SBUN D 5 A_GenericFreezeDeath();
			SBUN D 1 A_FreezeDeathChunks();
			wait;
	}
}

class JumpingSkullNew : EECreature
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "Happy Time Circus/Monsters";
		Tag "Bouncing Skull";
	
		Health 40;
		Radius 8;
		Height 20;
		Speed 9;
		Mass 20;
		PainChance 90;
		Painchance "Fist", 135; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 225; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Zap", 1.25;
		Painchance "Zap", 112;
		DamageFactor "Cricket", 2.0;
		Painchance "Cricket", 180;
		DamageFactor "Bonk", 2.0;
		Painchance "Bonk", 180;
		DamageFactor "CherryBomb", 1.334;
		Painchance "CherryBomb", 120;
		DamageFactor "Spinner", 1.334;
		Painchance "Spinner", 120;
		DamageFactor "BRocket", 1.334;
		Painchance "BRocket", 120;
		DamageFactor "Popper", 0.667;
		Painchance "Popper", 60;
		MONSTER;
		+FLOORCLIP;
		+RANDOMIZE;
		+COUNTKILL;
		+CANPASS;
		MELEEDAMAGE 1;
		MeleeRange 25;
		SeeSound "LAUGH1";
		PainSound "SKULPN2";
		DeathSound "JDIE";
		ActiveSound "LAUGH1";
		MeleeSound "SKULBITE";
		HitObituary "%o was bitten by a bouncing skull.";
	
		dropitem "GreenArmor", 2;
		dropitem "BlueArmor", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
	}
	
	States
	{
		Spawn:
			JSKL A 0 NoDelay;
			JSKL A 4 A_Look();
			goto Spawn+1;
		See:
			JSKL A 0;
			JSKL ABCB 2
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;
		Melee:
			TNT1 A 0
			{
				A_DynamicMusic();
			}
			JSKL AB 3 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();;
			}
			JSKL C 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
				
				A_CustomMeleeAttack(random(2,6)*1,"SKULBITE","none");
			}
			JSKL B 3  
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();
			}
			Goto See;
		Pain:
			JSKL B 4 A_EEPain();
			Goto See;
		Death:
			TNT1 A 0;
			JSKL A 5 A_Scream();
			JSKL D 4 A_Fall();
			JSKL D 4 A_TossGib();
			JSKL D 0 A_TossGib();
			JSKL D 0 A_TossGib();
			JSKL D 0 A_TossGib();
			JSKL D 0 A_TossGib();
			JSKL E 8 A_SpawnProjectile("ZGut2", 0, 0, 30);
			JSKL F 8 A_SpawnProjectile("ZGut3", 0, 0, -40);
			JSKL G 8 A_SpawnProjectile("ZGut2", 0, 0, 90);
			JSKL H 8 A_SpawnProjectile("ZGut3", 0, 0, 180);
			JSKL I -1;
			Stop;
		Ice:
			JSKL B 5 A_GenericFreezeDeath();
			JSKL B 1 A_FreezeDeathChunks();
			wait;
		Raise:
			JSKL H 8;
			JSKL GFED 8;
			goto See;
	}
}

class JumpingSkull2New : EECreature
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "Happy Time Circus/Monsters";
		Tag "Bouncing Skull";

		Health 40;
		Speed 10;
		Radius 8;
		Height 32;
		MELEEDAMAGE 1;
		MeleeRange 22;
		MeleeSound "BCHOMP";
		Scale 1.2;
		PainChance 70;
		Painchance "Fist", 105; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 175; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Zap", 1.25;
		Painchance "Zap", 88;
		DamageFactor "Cricket", 2.0;
		Painchance "Cricket", 140;
		DamageFactor "Bonk", 2.0;
		Painchance "Bonk", 140;
		DamageFactor "CherryBomb", 1.334;
		Painchance "CherryBomb", 93;
		DamageFactor "Spinner", 1.334;
		Painchance "Spinner", 93;
		DamageFactor "BRocket", 1.334;
		Painchance "BRocket", 93;
		DamageFactor "Popper", 0.667;
		Painchance "Popper", 47;
		MONSTER;
		RENDERSTYLE "Translucent";
		ALPHA 0.67;
		dropitem "GreenArmor", 2;
		dropitem "BlueArmor", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
	}
	
	States
	{
		Spawn:
			JSKL A 0 NoDelay;
			JSKL A 4 A_Look();
			goto Spawn+1;
		See:
			JSKL A 0;
			JSKL ABCB 2
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			JSKL A 0 
			{
				A_SpawnProjectile("PennywiseHeadProj", 8, 0, random(-180, 180), 2, random(0, 30));
			}
			Loop;
		Melee:
			TNT1 A 0
			{
				A_DynamicMusic();
			}
			JSKL AB 3 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();
			}
			JSKL C 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
				
				A_CustomMeleeAttack(random(3,8)*1,"SKULBITE","none");
			}
			JSKL B 3  
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(2); }
				A_FaceTarget();
			}
			Goto See;
		Pain:
			JSKL B 4 A_EEPain();
			Goto See;
		Death:
			TNT1 A 0;
			JSKL A 5 A_Scream();
			JSKL D 4 A_Fall();
			JSKL D 4 A_TossGib();
			BBLD A 0 A_SpawnProjectile("BloodSpeck2", 8, 0, random(-180, 180), 2, random(-180, 180));
			JSKL D 0 A_TossGib();
			JSKL D 0 A_TossGib();
			JSKL D 0 A_SpawnProjectile("BloodSpeck2", 8, 0, random(-180, 180), 2, random(-180, 180));
			JSKL D 0 A_SpawnProjectile("BloodSpeck2", 8, 0, random(-180, 180), 2, random(-180, 180));
			JSKL D 0 A_TossGib();
			JSKL D 0 A_SpawnProjectile("BloodSpeck2", 8, 0, random(-180, 180), 2, random(-180, 180));
			JSKL D 0 A_TossGib();
			JSKL D 0 A_SpawnProjectile("BloodSpeck2", 8, 0, random(-180, 180), 2, random(-180, 180));
			JSKL E 8 A_SpawnProjectile("ZGut2", 0, 0, 30);
			JSKL F 8 A_SpawnProjectile("ZGut3", 0, 0, -40); 
			JSKL G 8 A_SpawnProjectile("ZGut2", 0, 0, 90);
			JSKL H 8 A_SpawnProjectile("ZGut3", 0, 0, 180);
			JSKL I -1;
			Stop;
		Ice:
			JSKL B 5 A_GenericFreezeDeath();
			JSKL B 1 A_FreezeDeathChunks();
			wait;
	}
}

class PossessedBalloonNew : EECreature
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "Happy Time Circus/Monsters";
		Tag "Possessed Balloon";
		EECreature.ActorFamily "Balloon";

		Health 15;
		Radius 15;
		Height 40;
		Speed 2;
		FloatSpeed 3;
		Mass 20;
		PainChance 50;
		Painchance "Fist", 75; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 125; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Zap", 1.5;
		Painchance "Zap", 75;
		DamageFactor "Suck", 0.05;
		PainChance "Suck", 2;
		MONSTER;
		+LOOKALLAROUND;
		+FLOORCLIP;
		+NOGRAVITY;
		+FLOAT;
		+COUNTKILL;
		+CANPASS;
		+PUSHABLE;
		+FloatBob;
		MELEEDAMAGE 1;
		MeleeRange 28;
		SeeSound "";
		PainSound "BOONBITE";
		DeathSound "";
		ActiveSound "BLOONACT";
		MeleeSound "BOONBITE";
		HitObituary "%o wanted to float with all the pretty balloons.";

		dropitem "GreenArmor", 1;
		dropitem "BlueArmor", 1;
		dropitem "HealthBonus", 1;
		dropitem "HealthBonus", 1;
		dropitem "ArmorBonus", 1;
		dropitem "ArmorBonus", 1;
	}
	
	States
	{
		Spawn:
			BSTN A 0 NoDelay;
			BSTN A 2 A_FloatLook(16);
			goto Spawn+1;
		See:
			BSTN A 0;
			BSTN A 2
			{
				A_FloatChaseCheck(4,8,12,16,0.67,0.67);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			Loop;
		Melee:
			TNT1 A 0 A_DynamicMusic();
			BSTN BC 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			BSTN D 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
				
				A_CustomMeleeAttack(random(1,6)*1,"BOONBITE","none");
			}
			BSTN CB 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			Goto See;
		Pain:
			BSTN B 3 A_FloatPain(0,8,32);
			Goto See;
		Death:
			TNT1 A 0;
			BSTN B 3;
			BSTN C 3 A_SpawnProjectile("BloodSpeck1", 8, 0, random(-180, 180), 2, random(0, -90));
			BSTN D 3 A_Scream();
			BSTN DDDDDD 0 A_SpawnProjectile("BloodSpeck1", 8, 0, random(-180, 180), 2, random(0, -90));
			BSTN E 3 A_Fall();
			BSTN EEEEE 0 A_SpawnProjectile("BloodSpeck1", 8, 0, random(-180, 180), 2, random(0, -90));
			TNT1 A 0 A_SpawnProjectile("BSplatter", 40, 0, 0, 1);
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			TNT1 A 0 A_SpawnItemEx("BloodNonSolid", 0, 0, 0, random(-8,8), random(-8,8), random(-8,8));
			BSTN F 3 A_SpawnProjectile("BalloonSoul", 28, 0, random(-180, 180), 2, random(15, -80));
			BSTN GHIJKLM 3;
			Stop;
		Ice:
			BSTN B 5 A_GenericFreezeDeath();
			BSTN B 1 A_FreezeDeathChunks();
			wait;
	}
}

class BingoNew : EECreature
{
	int user_flametimer;
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "Happy Time Circus/Monsters";
		Tag "Bingo";

		Health 400;
		Speed 5;
		Radius 18;
		Height 56;
		Mass 300;
		Meleedamage 1;
		REACTIONTIME 8; 
		PainChance 128;
		Painchance "Fist", 192; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Zap", 1.25;
		Painchance "Zap", 160;
		MONSTER;
		+FLOORCLIP;
		+NOGRAVITY;
		+FLOAT;
		+PUSHABLE;
		+NORADIUSDMG;
		+FloatBob;
		+SPAWNFLOAT;
		scale 0.85;
		SeeSound "CHEDSEE";
		PainSound "REVN3";
		DeathSound "";
		ActiveSound "CHEDLAF";
		Obituary "%o got blasted by a freaky clown head.";
		MissileHeight 12;
		MissileType "RevRocket";
		DropItem "GasRocketLauncher", 255;
		DropItem "ClownSouls", 64;

		dropitem "GreenArmor", 2;
		dropitem "BlueArmor", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "HealthBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
		dropitem "ArmorBonus", 2;
	}

	States 
	{
		Spawn:
			CHED A 0 NoDelay;
			CHED A 10 A_FloatLook(8);
			goto Spawn+1;
		See: 
			CHED A 0;
			CHED A 0 A_StartSound("DRONE");
			CHED AAAAAAAA 2
			{
				A_FloatChaseCheck(2,4,6,8,0.4,0.4);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				user_flametimer += 1;
				if (user_flametimer == 2) 
				{
					A_SpawnProjectile("RFlame", -8, 0, 0, 1);
					user_flametimer == 0;
				}
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			Goto See;
		Missile:   
			TNT1 A 0
			{
				A_DynamicMusic();
			}
			CHED A 0 A_Jump(104,9);
			CHED A 0 A_Jump(136,2);
			CHED A 0 A_Jump(88,13);
			CHED A 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			CHED A 6 Bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(3); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(4); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { A_SetTics(5); }
				A_FaceTarget();

				A_CustomComboAttack("RevRocket", 12, (1*random(1,8)), "imp/melee");
			}
			Goto See;
			CHED A 2 Bright
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();
			}
			CHED A 2 Bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();

				A_SpawnProjectile("RevRocket", 12, -4, 0, 1);
			}
			CHED A 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			Goto See;
			CHED A 2 Bright
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();
			}
			CHED A 2 Bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();

				A_SpawnProjectile("RevRocket", 12, -12, 60, 1);
			}
			CHED A 2 Bright
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();
			}
			CHED A 2 Bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();

				A_SpawnProjectile("RevRocket", 12, -4, 60, 1);
			}
			CHED A 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			Goto See;
			CHED A 4 Bright
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			CHED A 2 Bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();

				A_SpawnProjectile("RevRocket", 12, 12, 0, 1);
			}
			CHED A 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) { A_SetTics(3); }
				A_FaceTarget();
			}
			Goto See;
		Pain: 
			CHED A 4 A_FloatPain(0,4,64);
			Goto See;
		Death:
			TNT1 A 0;
			CHED A 1 A_Scream();
			CHED B 6 A_NoBlocking();
			CHED CD 6;
			CHED EFGHIJKL 4;
			CHED M 4;
			Stop;
		Ice:
			CHED A 5 A_GenericFreezeDeath();
			CHED A 1 A_FreezeDeathChunks();
			wait;
	}
}

class TinyBingoNew : EECreature
{
	default
	{
		//$Angled;
		//$Color 12;
		//$Category "Happy Time Circus/Monsters";
		Tag "Tiny Bingo";

		Health 35;
		Speed 6;
		Radius 9;
		Height 24;
		Mass 300;
		Meleedamage 1;
		REACTIONTIME 8;
		PainChance 128;
		Painchance "Fist", 192; // Fist attacks have a +50% chance of stunning an enemy
		Painchance "Kick", 255; // Kick attacks have a +150% chance of stunning an enemy
		DamageFactor "Zap", 1.25;
		Painchance "Zap", 160;
		DamageFactor "Suck", 5.0;
		PainChance "Suck", 256;
		MONSTER;
		+FLOORCLIP;
		+NOGRAVITY;
		+FLOAT;
		+PUSHABLE;
		+FloatBob;
		+SPAWNFLOAT;
		scale 0.35;
		SeeSound "TINY2";
		PainSound "TINYPAIN";
		DeathSound "TINYDIE";
		ActiveSound "TINYACT";
		Obituary "%o got blasted by a freaky clown head.";
		MissileHeight 12;
		MissileType "MyBall";
		DropItem "ClownSouls", 5;

		dropitem "GreenArmor", 4;
		dropitem "BlueArmor", 4;
		dropitem "HealthBonus", 4;
		dropitem "ArmorBonus", 4;
	}

	States
	{
		Spawn:
			CHED A 0 NoDelay;
			CHED A 10 A_FloatLook(16);
			goto Spawn+1;
		See: 
			CHED A 0;
			CHED A 2
			{
				A_FloatChaseCheck(4,8,12,16,0.6,0.6);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 60) { bAVOIDMELEE = true; }
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(1); }
				A_EEChase("Melee","Missile",0,1,3,1,1);
			}
			Goto See;
		Missile:   
			TNT1 A 0
			{
				A_DynamicMusic();
			}
			CHED A 4
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
				A_FaceTarget();
			}
			CHED A 2 Bright 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 240) { A_SetTics(1); }
				A_FaceTarget();

				A_SpawnProjectile("TinyBingoBall", 12, -8, 0, 1);
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 90) 
				{
					A_SpawnProjectile("TinyBingoBall", 18, -12, 0, 1);
					A_SpawnProjectile("TinyBingoBall", 6, -4, 0, 1);
				}
			}
			CHED A 4 
			{
				if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 180) { A_SetTics(2); }
				else if (exex_monsterlevelenabledflags && CountInv("MonsterLevel") > 120) { A_SetTics(3); }
				A_FaceTarget();
			}
			Goto See;
		Pain: 
			CHED A 4 A_FloatPain(0,8,48);
			Goto See;
		Death:
			TNT1 A 0;
			CHED A 1 A_Scream();
			CHED B 6 A_NoBlocking();
			CHED CD 6;
			CHED EFGHIJKL 4;
			CHED M 4;
			Stop;
		Ice:
			CHED A 5 A_GenericFreezeDeath();
			CHED A 1 A_FreezeDeathChunks();
			wait;
	}
} 

